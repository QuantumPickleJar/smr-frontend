{"version":3,"file":"CompatibilityButton.423cd887.js","sources":["../../../../../../src/lib/components/mods/compatibility/OutdatedBanner.svelte","../../../../../../src/lib/components/mods/compatibility/CompatibilityIcon.svelte","../../../../../../src/lib/components/mods/compatibility/CompatibilityStateText.svelte","../../../../../../src/lib/components/mods/compatibility/CompatibilityInfo.svelte","../../../../../../src/lib/modals/CompatibilityModal.svelte","../../../../../../src/lib/components/mods/compatibility/CompatibilityButton.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import type { CompatibilityInfoInput } from '$lib/generated';\n  import { CompatibilityState } from '$lib/generated';\n\n  export let compatibility: CompatibilityInfoInput;\n  export let logo = false;\n\n  function Worst(input: CompatibilityInfoInput): CompatibilityState {\n    const EA = input.EA.state;\n    if (EA == CompatibilityState.Broken) {\n      // Broken is always the worst\n      return EA;\n    }\n    if (EA == CompatibilityState.Works) {\n      return input.EXP.state; // Anything other than Works is worse\n    }\n    if (input.EXP.state != CompatibilityState.Works) {\n      // If it's not better then it is the worst\n      return input.EXP.state;\n    }\n    return EA;\n  }\n\n  let worst = CompatibilityState.Works;\n  $: if (compatibility) {\n    worst = Worst(compatibility);\n  } else {\n    worst = CompatibilityState.Works;\n  }\n  $: works = worst === CompatibilityState.Works;\n</script>\n\n{#if !works}\n  <div\n    class=\"mod-outdated-stripe\"\n    class:mod-damaged={worst === CompatibilityState.Damaged}\n    class:mod-broken={worst === CompatibilityState.Broken}\n    class:mod-logo-outdated={logo} />\n{/if}\n","<script lang=\"ts\">\n  import type { CompatibilityInput } from '$lib/generated';\n  import { CompatibilityState } from '$lib/generated';\n\n  export let compatibility: CompatibilityInput;\n  export let EXP = false;\n  let iconText = 'rocket_launch';\n  if (EXP) {\n    iconText = 'science';\n  }\n</script>\n\n<p\n  class=\"material-icons text-sm\"\n  class:mod-state-works={compatibility?.state === CompatibilityState.Works}\n  class:mod-state-damaged={compatibility?.state === CompatibilityState.Damaged}\n  class:mod-state-broken={compatibility?.state === CompatibilityState.Broken}\n  class:mod-state-unknown={!compatibility}>\n  {iconText}\n</p>\n","<script lang=\"ts\">\n  import type { CompatibilityState } from '$lib/generated';\n  import { getTranslate } from '@tolgee/svelte';\n  export let state: CompatibilityState;\n\n  export const { t } = getTranslate();\n\n  const classForState = (s: CompatibilityState): string => `mod-state-${s.toString().toLowerCase()}`;\n</script>\n\n<p class=\"{classForState(state)} mod-state\">{$t(`compatibility-info.state.${state.toString().toLowerCase()}`)}</p>\n","<script lang=\"ts\">\n  import type { CompatibilityInfoInput } from '$lib/generated';\n  import CompatibilityStateText from '$lib/components/mods/compatibility/CompatibilityStateText.svelte';\n  import { markdown } from '../../../utils/markdown';\n  import { getTranslate } from '@tolgee/svelte';\n\n  export let compatibility: CompatibilityInfoInput;\n\n  export const { t } = getTranslate();\n  export const compatibilityStateDescriptions: {\n    [key: string]: string;\n  } = {\n    Works: $t('compatibility-info.state.works.description'),\n    Damaged: $t('compatibility-info.state.damaged.description'),\n    Broken: $t('compatibility-info.state.broken.description'),\n    Unknown: $t('compatibility-info.state.unknown.description')\n  };\n</script>\n\n<div>\n  {$t('compatibility-info.maintained-by')}\n  <a href=\"https://discord.gg/xkVJ73E\" style=\"text-decoration: underline\">{$t('discord')}</a>!\n</div>\n<br />\n{#if compatibility}\n  <div>{$t('early-access')}: <CompatibilityStateText state={compatibility?.EA?.state} /></div>\n  <div class=\"compatibility-state-description\">\n    {compatibilityStateDescriptions[compatibility?.EA?.state || 'Unknown']}\n  </div>\n  {#if compatibility.EA.note}\n    <div>\n      {$t('compatibility-info.note')}: {#await markdown(compatibility.EA.note) then rendered}\n        <!-- eslint-disable -->\n        {@html rendered}\n      {/await}\n    </div>\n  {/if}\n  <div>{$t('experimental')}: <CompatibilityStateText state={compatibility?.EXP?.state} /></div>\n  <div class=\"compatibility-state-description\">\n    {compatibilityStateDescriptions[compatibility?.EXP?.state || 'Unknown']}\n  </div>\n  {#if compatibility.EXP.note}\n    <div>\n      {$t('compatibility-info.note')}: {#await markdown(compatibility.EXP.note) then rendered}\n        <!-- eslint-disable -->\n        {@html rendered}\n      {/await}\n    </div>\n  {/if}\n{:else}\n  <div>\n    {compatibilityStateDescriptions.Unknown}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import CompatibilityInfo from '$lib/components/mods/compatibility/CompatibilityInfo.svelte';\n  import type { CompatibilityInfoInput } from '$lib/generated';\n  import { getTranslate } from '@tolgee/svelte';\n\n  export let compatibility: CompatibilityInfoInput;\n\n  export const { t } = getTranslate();\n</script>\n\n<div class=\"card p-4 flex flex-col gap-2\">\n  <h2 class=\"text-2xl\">{$t('compatibility-info')}</h2>\n  <div>\n    <CompatibilityInfo {compatibility} />\n  </div>\n</div>\n","<script lang=\"ts\">\n  import type { CompatibilityInfoInput } from '$lib/generated';\n  import CompatibilityIcon from './CompatibilityIcon.svelte';\n  import { getTranslate } from '@tolgee/svelte';\n  import { getModalStore } from '@skeletonlabs/skeleton';\n  import CompatibilityModal from '$lib/modals/CompatibilityModal.svelte';\n\n  export let compatibility: CompatibilityInfoInput;\n\n  export const { t } = getTranslate();\n\n  const modalStore = getModalStore();\n  const openCompatibility = () => {\n    modalStore.trigger({\n      type: 'component',\n      component: {\n        ref: CompatibilityModal,\n        props: {\n          compatibility\n        }\n      }\n    });\n  };\n</script>\n\n<button\n  class=\"btn text-xs px-1 py-0 variant-soft-surface min-w-0 m-0\"\n  title={$t('compatibility-info.button')}\n  on:click={openCompatibility}>\n  <CompatibilityIcon compatibility={compatibility?.EA} />\n  <CompatibilityIcon compatibility={compatibility?.EXP} EXP={true} />\n</button>\n"],"names":["ctx","CompatibilityState","Damaged","Broken","insert_hydration_dev","target","div","anchor","create_if_block","compatibility","$$props","logo","Worst","input","EA","state","Works","EXP","worst","works","toggle_class","p","iconText","t_1_value","toString","toLowerCase","attr_dev","p_class_value","dirty","set_data_dev","t_1","t","getTranslate","classForState","s","Unknown","t0_value","t3_value","t6_value","t9_value","note","create_if_block_2","create_if_block_1","div0","div1","div2","div3","current","t0","t3","t6","t9","handle_promise","promise","markdown","info","html_tag","raw_value","t2_value","append_hydration_dev","a","br","t2","compatibilityStateDescriptions","$t","h2","button","button_title_value","compatibilityicon0_changes","compatibilityicon1_changes","modalStore","getModalStore","openCompatibility","trigger","type","component","ref","CompatibilityModal","props"],"mappings":"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"}