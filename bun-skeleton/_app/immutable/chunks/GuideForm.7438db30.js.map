{"version":3,"file":"GuideForm.7438db30.js","sources":["../../../../../../src/lib/models/guides.ts","../../../../../../src/lib/components/guides/GuideForm.svelte"],"sourcesContent":["import * as zod from 'zod';\n\nexport type GuideData = {\n  name: string;\n  short_description: string;\n  guide: string;\n};\n\nexport const guideSchema = zod.object({\n  name: zod.string().min(3).max(32),\n  short_description: zod.string().min(16).max(128),\n  guide: zod.string()\n});\n","<script lang=\"ts\">\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { reporter, ValidationMessage } from '@felte/reporter-svelte';\n  import type { GuideData } from '$lib/models/guides';\n  import { guideSchema } from '$lib/models/guides';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { markdown } from '$lib/utils/markdown';\n  import { getTranslate } from '@tolgee/svelte';\n\n  export const { t } = getTranslate();\n\n  export let onSubmit: (data: GuideData) => void;\n  export let initialValues: GuideData | undefined = {\n    name: '',\n    guide: '',\n    short_description: ''\n  };\n  export let submitText = $t('entry.create');\n\n  const { form, data } = createForm<GuideData>({\n    initialValues: initialValues,\n    extend: [validator({ schema: guideSchema }), reporter],\n    onSubmit: (submitted: GuideData) => onSubmit(trimNonSchema(submitted, guideSchema))\n  });\n\n  $: preview = ($data.guide as string) || '';\n</script>\n\n<form use:form>\n  <div class=\"grid grid-flow-row gap-6\">\n    <div class=\"grid grid-flow-row gap-2\">\n      <label class=\"label\">\n        <span>{$t('entry.name')}</span>\n        <input type=\"text\" bind:value={$data.name} required class=\"input p-2\" />\n      </label>\n      <ValidationMessage for=\"name\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <label class=\"label\">\n        <span>{$t('entry.short-description')}</span>\n        <input type=\"text\" bind:value={$data.short_description} required class=\"input p-2\" />\n      </label>\n      <ValidationMessage for=\"short_description\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid gap-6 split\">\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <label class=\"label\">\n          <span>{$t('guide')}</span>\n          <textarea class=\"vertical-textarea textarea p-2\" bind:value={$data.guide} required rows={10} />\n        </label>\n        <ValidationMessage for=\"guide\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <span>{$t('preview')}:</span>\n        {#await markdown(preview) then previewRendered}\n          <div class=\"markdown-content right\">{@html previewRendered}</div>\n        {/await}\n      </div>\n    </div>\n\n    <div>\n      <button class=\"btn variant-ghost-primary\" type=\"submit\">{submitText}</button>\n    </div>\n  </div>\n</form>\n\n<style lang=\"postcss\">\n  .split {\n    grid-template-columns: 50% 50%;\n\n    & .right {\n      max-height: 75vh;\n      overflow: auto;\n    }\n  }\n</style>\n"],"names":["guideSchema","zod.object","name","zod.string","min","max","short_description","guide","t_1_value","ctx","insert_hydration_dev","target","span","anchor","dirty","set_data_dev","t_1","div","innerHTML","raw_value","t0_value","t4_value","t8_value","t12_value","message","handle_promise","promise","markdown","info","form_1","append_hydration_dev","div6","div0","label0","span0","input0","set_input_value","div1","label1","span1","input1","div4","div2","label2","span2","textarea","div3","span3","div5","button","current","t0","value","t4","t8","t12","t","getTranslate","onSubmit","$$props","initialValues","submitText","$t","form","data","createForm","extend","validator","schema","reporter","submitted","trimNonSchema","$data","this","preview"],"mappings":"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"}