{"version":3,"mappings":"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","names":["initializeGraphQLClient","fetch","createClient","url","API_GRAPHQL","exchanges","cacheExchange","schema","keys","GetMods","LatestVersions","UserMod","GetGuides","OAuthOptions","UserRoles","Compatibility","CompatibilityInfo","updates","Mutation","_result","args","cache","invalidate","__typename","id","guideId","modId","versionId","smlVersionId","authExchange","async","utils","token","get","userToken","operation","appendHeaders","Authorization","error","message","indexOf","persistedExchange","preferGetForPersistedQueries","fetchExchange","prerender","load","e","client","t0_value","ctx","t2_value","t4_value","insert_hydration_dev","target","button0","anchor","button1","button2","dirty","set_data_dev","t0","t2","t4","p","t1","t1_value","div","current","fetching","div2","append_hydration_dev","h2","div1","div0","signingIn","$$props","t","getTranslate","getContextClient","goTo","service","localStorage","setItem","goto","conicStops","color","start","end","oauthOptions","queryStore","query","GetOAuthOptionsDocument","variables","callback_url","encodeURIComponent","window","location","origin","pathname","requestPolicy","$oauthOptions","data","getOAuthOptions","github","google","facebook","toastStore","getToastStore","getMe","GetMeDocument","pause","first","subscribe","oneMonth","Date","getTime","cookie","set","domain","hostname","expires","mutation","LogoutDocument","undefined","toPromise","catch","then","remove","resume","unsub","response","trigger","background","timeout","console","user","signInMethods","OAuthGithubDocument","OAuthGoogleDocument","OAuthFacebookDocument","modalStore","getModalStore","signInMethod","getItem","removeItem","queryParams","Object","fromEntries","$page","searchParams","entries","length","URLSearchParams","search","code","state","loginModal","result","autohide","session","close","$$invalidate","type","component","ref","LoginModal","props","username","t6_value","create_if_block_3","attr_dev","div0_style_value","avatar","span0","span1","t6","button","icon","label","a","a_href_value","external","create_if_block_1","li","create_if_block","t9_value","create_if_block_2","i","nav0","ul0","hr","nav1","ul1","nav2","ul2","li0","li1","span2","t9","accessibility","click_handler","base","click_handler_2","$user","preloadData","item","value","currentPath","isAdmin","roles","approveMods","approveVersions","editSMLVersions","top","$t","bottom","div2_class_value","span","b","monospacePrefix","iconNames","AnnouncementImportance","Info","Alert","Warning","Fix","backgroundColors","importance","isMonospace","startsWith","finalMessage","replaceAll","getAnnouncements","each_blocks","announcementrow_changes","announcements","GetAnnouncementsDocument","name","flag","toggle_class","nav","ul","tolgee","getTolgee","languages","en","de","fr","lv","mt","lang","writable","$tolgee","getLanguage","l","changeLanguage","languageMenuBox","event","placement","closeQuery","k","pingLauncher","t8_value","div1_style_value","div4","div3","li2","button3","t8","drawerStore","getDrawerStore","userMenuBox","click_handler_5","open","script0","script0_src_value","script1","main","aside","document_1","head","link0","link1","link2","link3","link4","link5","link6","meta0","meta1","meta2","link7","initializeStores","storePopup","computePosition","autoUpdate","offset","shift","flip","arrow","Tolgee","use","DevTools","FormatSimple","LanguageDetector","init","defaultNs","defaultLanguage","fallbackLanguage","apiUrl","PUBLIC_TOLGEE_API_URL","apiKey","PUBLIC_TOLGEE_API_KEY","staticData","enCommon","deCommon","frCommon","lvCommon","mtCommon","zhHansCommon","zhHantCommon","gTag","PUBLIC_GOOGLE_SITE_TAG","root","onMount","document","body","n","b6","cookieconsent","initialise","palette","popup","theme","position","customProtocolCheck","import","__VITE_IS_MODERN__","toLocaleLowerCase","hasLauncher","toString","setContextClient","classList","add"],"sources":["../../../../../../src/lib/core/graphql.ts","../../../../../../src/routes/+layout.ts","../../../../../../src/lib/modals/LoginModal.svelte","../../../../../../src/lib/components/auth/LoginDialog.svelte","../../../../../../src/lib/components/general/Sidebar.svelte","../../../../../../src/lib/components/announcements/AnnouncementRow.svelte","../../../../../../src/lib/components/announcements/AnnouncementHeader.svelte","../../../../../../src/lib/components/general/TranslationDropdown.svelte","../../../../../../src/lib/components/general/TopBar.svelte","../../../../../../src/routes/+layout.svelte"],"sourcesContent":["import schema from '$lib/generated/graphql.schema.urql.json';\nimport { createClient, fetchExchange, type Client } from '@urql/svelte';\nimport { cacheExchange } from '@urql/exchange-graphcache';\nimport { persistedExchange } from '@urql/exchange-persisted';\nimport { API_GRAPHQL } from './api';\nimport { userToken } from '$lib/stores/user';\nimport { authExchange } from '@urql/exchange-auth';\nimport type { LoadEvent } from '@sveltejs/kit';\nimport { get } from 'svelte/store';\n\nexport const initializeGraphQLClient = (fetch?: LoadEvent['fetch']): Client =>\n  createClient({\n    url: API_GRAPHQL,\n    fetch,\n    exchanges: [\n      cacheExchange({\n        schema,\n        keys: {\n          GetMods: () => null,\n          LatestVersions: () => null,\n          UserMod: () => null,\n          GetGuides: () => null,\n          OAuthOptions: () => null,\n          UserRoles: () => null,\n          Compatibility: () => null,\n          CompatibilityInfo: () => null\n        },\n        updates: {\n          Mutation: {\n            deleteGuide(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Guide',\n                id: args.guideId as string\n              });\n            },\n            deleteMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            approveMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            denyMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            approveVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            denyVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            deleteSMLVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'SMLVersion',\n                id: args.smlVersionId as string\n              });\n            },\n            deleteVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            updateVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            }\n          }\n        }\n      }),\n      authExchange(async (utils) => {\n        const token = get(userToken);\n        return {\n          addAuthToOperation(operation) {\n            return utils.appendHeaders(operation, {\n              Authorization: token\n            });\n          },\n          didAuthError(error) {\n            return error.message.indexOf('user not logged in') >= 0;\n          },\n          async refreshAuth() {\n            // Token cannot be refreshed currently\n          }\n        };\n      }),\n      persistedExchange({\n        preferGetForPersistedQueries: true\n      }),\n      fetchExchange\n    ]\n  });\n","import type { LayoutLoad } from './$types';\nimport { initializeGraphQLClient } from '$lib/core';\n\nexport const prerender = 'auto';\n\nexport const load: LayoutLoad = async ({ fetch }) => {\n  const client = initializeGraphQLClient(fetch);\n  return {\n    client\n  };\n};\n","<script lang=\"ts\">\n  import { getTranslate } from '@tolgee/svelte';\n  import { goto } from '$app/navigation';\n  import { ConicGradient, type ConicStop } from '@skeletonlabs/skeleton';\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { GetOAuthOptionsDocument } from '$lib/generated';\n  import { browser } from '$app/environment';\n\n  export let signingIn = false;\n\n  export const { t } = getTranslate();\n\n  const client = getContextClient();\n\n  const goTo = (service: string, url: string) => {\n    localStorage.setItem('sign.in.method', service);\n    goto(url);\n  };\n\n  const conicStops: ConicStop[] = [\n    { color: 'transparent', start: 0, end: 25 },\n    { color: 'rgb(var(--color-primary-500))', start: 75, end: 100 }\n  ];\n\n  const oauthOptions = queryStore({\n    query: GetOAuthOptionsDocument,\n    client,\n    variables: { callback_url: browser ? encodeURIComponent(window.location.origin + window.location.pathname) : '' },\n    requestPolicy: 'network-only'\n  });\n</script>\n\n<div class=\"card p-4 flex flex-col gap-2\">\n  <h2 class=\"text-2xl\">{$t('user.sign-in')} / {$t('user.sign-up')}</h2>\n  <div>\n    <div class=\"grid grid-flow-row gap-4\">\n      {#if signingIn}\n        <p>{$t('user.logging-in')}...</p>\n        <div class=\"flex justify-center\">\n          <ConicGradient stops={conicStops} spin>Loading</ConicGradient>\n        </div>\n      {:else if $oauthOptions.fetching}\n        <!-- TODO Placeholders -->\n        <p>{$t('loading')}...</p>\n      {:else if $oauthOptions.error}\n        <p>Oh no... {$oauthOptions.error.message}</p>\n      {:else}\n        <button\n          class=\"btn variant-ghost-primary\"\n          on:click={() => goTo('github', $oauthOptions.data.getOAuthOptions.github)}>\n          {$t('login-dialog.sign-in-with-github')}\n        </button>\n        <button\n          class=\"btn variant-ghost-primary\"\n          on:click={() => goTo('google', $oauthOptions.data.getOAuthOptions.google)}>\n          {$t('login-dialog.sign-in-with-google')}\n        </button>\n        <button\n          class=\"btn variant-ghost-primary\"\n          on:click={() => goTo('facebook', $oauthOptions.data.getOAuthOptions.facebook)}>\n          {$t('login-dialog.sign-in-with-facebook')}\n        </button>\n      {/if}\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import {\n    GetMeDocument,\n    OAuthFacebookDocument,\n    OAuthGithubDocument,\n    OAuthGoogleDocument,\n    LogoutDocument\n  } from '$lib/generated';\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { browser } from '$app/environment';\n  import { page } from '$app/stores';\n  import { user, userToken } from '$lib/stores/user';\n  import cookie from 'js-cookie';\n  import { getTranslate } from '@tolgee/svelte';\n  import { getModalStore, getToastStore, type ModalSettings } from \"@skeletonlabs/skeleton\";\n  import LoginModal from '$lib/modals/LoginModal.svelte';\n\n  const client = getContextClient();\n\n  const toastStore = getToastStore();\n\n  export const { t } = getTranslate();\n\n  if (browser) {\n    const getMe = queryStore({\n      query: GetMeDocument,\n      client,\n      variables: {},\n      requestPolicy: 'network-only',\n      pause: true\n    });\n\n    let first = true;\n    userToken.subscribe((token) => {\n      if (token) {\n        const oneMonth = new Date(new Date().getTime() + 30 * 24 * 60 * 60 * 1000);\n        cookie.set('token', token, {\n          domain: window.location.hostname,\n          expires: oneMonth\n        });\n      } else if (!first) {\n        client\n          .mutation(LogoutDocument, undefined, {\n            requestPolicy: 'network-only'\n          })\n          .toPromise()\n          .catch()\n          .then(() => {\n            cookie.remove('token');\n          });\n      }\n\n      first = false;\n\n      if (token) {\n        getMe.pause();\n        getMe.resume();\n\n        const unsub = getMe.subscribe((response) => {\n          if (!response.fetching) {\n            if (response.error) {\n              toastStore.trigger({\n                message: `Error resolving user: ` + response.error.message,\n                background: 'variant-filled-error',\n                timeout: 5000\n              });\n              console.error(response.error.message);\n              unsub();\n            } else if (response.data) {\n              user.set(response.data.getMe);\n              unsub();\n            }\n          }\n        });\n      } else {\n        user.set(null);\n      }\n    });\n  }\n\n  const signInMethods = {\n    github: OAuthGithubDocument,\n    google: OAuthGoogleDocument,\n    facebook: OAuthFacebookDocument\n  };\n\n  let signingIn = false;\n\n  $: loginModal = {\n    type: 'component',\n    component: {\n      ref: LoginModal,\n      props: {\n        signingIn\n      }\n    }\n  } satisfies ModalSettings;\n\n  const modalStore = getModalStore();\n\n  if (browser) {\n    const signInMethod = localStorage.getItem('sign.in.method');\n    localStorage.removeItem('sign.in.method');\n\n    let queryParams = Object.fromEntries($page.url.searchParams.entries());\n    if (Object.keys(queryParams).length === 0) {\n      queryParams = Object.fromEntries(new URLSearchParams(window.location.search));\n    }\n\n    const code = queryParams.code;\n    const state = queryParams.state;\n\n    if (signInMethod && code && state) {\n      signingIn = true;\n      modalStore.trigger(loginModal);\n\n      client\n        .mutation(signInMethods[signInMethod as 'github' | 'google' | 'facebook'], {\n          code,\n          state\n        })\n        .toPromise()\n        .then((result) => {\n          if (result.error) {\n            console.error(result.error.message);\n            toastStore.trigger({\n              message: 'Error logging in: ' + result.error.message,\n              background: 'variant-filled-error',\n              autohide: false\n            });\n          } else {\n            userToken.set(result.data.session.token);\n            modalStore.close();\n          }\n        })\n        .catch()\n        .then(() => (signingIn = false));\n    }\n  }\n</script>\n","<script lang=\"ts\">\n  import { getModalStore, SlideToggle } from '@skeletonlabs/skeleton';\n  import { goto, preloadData } from '$app/navigation';\n  import { base } from '$app/paths';\n  import { page } from '$app/stores';\n  import { user, userToken } from '$lib/stores/user';\n  import { getTranslate } from '@tolgee/svelte';\n  import LoginModal from '$lib/modals/LoginModal.svelte';\n\n  export let accessibility: boolean;\n\n  export const { t } = getTranslate();\n\n  $: currentPath = $page.url.pathname;\n  $: isAdmin = !$user ? false : $user.roles.approveMods || $user.roles.approveVersions || $user.roles.editSMLVersions;\n\n  $: top = [\n    {\n      url: base + '/',\n      icon: 'home',\n      label: $t('sidebar.home')\n    },\n    {\n      url: base + '/mods',\n      icon: 'extension',\n      label: $t('sidebar.mods')\n    },\n    {\n      url: base + '/guides',\n      icon: 'description',\n      label: $t('sidebar.guides')\n    },\n    {\n      url: base + '/sml-versions',\n      icon: 'lightbulb',\n      label: $t('sidebar.sml-versions')\n    },\n    {\n      url: base + '/tools',\n      icon: 'apps',\n      label: $t('sidebar.tools')\n    },\n    {\n      url: 'https://discord.gg/xkVJ73E',\n      icon: 'people',\n      label: $t('discord'),\n      external: true\n    },\n    {\n      url: 'https://docs.ficsit.app/',\n      icon: 'find_in_page',\n      label: $t('sidebar.docs'),\n      external: true\n    },\n    {\n      url: 'https://forums.ficsit.app/',\n      icon: 'forum',\n      label: $t('sidebar.forums'),\n      external: true\n    }\n  ];\n\n  $: bottom = [\n    {\n      url: base + '/help',\n      icon: 'help',\n      label: $t('sidebar.help')\n    },\n    {\n      url: base + '/content-policy',\n      icon: 'verified_user',\n      label: $t('content-policy')\n    },\n    {\n      url: base + '/privacy-policy',\n      icon: 'policy',\n      label: $t('sidebar.privacy-policy')\n    },\n    {\n      url: base + '/tos',\n      icon: 'gavel',\n      label: $t('sidebar.tos')\n    },\n    {\n      url: base + '/api-docs',\n      icon: 'api',\n      label: $t('sidebar.api')\n    },\n    {\n      url: 'https://github.com/satisfactorymodding',\n      icon: 'source',\n      label: $t('sidebar.github'),\n      external: true\n    }\n  ];\n\n  const modalStore = getModalStore();\n</script>\n\n<div class=\"p-4 overflow-y-auto flex flex-col justify-between h-full\">\n  <nav class=\"list-nav xl:hidden\">\n    <ul>\n      {#if $user === null}\n        <button\n          on:click={() =>\n            modalStore.trigger({\n              type: 'component',\n              component: {\n                ref: LoginModal\n              }\n            })}\n          class=\"w-full\">\n          <span class=\"material-icons\">login</span>\n          <span>{$t('user.sign-in')}</span>\n        </button>\n      {:else}\n        {#if isAdmin}\n          <button on:click={() => goto(base + '/admin')} class=\"w-full\">\n            <span class=\"material-icons\">admin_panel_settings</span>\n            <span>Admin</span>\n          </button>\n        {/if}\n        <button class=\"grid grid-flow-col w-full\" on:click={() => goto(base + '/user/' + $user.id)}>\n          <div class=\"rounded-full bg-cover w-7 h-7\" style={`background-image: url(\"${$user.avatar}\")`} />\n          <div>{$user.username}</div>\n        </button>\n\n        <button on:click={() => userToken.set(null)} class=\"w-full\">\n          <span class=\"material-icons\">logout</span>\n          <span>{$t('user.logout')}</span>\n        </button>\n      {/if}\n    </ul>\n  </nav>\n\n  <div class=\"xl:hidden\">\n    <hr />\n  </div>\n\n  <nav class=\"list-nav\">\n    <ul>\n      {#each top as item}\n        <li>\n          {#if !item.external}\n            <a\n              href={item.url}\n              class:bg-primary-active-token={currentPath === item.url}\n              on:mouseover={() => preloadData(item.url)}\n              on:focus={() => preloadData(item.url)}>\n              <span class=\"material-icons\">{item.icon}</span>\n              <span class=\"flex-auto\">{item.label}</span>\n            </a>\n          {:else}\n            <a href={item.url} target=\"_blank\" rel=\"noopener\">\n              <span class=\"material-icons\">{item.icon}</span>\n              <span class=\"flex-auto\">{item.label}</span>\n            </a>\n          {/if}\n        </li>\n      {/each}\n    </ul>\n  </nav>\n\n  <nav class=\"list-nav\">\n    <ul>\n      {#each bottom as item}\n        <li>\n          {#if !item.external}\n            <a\n              href={item.url}\n              class:bg-primary-active-token={currentPath === item.url}\n              on:mouseover={() => preloadData(item.url)}\n              on:focus={() => preloadData(item.url)}>\n              <span class=\"material-icons\">{item.icon}</span>\n              <span class=\"flex-auto\">{item.label}</span>\n            </a>\n          {:else}\n            <a href={item.url} target=\"_blank\" rel=\"noopener\">\n              <span class=\"material-icons\">{item.icon}</span>\n              <span class=\"flex-auto\">{item.label}</span>\n            </a>\n          {/if}\n        </li>\n      {/each}\n\n      <li class=\"xl:hidden\">\n        <a target=\"_blank\" href=\"https://smm.ficsit.app\" rel=\"noopener\">\n          <span class=\"material-icons\">file_download</span>\n          <span class=\"flex-auto\">{$t('sidebar.mod-manager')}</span>\n        </a>\n      </li>\n\n      <li class=\"flex flex-row items-center justify-center gap-4 px-3 pt-2\">\n        <SlideToggle\n          bind:checked={accessibility}\n          aria-label=\"Accessibility Font\"\n          name=\"accessibility_font\"\n          size=\"sm\"\n          active=\"bg-primary-500\" />\n        <span>{$t('sidebar.accessibility-font')}</span>\n      </li>\n    </ul>\n  </nav>\n</div>\n","<script lang=\"ts\">\n  import { AnnouncementImportance } from '$lib/generated';\n\n  const iconNames: { [key in AnnouncementImportance]: string } = {\n    [AnnouncementImportance.Info]: 'info',\n    [AnnouncementImportance.Alert]: 'error',\n    [AnnouncementImportance.Warning]: 'warning',\n    [AnnouncementImportance.Fix]: 'build_circle'\n  };\n  const backgroundColors: { [key in AnnouncementImportance]: string } = {\n    [AnnouncementImportance.Info]: 'bg-sky-500',\n    [AnnouncementImportance.Alert]: 'bg-red-600',\n    [AnnouncementImportance.Warning]: 'bg-yellow-400',\n    [AnnouncementImportance.Fix]: 'bg-green-600'\n  };\n  const monospacePrefix = 'monotext:';\n\n  export let message: string;\n  export let importance: AnnouncementImportance;\n\n  // Enables making monospace announcements\n  $: isMonospace = message.startsWith(monospacePrefix);\n  $: finalMessage = isMonospace ? message.replaceAll(monospacePrefix, '') : message;\n</script>\n\n<div class=\"{backgroundColors[importance]} max-h-64 overflow-hidden rounded-sm\">\n  <div class=\"p-1 striped text-black\">\n    <span class=\"material-icons text-2xl align-middle\">{iconNames[importance]}</span>\n    <div\n      class=\"align-middle text-l inline-block break-words max-w-full\"\n      class:font-mono={isMonospace}\n      class:whitespace-pre={isMonospace}>\n      <b>{importance}: </b>{finalMessage}\n    </div>\n  </div>\n</div>\n\n<style>\n  .striped {\n    background: repeating-linear-gradient(\n      45deg,\n      transparent,\n      transparent 14px,\n      rgba(60, 60, 60, 0.1) 14px,\n      rgba(60, 60, 60, 0.1) 28px\n    );\n  }\n</style>\n","<script lang=\"ts\">\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { AnnouncementImportance, GetAnnouncementsDocument } from '$lib/generated';\n  import AnnouncementRow from './AnnouncementRow.svelte';\n\n  const client = getContextClient();\n\n  const announcements = queryStore({\n    query: GetAnnouncementsDocument,\n    client,\n    variables: {}\n  });\n</script>\n\n{#if $announcements.fetching}\n  <!-- Display nothing, don't disrupt the page for no reason -->\n{:else if $announcements.error}\n  <AnnouncementRow\n    message=\"Failed to load announcements: {$announcements.error.message}\"\n    importance={AnnouncementImportance.Warning} />\n{:else if $announcements && $announcements.data && $announcements.data.getAnnouncements}\n  <div class=\"max-h-96 overflow-y-auto flex flex-col gap-2 mr-3 mt-3 ml-3 xl:ml-0 mb-3 xl:mb-0\">\n    {#each $announcements?.data?.getAnnouncements as announcement}\n      <AnnouncementRow message={announcement.message} importance={announcement.importance} />\n    {/each}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import { getTolgee, getTranslate } from '@tolgee/svelte';\n  import { writable } from 'svelte/store';\n  import { type PopupSettings, popup } from '@skeletonlabs/skeleton';\n\n  const tolgee = getTolgee(['language']);\n\n  export const { t } = getTranslate();\n\n  const languages = {\n    en: {\n      name: 'English',\n      flag: '🇺🇳'\n    },\n    de: {\n      name: 'Deutsch',\n      flag: '🇩🇪'\n    },\n    fr: {\n      name: 'Français',\n      flag: '🇫🇷'\n    },\n    lv: {\n      name: 'Latviešu',\n      flag: '🇱🇻'\n    },\n    mt: {\n      name: 'Malti',\n      flag: '🇲🇹'\n    },\n    'zh-Hans': {\n      name: '简体中文',\n      flag: '🇨🇳'\n    },\n    'zh-Hant': {\n      name: '繁體中文',\n      flag: '🇹🇼'\n    }\n  } as const;\n\n  const lang = writable<string>(localStorage.getItem('language') || $tolgee.getLanguage());\n  lang.subscribe((l) => {\n    $tolgee.changeLanguage(l);\n    localStorage.setItem('language', l);\n  });\n\n  const languageMenuBox: PopupSettings = {\n    event: 'focus-click',\n    target: 'languageMenuBox',\n    placement: 'bottom',\n    closeQuery: 'li'\n  };\n</script>\n\n<button class=\"grid grid-flow-col btn btn-sm variant-ghost-primary\" use:popup={languageMenuBox}>\n  <span>{languages[$lang].name}</span>\n  <span class=\"text-xl\">{languages[$lang].flag}</span>\n</button>\n\n<div class=\"card w-48 shadow-xl py-2\" data-popup=\"languageMenuBox\">\n  <nav class=\"list-nav\">\n    <ul>\n      {#each Object.entries(languages) as [k, v]}\n        <li class:bg-primary-active-token={$lang === k}>\n          <button class=\"w-full\" on:click={() => lang.set(k)}>\n            <span>{v.name}</span>\n            <span class=\"text-xl\">{v.flag}</span>\n          </button>\n        </li>\n      {/each}\n    </ul>\n  </nav>\n  <div class=\"arrow bg-surface-100-800-token\" />\n</div>\n","<script lang=\"ts\">\n  import { hasLauncher, pingLauncher } from '$lib/stores/launcher';\n  import { user, userToken } from '$lib/stores/user';\n  import { goto } from '$app/navigation';\n  import { base } from '$app/paths';\n  import TranslationDropdown from '$lib/components/general/TranslationDropdown.svelte';\n  import { getTranslate } from '@tolgee/svelte';\n  import { AppBar, type PopupSettings, popup, getDrawerStore, getModalStore } from '@skeletonlabs/skeleton';\n  import LoginModal from '$lib/modals/LoginModal.svelte';\n\n  $: isAdmin = !$user ? false : $user.roles.approveMods || $user.roles.approveVersions || $user.roles.editSMLVersions;\n\n  export const { t } = getTranslate();\n\n  const drawerStore = getDrawerStore();\n\n  const userMenuBox: PopupSettings = {\n    event: 'focus-click',\n    target: 'userMenuBox',\n    placement: 'bottom',\n    closeQuery: 'li'\n  };\n\n  const modalStore = getModalStore();\n</script>\n\n<AppBar variant=\"static\">\n  <svelte:fragment slot=\"lead\">\n    <button class=\"material-icons xl:hidden btn-sm\" on:click={() => drawerStore.open()}>menu</button>\n    <span class=\"text-lg\">{$t('top-bar.title')}</span>\n  </svelte:fragment>\n\n  <svelte:fragment slot=\"trail\">\n    <div class=\"hidden xl:flex xl:gap-3\">\n      <TranslationDropdown />\n\n      {#if $hasLauncher}\n        <button class=\"btn btn-sm variant-ghost-primary\" on:click={pingLauncher}>\n          <span>Launcher Detected</span>\n          <span class=\"material-icons\">file_download</span>\n        </button>\n      {:else}\n        <a class=\"btn btn-sm variant-ghost-primary\" target=\"_blank\" rel=\"noopener\" href=\"https://smm.ficsit.app\">\n          <span>Mod Manager</span>\n          <span class=\"material-icons\">file_download</span>\n        </a>\n      {/if}\n\n      {#if $user === null}\n        <button\n          class=\"btn btn-sm variant-ghost-primary\"\n          on:click={() =>\n            modalStore.trigger({\n              type: 'component',\n              component: {\n                ref: LoginModal\n              }\n            })}>\n          <span>{$t('user.sign-in')}</span>\n          <span class=\"material-icons\">login</span>\n        </button>\n      {:else}\n        {#if isAdmin}\n          <button class=\"btn btn-sm variant-ghost-primary\" on:click={() => goto(base + '/admin')}>\n            <span>Admin</span>\n            <span class=\"material-icons\">admin_panel_settings</span>\n          </button>\n        {/if}\n\n        <div>\n          <button class=\"grid grid-flow-col btn btn-sm variant-ghost-primary\" use:popup={userMenuBox}>\n            <div>{$user.username}</div>\n            <div class=\"rounded-full bg-cover w-7 h-7\" style={`background-image: url(\"${$user.avatar}\")`} />\n          </button>\n\n          <div class=\"card w-48 shadow-xl py-2\" data-popup=\"userMenuBox\">\n            <nav class=\"list-nav\">\n              <ul>\n                <li>\n                  <button class=\"w-full\" on:click={() => goto(base + '/user/' + $user.id)}>\n                    <span>{$t('top-bar.user.profile')}</span>\n                  </button>\n                </li>\n                <li>\n                  <button class=\"w-full\" on:click={() => goto(base + '/settings')}>\n                    <span>{$t('top-bar.user.settings')}</span>\n                  </button>\n                </li>\n                <li>\n                  <button class=\"w-full\" on:click={() => userToken.set(null)}>\n                    <span>{$t('user.logout')}</span>\n                  </button>\n                </li>\n              </ul>\n            </nav>\n            <div class=\"arrow bg-surface-100-800-token\" />\n          </div>\n        </div>\n      {/if}\n    </div>\n  </svelte:fragment>\n</AppBar>\n","<script lang=\"ts\">\n  import LoginDialog from '$lib/components/auth/LoginDialog.svelte';\n  import { setContextClient } from '@urql/svelte';\n  import { onMount } from 'svelte';\n  import { customProtocolCheck, hasLauncher } from '$lib/stores/launcher';\n  import Sidebar from '$lib/components/general/Sidebar.svelte';\n  import AnnouncementHeader from '$lib/components/announcements/AnnouncementHeader.svelte';\n  import { base } from '$app/paths';\n  import { browser } from '$app/environment';\n  import { PUBLIC_GOOGLE_SITE_TAG, PUBLIC_TOLGEE_API_URL, PUBLIC_TOLGEE_API_KEY } from '$env/static/public';\n  import type { LayoutData } from './$types';\n  import { TolgeeProvider, Tolgee, DevTools, FormatSimple, LanguageDetector } from '@tolgee/svelte';\n  import { initializeStores, AppShell, Modal, storePopup, Drawer, Toast } from '@skeletonlabs/skeleton';\n  import TopBar from '$lib/components/general/TopBar.svelte';\n  import './_global.postcss';\n  import { computePosition, autoUpdate, offset, shift, flip, arrow } from '@floating-ui/dom';\n\n  import enCommon from '../i18n/common/en.json';\n  import deCommon from '../i18n/common/de.json';\n  import frCommon from '../i18n/common/fr.json';\n  import lvCommon from '../i18n/common/lv.json';\n  import mtCommon from '../i18n/common/mt.json';\n  import zhHansCommon from '../i18n/common/zh-Hans.json';\n  import zhHantCommon from '../i18n/common/zh-Hant.json';\n\n  export let data: LayoutData;\n\n  const { client } = data;\n\n  initializeStores();\n  storePopup.set({ computePosition, autoUpdate, offset, shift, flip, arrow });\n\n  const tolgee = Tolgee()\n    .use(DevTools())\n    .use(FormatSimple())\n    .use(LanguageDetector())\n    .init({\n      defaultNs: 'common',\n\n      defaultLanguage: 'en',\n      fallbackLanguage: 'en',\n\n      apiUrl: PUBLIC_TOLGEE_API_URL,\n      apiKey: PUBLIC_TOLGEE_API_KEY,\n\n      staticData: {\n        'en:common': enCommon,\n        'de:common': deCommon,\n        'fr:common': frCommon,\n        'lv:common': lvCommon,\n        'mt:common': mtCommon,\n        'zh-Hans:common': zhHansCommon,\n        'zh-Hant:common': zhHantCommon\n      }\n    });\n\n  let gTag: unknown;\n  if (browser) {\n    gTag = PUBLIC_GOOGLE_SITE_TAG as string;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    window.gTag = gTag;\n  }\n\n  let root: HTMLElement;\n  onMount(async () => {\n    if (browser) {\n      root = document.body;\n\n      await import('cookieconsent/src/cookieconsent');\n\n      if ('cookieconsent' in window) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        window.cookieconsent.initialise({\n          palette: {\n            popup: {\n              background: '#000'\n            },\n            button: {\n              background: '#f1d600'\n            }\n          },\n          theme: 'edgeless',\n          position: 'bottom-right'\n        });\n      }\n\n      customProtocolCheck.set(await import('$lib/thirdparty/custom_protocol'));\n\n      if (localStorage.getItem('hasLauncher') && localStorage.getItem('hasLauncher').toLocaleLowerCase() === 'true') {\n        hasLauncher.set(true);\n      }\n\n      hasLauncher.subscribe((value) => {\n        if (value === true || value === false) {\n          localStorage.setItem('hasLauncher', value.toString().toLocaleLowerCase());\n        }\n      });\n    }\n  });\n\n  let accessibility = false;\n  $: root && (accessibility ? root.classList.add('accessibility') : root.classList.remove('accessibility'));\n\n  setContextClient(client);\n</script>\n\n<svelte:head>\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"{base}/assets/favicon.ico\" />\n  <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"{base}/assets/apple-touch-icon.png?v=69P26YMB35\" />\n  <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"{base}/assets/favicon-32x32.png?v=69P26YMB35\" />\n  <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"{base}/assets/favicon-16x16.png?v=69P26YMB35\" />\n  <link rel=\"manifest\" href=\"{base}/manifest.json?v=69P26YMB35\" />\n  <link rel=\"mask-icon\" href=\"{base}/assets/safari-pinned-tab.svg?v=69P26YMB35\" color=\"#da8517\" />\n  <link rel=\"shortcut icon\" href=\"{base}/assets/favicon.ico?v=69P26YMB35\" />\n  <meta name=\"msapplication-TileColor\" content=\"#da8517\" />\n  <meta name=\"msapplication-config\" content=\"{base}/static/assets/browserconfig.xml?v=69P26YMB35\" />\n  <meta name=\"theme-color\" content=\"#ff6f00\" />\n\n  <link rel=\"preload\" href=\"{base}/assets/fonts/flow-rounded.woff\" as=\"font\" type=\"font/woff\" />\n\n  {#if gTag}\n    <!-- Global site tag (gtag.js) - Google Analytics -->\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id={gTag}\"></script>\n    <script>\n      window.dataLayer = window.dataLayer || [];\n\n      function gtag() {\n        dataLayer.push(arguments);\n      }\n\n      gtag('js', new Date());\n\n      gtag('config', window['gTag']);\n    </script>\n  {/if}\n</svelte:head>\n\n<TolgeeProvider {tolgee}>\n  <Toast />\n  <Modal />\n\n  <Drawer>\n    <Sidebar bind:accessibility />\n  </Drawer>\n\n  <AppShell>\n    <svelte:fragment slot=\"header\">\n      <TopBar />\n    </svelte:fragment>\n\n    <svelte:fragment slot=\"sidebarLeft\">\n      <aside class=\"hidden xl:block h-full\">\n        <Sidebar bind:accessibility />\n      </aside>\n    </svelte:fragment>\n\n    <svelte:fragment slot=\"pageHeader\">\n      <AnnouncementHeader />\n    </svelte:fragment>\n\n    <div class=\"app-content w-full overflow-auto\">\n      <main class=\"main-content min-h-100% xl:py-6 xl:pr-3\">\n        <slot />\n      </main>\n    </div>\n  </AppShell>\n\n  <LoginDialog />\n</TolgeeProvider>\n"],"file":"_app/immutable/nodes/0.669d4de0.js"}