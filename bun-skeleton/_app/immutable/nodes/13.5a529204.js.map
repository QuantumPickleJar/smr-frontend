{"version":3,"file":"13.5a529204.js","sources":["../../../../../../src/lib/components/guides/GuideGrid.svelte","../../../../../../src/routes/guides/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { queryStore, getContextClient } from '@urql/svelte';\n  import { GetGuidesDocument } from '$lib/generated';\n  import GuideCard from './GuideCard.svelte';\n  import { base } from '$app/paths';\n  import { user } from '$lib/stores/user';\n  import FicsitCard from '$lib/components/general/FicsitCard.svelte';\n  import { getTranslate } from '@tolgee/svelte';\n  import { type PaginationSettings, Paginator } from '@skeletonlabs/skeleton';\n\n  export let colCount: 4 | 5 = 4;\n  export let newGuide = false;\n\n  const client = getContextClient();\n\n  let perPage = 32;\n  let page = 0;\n\n  export const { t } = getTranslate();\n\n  $: guides = queryStore({\n    query: GetGuidesDocument,\n    client,\n    variables: { offset: page * perPage, limit: perPage }\n  });\n\n  let totalGuides: number;\n  $: totalGuides = $guides?.data?.getGuides?.count || 0;\n\n  $: gridClasses =\n    colCount == 4\n      ? '3xl:grid-cols-4 2xl:grid-cols-3 lg:grid-cols-2 grid-cols-1'\n      : '3xl:grid-cols-3 2xl:grid-cols-2 grid-cols-1';\n\n  $: paginationSettings = {\n    page: page,\n    limit: perPage,\n    size: $guides?.data?.getGuides?.count || 0,\n    amounts: [8, 16, 32, 64, 100]\n  } satisfies PaginationSettings;\n</script>\n\n<div class=\"mb-5 ml-auto flex justify-between\">\n  {#if newGuide && $user !== null}\n    <a class=\"btn variant-ghost-primary\" href=\"{base}/new-guide\">{$t('guides.new')}</a>\n  {/if}\n\n  <div>\n    <Paginator\n      bind:settings={paginationSettings}\n      showFirstLastButtons={true}\n      showPreviousNextButtons={true}\n      on:page={(p) => (page = p.detail)}\n      on:amount={(p) => (perPage = p.detail)}\n      controlVariant=\"variant-filled-surface\" />\n  </div>\n</div>\n\n{#if $guides.fetching}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each Array(perPage) as _}\n      <FicsitCard fake />\n    {/each}\n  </div>\n{:else if $guides.error}\n  <p>{$t('error.oh-no')} {$guides.error.message}</p>\n{:else}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each $guides.data.getGuides.guides as guide}\n      <GuideCard {guide} logo={guide.user.avatar} />\n    {/each}\n  </div>\n{/if}\n\n<div class=\"mt-5 ml-auto flex justify-end\">\n  <div>\n    <Paginator\n      bind:settings={paginationSettings}\n      showFirstLastButtons={true}\n      showPreviousNextButtons={true}\n      on:page={(p) => (page = p.detail)}\n      on:amount={(p) => (perPage = p.detail)}\n      controlVariant=\"variant-filled-surface\" />\n  </div>\n</div>\n","<script lang=\"ts\">\n  import GuideGrid from '$lib/components/guides/GuideGrid.svelte';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Guides for Satisfactory and modding Satisfactory\" title=\"Guides\" />\n</svelte:head>\n\n<GuideGrid newGuide={true} colCount={4} />\n"],"names":["t_1_value","ctx","base","insert_hydration_dev","target","a","anchor","dirty","set_data_dev","t_1","each_value_1","data","getGuides","guides","length","i","div","each_blocks","t0_value","error","message","p","t0","t2","t2_value","each_value","Array","user","avatar","create_if_block_2","fetching","div1","append_hydration_dev","div0","div3","div2","colCount","$$props","newGuide","client","getContextClient","perPage","page","t","getTranslate","totalGuides","paginationSettings","value","page_handler","$$invalidate","detail","amount_handler","page_handler_1","amount_handler_1","$$subscribe_guides","queryStore","query","GetGuidesDocument","variables","offset","limit","$guides","count","gridClasses","size","amounts","props"],"mappings":"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"}