{"version":3,"file":"25.a581aaa9.js","sources":["../../../../../../src/routes/settings/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { getContextClient } from '@urql/svelte';\n  import { UpdateUserDocument } from '$lib/generated';\n  import Toast from '$lib/components/general/Toast.svelte';\n  import { goto } from '$app/navigation';\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { reporter, ValidationMessage } from '@felte/reporter-svelte';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { user } from '$lib/stores/user';\n  import * as zod from 'zod';\n  import type { Form } from '@felte/core';\n  import { base } from '$app/paths';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import type { Writable } from 'svelte/store';\n\n  let errorMessage = '';\n  let errorToast = false;\n\n  const client = getContextClient();\n\n  export const userSchema = zod.object({\n    avatar: zod.optional(zod.any().refine((logo) => 'name' in logo && 'size' in logo && 'type' in logo)),\n    username: zod.string().min(3).max(32)\n  });\n\n  let form: Form<{ [key: string]: string }>['form'];\n  let data: Writable<{ username: string }>;\n\n  $: {\n    if ($user && !data) {\n      const createdForm = createForm<{ username: string }>({\n        initialValues: {\n          username: $user.username\n        },\n        extend: [validator({ schema: userSchema }), reporter],\n        onSubmit: (submitted: { username: string; avatar: unknown }) => {\n          console.log('submitted', submitted);\n          client\n            .mutation(UpdateUserDocument, {\n              user: trimNonSchema(submitted, userSchema),\n              userId: $user.id\n            })\n            .toPromise()\n            .then((value) => {\n              if (value.error) {\n                console.error(value.error.message);\n                errorMessage = 'Error editing user: ' + value.error.message;\n                errorToast = true;\n              } else {\n                // TODO Toast or something\n                goto(base + '/user/' + value.data.updateUser.id);\n              }\n            });\n        }\n      });\n\n      form = createdForm.form;\n      data = createdForm.data;\n    }\n  }\n\n  $: if (!errorToast) {\n    errorMessage = '';\n  }\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Change your user settings\" title=\"Settings\" />\n</svelte:head>\n\n<h1 class=\"text-4xl my-4 font-bold\">Settings</h1>\n\n<div class=\"card p-4\">\n  <section>\n    {#if $user === null}\n      <p>Please log in</p>\n    {:else}\n      <form use:form>\n        <div class=\"grid grid-flow-row gap-6\">\n          <div class=\"grid grid-flow-row gap-2\">\n            <label for=\"avatar\">Avatar:</label>\n            <input\n              id=\"avatar\"\n              class=\"base-input\"\n              name=\"avatar\"\n              type=\"file\"\n              accept=\"image/png,image/jpeg,image/gif\"\n              placeholder=\"Avatar\" />\n            <ValidationMessage for=\"avatar\" let:messages={message}>\n              <span class=\"validation-message\">{message || ''}</span>\n            </ValidationMessage>\n          </div>\n\n          <div class=\"grid grid-flow-row gap-2\">\n            <label class=\"label\">\n              <span>Username</span>\n              <input type=\"text\" bind:value={$data.username} required class=\"input p-2\" />\n            </label>\n            <ValidationMessage for=\"username\" let:messages={message}>\n              <span class=\"validation-message\">{message || ''}</span>\n            </ValidationMessage>\n          </div>\n\n          <div>\n            <button class=\"btn variant-ghost-primary\" type=\"submit\">Save</button>\n          </div>\n        </div>\n      </form>\n    {/if}\n  </section>\n</div>\n\n<Toast bind:running={errorToast}>\n  <span>{errorMessage}</span>\n</Toast>\n"],"names":["message","insert_hydration_dev","target","form_1","anchor","append_hydration_dev","div3","div0","label0","input0","div1","label1","span","input1","set_input_value","ctx","username","div2","button","dirty","value","p","t_value","set_data_dev","t","h1","div","section","errorMessage","errorToast","client","getContextClient","userSchema","zod.object","avatar","zod.optional","zod.any","refine","logo","zod.string","min","max","form","data","$data","this","$user","createdForm","createForm","initialValues","extend","validator","schema","reporter","onSubmit","submitted","console","log","mutation","UpdateUserDocument","user","trimNonSchema","userId","id","toPromise","then","error","$$invalidate","goto","base","updateUser"],"mappings":"w5BAyF0DA,CAAO,KAAA,CAAA,GAAAA,CAAAA,cAAPA,CAAOA,IAAAA,EAAA,KAAA,CAAA,CAAA,iGAULA,CAAAA,KAAO,CAAA,GAAAA,eAAPA,CAAAA,IAAOA,EAAA,KAAA,6GAlBnC,mGAeZ,UAAA,+EASgD,MAAA,uKAxBpC,SAAA,0PAeZ,iNASgD,muBA3B9DC,EA8BMC,EAAAC,EAAAC,CAAAA,EA7BJC,EA4BKF,EAAAG,GA3BHD,EAYKC,EAAAC,CAXHF,EAAAA,EAAkCE,EAAAC,CAAAA,gBAClCH,EAMwBE,EAAAE,2BAM1BJ,EAAAA,EAQKC,EAAAI,CAAAA,EAPHL,EAGOK,EAAAC,CAFLN,EAAAA,EAAoBM,EAAAC,eACpBP,EAAAA,EAA2EM,EAAAE,CAAAA,EAA5CC,GAAAD,EAAAE,KAAMC,oCAOzCX,EAEKC,EAAAW,CADHZ,EAAAA,EAAoEY,EAAAC,CAAAA,6IARnC,EAAAC,EAAA,IAAAN,EAAAO,QAAAL,GAAMC,EAAAA,UAANF,GAAAD,EAAAE,GAAMC,EAAAA,QAAAA,+XArB1C,wEAAA,sFAAHf,CAAAA,EAAmBC,EAAAmB,EAAAjB,gLAcuBkB,GAAAP,OAAW,IAAE,4NAA/Cd,EAAsDC,EAAAU,EAAAR,CAAAA,yBAApB,CAAAe,EAAA,MAAAG,KAAAA,GAAAP,IAAW,GAAA,IAAE,KAAAQ,GAAAC,EAAAF,CAAAA,sMAUbA,GAAAP,IAAW,GAAA,IAAE,2NAA/Cd,CAAAA,EAAsDC,EAAAU,EAAAR,2BAApBe,EAAA,MAAAG,KAAAA,GAAAP,IAAW,GAAA,IAAE,KAAAQ,GAAAC,EAAAF,CAAAA,gPAcpDP,EAAY,8DAAZA,EAAY,CAAA,CAAA,yEAAnBd,EAA0BC,EAAAU,EAAAR,CAAAA,oCAAnBW,EAAY,oUAvCZ,OAAAA,OAAU,KAAI,+FAsCFA,EAAU,CAAA,IAAA,mBAAVA,EAAU,8HA1CK,UAAA,iNAAA,sVAApCd,EAAAA,EAAgDC,EAAAuB,EAAArB,mBAEhDH,EAsCKC,EAAAwB,EAAAtB,CAAAA,EArCHC,EAoCSqB,EAAAC,yQAGUZ,EAAU,ofAjGzB,IAAAa,EAAe,GACfC,EAAa,GAEX,MAAAC,EAASC,KAEFC,EAAaC,GAAU,CAClCC,OAAQC,GAAaC,GAAAA,EAAUC,OAAQC,GAAS,SAAUA,GAAQ,SAAUA,GAAQ,SAAUA,CAC9FtB,CAAAA,EAAAA,SAAUuB,GAAaC,EAAAA,IAAI,CAAGC,EAAAA,IAAI,UAGhCC,EACAC,8JAsEuCC,CAAAA,EAAM5B,SAAQ6B,KAAAzB,6BAgBtCS,EAAUT,siBAnFvB0B,GAAAA,CAAUH,EAAI,CACV,MAAAI,EAAcC,GAAU,CAC5BC,cACE,CAAAjC,SAAU8B,EAAM9B,QAAAA,EAElBkC,QAASC,GAAS,CAAGC,OAAQpB,CAAAA,CAAAA,EAAeqB,EAC5CC,EAAAA,SAAWC,IACTC,QAAQC,IAAI,YAAaF,CAAAA,EACzBzB,EACG4B,SAASC,GAAkB,CAC1BC,KAAMC,GAAcN,EAAWvB,CAAAA,EAC/B8B,OAAQhB,EAAMiB,EAEfC,CAAAA,EAAAA,UAAAA,EACAC,KAAM7C,GAAAA,CACDA,EAAM8C,OACRV,QAAQU,MAAM9C,EAAM8C,MAAMlE,OAC1BmE,EAAAA,EAAA,EAAAvC,EAAe,uBAAyBR,EAAM8C,MAAMlE,OACpDmE,EAAAA,EAAA,EAAAtC,EAAa,KAGbuC,GAAKC,GAAO,SAAWjD,EAAMuB,KAAK2B,WAAWP,EAAAA,WAMvDrB,EAAOK,EAAYL,IAAAA,QACnBC,EAAOI,EAAYJ,IAAAA,CAAAA,iBAIfd,GACNsC,EAAA,EAAAvC,EAAe"}