{"version":3,"file":"8.4042788d.js","sources":["../../../../../../src/routes/admin/unapproved-mods/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { ApproveModDocument, DenyModDocument, GetUnapprovedModsDocument } from '$lib/generated';\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { base } from '$app/paths';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import { prettyDate } from '$lib/utils/formatting';\n  import { type PaginationSettings, Paginator } from '@skeletonlabs/skeleton';\n\n  const client = getContextClient();\n\n  let perPage = 20;\n  let page = 0;\n\n  $: mods = queryStore({\n    query: GetUnapprovedModsDocument,\n    client,\n    variables: {\n      filter: {\n        offset: page * perPage,\n        limit: perPage\n      }\n    }\n  });\n\n  $: totalMods = $mods?.data?.getUnapprovedMods?.count;\n\n  const approveMod = (modId: string) => {\n    client\n      .mutation(ApproveModDocument, { modId })\n      .toPromise()\n      .then(() => {\n        mods.pause();\n        mods.resume();\n      });\n  };\n\n  const denyMod = (modId: string) => {\n    client\n      .mutation(DenyModDocument, { modId })\n      .toPromise()\n      .then(() => {\n        mods.pause();\n        mods.resume();\n      });\n  };\n\n  $: paginationSettings = {\n    page: page,\n    limit: perPage,\n    size: totalMods,\n    amounts: [5, 10, 20, 50, 100]\n  } satisfies PaginationSettings;\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Unapproved mods\" title=\"Admin: Unapproved Mods\" />\n</svelte:head>\n\n{#if totalMods}\n  <div class=\"mb-5 ml-auto flex justify-end\">\n    <div>\n      <Paginator\n        bind:settings={paginationSettings}\n        showFirstLastButtons={true}\n        showPreviousNextButtons={true}\n        on:page={(p) => (page = p.detail)}\n        on:amount={(p) => (perPage = p.detail)}\n        controlVariant=\"variant-filled-surface\" />\n    </div>\n  </div>\n{/if}\n\n<div class=\"card\">\n  {#if $mods.fetching}\n    <section class=\"p-4\">Loading...</section>\n  {:else if $mods.error}\n    <section class=\"p-4\">Oh no... {$mods.error.message}</section>\n  {:else}\n    <table class=\"max-w-full table table-hover\">\n      <thead>\n        <tr>\n          <th>Mod</th>\n          <th>Description</th>\n          <th>Release Date</th>\n          <th><!-- Buttons --></th>\n        </tr>\n      </thead>\n      <tbody>\n        {#each $mods.data.getUnapprovedMods.mods as mod}\n          <tr>\n            <td>{mod.name}</td>\n            <td>{mod.short_description}</td>\n            <td>{prettyDate(mod.created_at)}</td>\n            <td>\n              <div class=\"grid grid-flow-col gap-4\">\n                <button class=\"btn btn-sm variant-ghost-primary\" on:click={() => approveMod(mod.id)}>Approve</button>\n                <button class=\"btn btn-sm variant-ghost-primary\" on:click={() => denyMod(mod.id)}>Deny</button>\n                <a class=\"btn btn-sm variant-ghost-primary\" href={base + '/mod/' + mod.id}>View</a>\n              </div>\n            </td>\n          </tr>\n        {/each}\n      </tbody>\n    </table>\n  {/if}\n</div>\n\n{#if totalMods}\n  <div class=\"mt-5 ml-auto flex justify-end\">\n    <div>\n      <Paginator\n        bind:settings={paginationSettings}\n        showFirstLastButtons={true}\n        showPreviousNextButtons={true}\n        on:page={(p) => (page = p.detail)}\n        on:amount={(p) => (perPage = p.detail)}\n        controlVariant=\"variant-filled-surface\" />\n    </div>\n  </div>\n{/if}\n"],"names":["ctx","insert_hydration_dev","target","div1","anchor","append_hydration_dev","div0","each_value","ensure_array_like_dev","data","getUnapprovedMods","mods","length","i","table","thead","tr","th0","th1","th2","th3","tbody","error","message","section","set_data_dev","t1","t1_value","t0_value","name","t2_value","short_description","prettyDate","created_at","attr_dev","a","a_href_value","base","id","td0","td1","td2","td3","div","button0","button1","dirty","t0","t2","t4","t4_value","create_if_block_3","fetching","create_if_block_1","create_if_block_2","create_if_block","client","getContextClient","perPage","page","approveMod","modId","mutation","ApproveModDocument","toPromise","then","pause","resume","denyMod","DenyModDocument","paginationSettings","value","page_handler","p","$$invalidate","detail","amount_handler","mod","page_handler_1","amount_handler_1","$$subscribe_mods","queryStore","query","GetUnapprovedModsDocument","variables","filter","offset","limit","totalMods","$mods","count","size","amounts"],"mappings":"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"}