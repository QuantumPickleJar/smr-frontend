{"version":3,"file":"CompatibilityButton.05b73ae0.js","sources":["../../../../../../src/lib/components/mods/compatibility/OutdatedBanner.svelte","../../../../../../src/lib/components/mods/compatibility/CompatibilityStateText.svelte","../../../../../../src/lib/components/mods/compatibility/CompatibilityInfo.svelte","../../../../../../src/lib/components/mods/compatibility/CompatibilityIcon.svelte","../../../../../../src/lib/components/mods/compatibility/CompatibilityButton.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import type { CompatibilityInfoInput } from '$lib/generated';\n  import { CompatibilityState } from '$lib/generated';\n\n  export let compatibility: CompatibilityInfoInput;\n  export let logo = false;\n\n  function Worst(input: CompatibilityInfoInput): CompatibilityState {\n    const EA = input.EA.state;\n    if (EA == CompatibilityState.Broken) {\n      // Broken is always the worst\n      return EA;\n    }\n    if (EA == CompatibilityState.Works) {\n      return input.EXP.state; // Anything other than Works is worse\n    }\n    if (input.EXP.state != CompatibilityState.Works) {\n      // If it's not better then it is the worst\n      return input.EXP.state;\n    }\n    return EA;\n  }\n\n  let worst = CompatibilityState.Works;\n  $: if (compatibility) {\n    worst = Worst(compatibility);\n  } else {\n    worst = CompatibilityState.Works;\n  }\n  $: works = worst === CompatibilityState.Works;\n</script>\n\n{#if !works}\n  <div\n    class=\"mod-outdated-stripe\"\n    style=\"max-width: inherit;\"\n    class:mod-damaged={worst === CompatibilityState.Damaged}\n    class:mod-broken={worst === CompatibilityState.Broken}\n    class:mod-logo-outdated={logo} />\n{/if}\n","<script lang=\"ts\">\n  import type { CompatibilityState } from '$lib/generated';\n  import { getTranslate } from '@tolgee/svelte';\n  export let state: CompatibilityState = null;\n\n  export const { t } = getTranslate();\n\n  const classForState = (s: CompatibilityState): string => `mod-state-${s.toString().toLowerCase()}`;\n</script>\n\n<p class=\"{classForState(state)} mod-state\">{$t(`compatibility-info.state.${state.toString().toLowerCase()}`)}</p>\n","<script lang=\"ts\">\n  import type { CompatibilityInfoInput } from '$lib/generated';\n  import CompatibilityStateText from '$lib/components/mods/compatibility/CompatibilityStateText.svelte';\n  import { markdown } from '../../../utils/markdown';\n  import { getTranslate } from '@tolgee/svelte';\n\n  export let compatibility: CompatibilityInfoInput;\n\n  export const { t } = getTranslate();\n  export const compatibilityStateDescriptions: {\n    [key: string]: string;\n  } = {\n    Works: $t('compatibility-info.state.works.description'),\n    Damaged: $t('compatibility-info.state.damaged.description'),\n    Broken: $t('compatibility-info.state.broken.description'),\n    Unknown: $t('compatibility-info.state.unknown.description')\n  };\n</script>\n\n<div>\n  {$t('compatibility-info.maintained-by')}\n  <a href=\"https://discord.gg/xkVJ73E\" style=\"text-decoration: underline\">{$t('discord')}</a>!\n</div>\n<br />\n{#if compatibility}\n  <div>{$t('early-access')}: <CompatibilityStateText state={compatibility?.EA?.state} /></div>\n  <div class=\"compatibility-state-description\">\n    {compatibilityStateDescriptions[compatibility?.EA?.state || 'Unknown']}\n  </div>\n  {#if compatibility.EA.note}\n    <div>\n      {$t('compatibility-info.note')}: {#await markdown(compatibility.EA.note) then rendered}\n        {@html rendered}\n      {/await}\n    </div>\n  {/if}\n  <br />\n  <div>{$t('experimental')}: <CompatibilityStateText state={compatibility?.EXP?.state} /></div>\n  <div class=\"compatibility-state-description\">\n    {compatibilityStateDescriptions[compatibility?.EXP?.state || 'Unknown']}\n  </div>\n  {#if compatibility.EXP.note}\n    <div>\n      {$t('compatibility-info.note')}: {#await markdown(compatibility.EXP.note) then rendered}\n        {@html rendered}\n      {/await}\n    </div>\n  {/if}\n{:else}\n  <div>\n    {compatibilityStateDescriptions.Unknown}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import type { CompatibilityInput } from '$lib/generated';\n  import { CompatibilityState } from '$lib/generated';\n\n  export let compatibility: CompatibilityInput = null;\n  export let EXP = false;\n  let iconText = 'rocket_launch';\n  if (EXP) {\n    iconText = 'science';\n  }\n</script>\n\n<p\n  class=\"material-icons text-base\"\n  class:mod-state-works={compatibility?.state === CompatibilityState.Works}\n  class:mod-state-damaged={compatibility?.state === CompatibilityState.Damaged}\n  class:mod-state-broken={compatibility?.state === CompatibilityState.Broken}\n  class:mod-state-unknown={!compatibility}>\n  {iconText}\n</p>\n","<script lang=\"ts\">\n  import type { CompatibilityInfoInput } from '$lib/generated';\n  import Dialog, { Content, Title } from '@smui/dialog';\n  import CompatibilityInfo from '$lib/components/mods/compatibility/CompatibilityInfo.svelte';\n  import Button from '@smui/button';\n  import CompatibilityIcon from './CompatibilityIcon.svelte';\n  import { getTranslate } from '@tolgee/svelte';\n  let open = false;\n\n  export let compatibility: CompatibilityInfoInput;\n\n  export const { t } = getTranslate();\n</script>\n\n<Button\n  --mdc-text-button-container-height=\"20px\"\n  class=\"min-w-0 m-0\"\n  title={$t('compatibility-info.button')}\n  on:click={() => {\n    open = true;\n  }}>\n  <CompatibilityIcon compatibility={compatibility?.EA} />\n  <CompatibilityIcon compatibility={compatibility?.EXP} EXP={true} />\n</Button>\n\n<Dialog bind:open>\n  <Title>{$t('compatibility-info')}</Title>\n  <Content>\n    <CompatibilityInfo {compatibility} />\n  </Content>\n</Dialog>\n"],"names":["ctx","CompatibilityState","Damaged","Broken","insert_hydration_dev","target","div","anchor","create_if_block","compatibility","$$props","logo","Worst","input","EA","state","Works","EXP","worst","works","t_1_value","toString","toLowerCase","attr_dev","p","p_class_value","dirty","set_data_dev","t_1","t","getTranslate","classForState","s","Unknown","t0_value","t3_value","t7_value","t10_value","note","create_if_block_2","create_if_block_1","div0","div1","br","div2","div3","current","t0","t3","t7","t10","handle_promise","promise","markdown","info","html_tag","raw_value","t2_value","append_hydration_dev","a","t2","compatibilityStateDescriptions","$t","toggle_class","iconText","compatibilityicon0_changes","compatibilityicon1_changes","title","button_changes","open","$$invalidate"],"mappings":"swBAoCuBA,EAAK,CAAA,IAAKC,EAAmBC,OAAAA,mBAC9BF,EAAK,CAAA,IAAKC,EAAmBE,MAAAA,0BACtBH,EAAI,CAAA,CAAA,oCAL/BI,EAKkCC,EAAAC,EAAAC,CAAAA,0CAFbP,EAAK,CAAA,IAAKC,EAAmBC,OAAAA,wBAC9BF,EAAK,CAAKC,IAAAA,EAAmBE,qCACtBH,EAAI,wJAN3BA,CAAAA,EAAK,CAAAQ,GAAAA,GAAAR,gIAALA,EAAK,CAAA,uSA5BES,CAAqCC,EAAAA,EACrCC,CAAAA,KAAAA,EAAO,EAAKD,EAAAA,EAEd,SAAAE,EAAMC,EACP,CAAA,MAAAC,EAAKD,EAAMC,GAAGC,aAChBD,GAAMb,EAAmBE,OAEpBW,EAELA,GAAMb,EAAmBe,OAGzBH,EAAMI,IAAIF,OAASd,EAAmBe,MAEjCH,EAAMI,IAAIF,MAEZD,MAGLI,EAAQjB,EAAmBe,ixBACxBP,MACLS,EAAQN,EAAMH,QAEdS,EAAQjB,EAAmBe,0BAE1BG,EAAQD,IAAUjB,EAAmBe,sgCCnBGI,EAAApB,EAA+B,CAAA,EAAA,4BAAAA,EAAM,GAAAqB,SAAWC,EAAAA,YAAAA,GAAAA,EAAW,mJAA7FC,GAAAC,EAAA,QAAAC,EAAAzB,KAAcA,EAAK,CAAA,CAAA,EAAA,8CAA9BI,CAAAA,EAAiHC,EAAAmB,EAAAjB,CAAAA,yBAApE,EAAA,CAAAmB,EAAA,GAAAN,KAAAA,EAAApB,EAA+B,CAAA,EAAA,4BAAAA,EAAM,CAAA,EAAAqB,SAAWC,EAAAA,YAAAA,GAAAA,EAAW,KAAAK,EAAAC,EAAAR,CAA7F,EAAAM,EAAA,GAAAD,KAAAA,EAAAzB,KAAcA,EAAK,CAAA,CAAA,EAAA,qTAPjB,IAAAe,MAAAA,EAA4B,IAAIL,EAAAA,EAE5B,KAAAmB,CAAAA,EAAAA,CAAMC,EAAAA,GAAAA,cAEf,EAAA,MAAAC,EAAiBC,GAAqB,aAA0BA,EAAEX,WAAWC,uvCC2ChFF,EAAApB,KAA+BiC,QAAO,8KADzC7B,CAAAA,EAEKC,EAAAC,EAAAC,qKA1BC2B,EAAAlC,GAAG,EAAA,cAAA,EAAc,aAEpBmC,EAAAnC,GAA+BA,EAAAA,EAAa,IAAEc,IAAIC,OAAS,SAAS,EAAA,eAUjEqB,EAAApC,KAAG,cAAc,EAAA,aAEpBqC,EAAArC,KAA+BA,EAAa,CAAEiB,GAAAA,KAAKF,OAAS,SAAA,EAAS,mCAddf,EAAa,CAAEc,GAAAA,IAAIC,2BAIxEf,EAAa,CAAA,EAACc,GAAGwB,MAAIC,GAAAvC,0BAQgCA,EAAa,IAAEiB,KAAKF,KAAAA,sBAIzEf,EAAa,CAAA,EAACiB,IAAIqB,MAAIE,GAAAxC,gDAhBF,0GAYA,IAAA,mIAZA,oMAYA,IAAA,yVAZzBI,CAAAA,EAA2FC,EAAAoC,EAAAlC,sCAC3FH,EAEKC,EAAAqC,EAAAnC,CAAAA,uCAQLH,EAAKC,EAAAsC,EAAApC,CAAAA,SACLH,EAAAA,EAA4FC,EAAAuC,EAAArC,oCAC5FH,EAAAA,EAEKC,EAAAwC,EAAAtC,8DAfC,EAAA,CAAAuC,GAAApB,EAAA,IAAAQ,KAAAA,EAAAlC,KAAG,cAAc,EAAA,KAAA2B,EAAAoB,EAAAb,8BAAmClC,EAAa,CAAA,GAAEc,IAAIC,mBAE1E+B,CAAAA,GAAApB,EAAA,IAAAS,KAAAA,EAAAnC,GAA+BA,EAAAA,EAAa,CAAEc,GAAAA,IAAIC,OAAS,SAAA,EAAS,KAAAY,EAAAqB,EAAAb,GAElEnC,EAAa,CAAA,EAACc,GAAGwB,yEAQhBQ,GAAApB,EAAA,IAAAU,KAAAA,EAAApC,KAAG,cAAc,EAAA,KAAA2B,EAAAsB,EAAAb,CAAAA,6BAAmCpC,EAAa,CAAA,GAAEiB,KAAKF,mBAE3E+B,CAAAA,GAAApB,EAAA,IAAAW,KAAAA,EAAArC,KAA+BA,EAAa,CAAEiB,GAAAA,KAAKF,OAAS,SAAA,EAAS,KAAAY,EAAAuB,EAAAb,GAEnErC,EAAa,CAACiB,EAAAA,IAAIqB,odAVlBJ,EAAAlC,KAAG,yBAAyB,EAAA,2FAAYmD,GAAAC,EAAAC,GAASrD,EAAc,CAAAc,EAAAA,GAAGwB,MAAIgB,+CAAxC,oFAAA,IAAA,oFADjClD,CAAAA,EAIKC,EAAAC,EAAAC,6FAHFmB,EAAA,GAAAQ,KAAAA,EAAAlC,GAAG,EAAA,yBAAA,EAAyB,KAAA2B,EAAAoB,EAAAb,WAAYR,EAAA,GAAA0B,KAAAA,EAAAC,GAASrD,EAAc,CAAA,EAAAc,GAAGwB,IAAAA,IAAIa,GAAAC,EAAAE,weAC9DtD,EAAQ,CAAA,EAAA,sLAARA,EAAQ,CAAA,EAAA,KAAAuD,EAAA/B,EAAAgC,ucAWhBtB,EAAAlC,KAAG,2BAAyB,2FAAYmD,GAAAC,EAAAC,GAASrD,EAAc,CAAA,EAAAiB,IAAIqB,IAAAA,EAAIgB,+CAAzC,IAAA,gFAAA,wFADjClD,CAAAA,EAIKC,EAAAC,EAAAC,CAAAA,4FAHFmB,EAAA,GAAAQ,KAAAA,EAAAlC,KAAG,yBAAyB,EAAA,KAAA2B,EAAAoB,EAAAb,WAAYR,EAAA,GAAA0B,KAAAA,EAAAC,GAASrD,EAAc,CAAA,EAAAiB,IAAIqB,IAAAA,IAAIa,GAAAC,EAAAE,CAAAA,weAC/DtD,EAAQ,CAAA,EAAA,sLAARA,EAAQ,CAAA,EAAA,KAAAuD,EAAA/B,EAAAgC,ucAxBpBtB,EAAAlC,KAAG,kCAAkC,EAAA,SACmCyD,EAAAzD,KAAG,SAAS,EAAA,iEAGlFA,EAAa,GAAA,4FAH2E,GAAA,4KAAA,kOAF7FI,EAGKC,EAAAC,EAAAC,CAAAA,cADHmD,EAAAA,EAA2FpD,EAAAqD,CAAAA,yBAE7FvD,EAAKC,EAAAsC,EAAApC,CAAAA,qDAHF,EAAA,EAAA,CAAAuC,GAAApB,EAAA,IAAAQ,KAAAA,EAAAlC,KAAG,kCAAkC,EAAA,KAAA2B,EAAAoB,EAAAb,CACmC,GAAA,CAAAY,GAAApB,EAAA,IAAA+B,KAAAA,EAAAzD,KAAG,WAAS,KAAA2B,EAAAiC,EAAAH,CAAAA,2gBAf1EhD,CAAqCC,EAAAA,EAEjC,MAAAmB,EAAAA,CAAAA,EAAMC,yBACR+B,EAA8B,CAGzC7C,MAAO8C,EAAG,4CAAA,EACV5D,QAAS4D,EAAG,8CAAA,EACZ3D,OAAQ2D,EAAG,+CACX7B,QAAS6B,EAAG,o5DCGb9D,EAAQ,mEAARA,EAAQ,CAAA,CAAA,6EAJc+D,EAAAA,EAAAvC,EAAA,kBAAAxB,EAAe,CAAA,GAAAe,QAAUd,EAAmBe,OAC1C+C,EAAAvC,EAAA,oBAAAxB,EAAe,CAAAe,GAAAA,QAAUd,EAAmBC,OAAAA,EAC7C6D,EAAAvC,EAAA,mBAAAxB,EAAe,CAAA,GAAAe,QAAUd,EAAmBE,MAAAA,2BAC1CH,EAAa,CAAA,CAAA,mCALzCI,EAOGC,EAAAmB,EAAAjB,CAAAA,qCADAP,EAAQ,SAJc+D,EAAAvC,EAAA,kBAAAxB,EAAe,CAAAe,GAAAA,QAAUd,EAAmBe,KAAAA,OAC1C+C,EAAAvC,EAAA,oBAAAxB,EAAe,IAAAe,QAAUd,EAAmBC,cAC7C6D,EAAAvC,EAAA,mBAAAxB,EAAe,CAAA,GAAAe,QAAUd,EAAmBE,MAAAA,+BAC1CH,CAAAA,EAAa,wMAb5B,CAAA,EAAA,GAAA,CAAAS,cAAAA,EAAoC,IAAA,EAAIC,EACxC,CAAAO,IAAAA,EAAM,EAAKP,EAAAA,EAClBsD,EAAW,gBACX/C,IACF+C,EAAW,m+CCaqBvD,cAAAT,MAAec,mCACfL,cAAAT,MAAeiB,QAAU,yNADzBS,EAAA,IAAAuC,EAAAxD,cAAAT,GAAec,GAAAA,yBACfY,EAAA,IAAAwC,EAAAzD,cAAAT,MAAeiB,8bAIzC,IAAAG,EAAApB,KAAG,sBAAoB,qGAAvB0B,EAAA,GAAAN,KAAAA,EAAApB,KAAG,oBAAoB,EAAA,KAAA2B,EAAAC,EAAAR,CAAAA,i2CATxB+C,MAAAnE,KAAG,qnBAAH0B,EAAA,IAAA0C,EAAAD,MAAAnE,KAAG,ukBAVN,IAAAqE,EAAO,kBAEA5D,CAAAA,EAAqCC,EAEjC,KAAA,CAAAmB,EAAAA,CAAMC,EAAAA,GAAAA,kZAQnBwC,EAAA,EAAAD,EAAO,EAAA,CAAI"}