const s=location.pathname.split("/").slice(0,-1).join("/"),l=[s+"/_app/immutable/entry/app.D9hdtmhQ.js",s+"/_app/immutable/nodes/0.BisKr5g3.js",s+"/_app/immutable/assets/0.Z0Ow6ygb.css",s+"/_app/immutable/nodes/1.DVyve5HP.js",s+"/_app/immutable/nodes/10.Bmprr1KE.js",s+"/_app/immutable/nodes/11.CuHDLMOV.js",s+"/_app/immutable/nodes/12.D5d-09YK.js",s+"/_app/immutable/nodes/13.DQmVwCDH.js",s+"/_app/immutable/nodes/14.BssR79KT.js",s+"/_app/immutable/assets/14.DGIivzJm.css",s+"/_app/immutable/nodes/15.Dxq7Ux5i.js",s+"/_app/immutable/nodes/16.BgkGZX2X.js",s+"/_app/immutable/nodes/17.HJbLNRyE.js",s+"/_app/immutable/nodes/18.CIjMtWHv.js",s+"/_app/immutable/nodes/19.ChF5LB_c.js",s+"/_app/immutable/nodes/2.DIASG4v3.js",s+"/_app/immutable/assets/2.XYLHkkhT.css",s+"/_app/immutable/nodes/20.C-zBHo8W.js",s+"/_app/immutable/assets/20.B8PWU8N1.css",s+"/_app/immutable/nodes/21.g4MFFopU.js",s+"/_app/immutable/nodes/22.O61zb9ny.js",s+"/_app/immutable/nodes/23.D9artp2r.js",s+"/_app/immutable/assets/8.DfdhIHyO.css",s+"/_app/immutable/nodes/24.bIm_QVef.js",s+"/_app/immutable/nodes/25._-lLnByv.js",s+"/_app/immutable/nodes/26.CpArXoN5.js",s+"/_app/immutable/nodes/27.023AvdZd.js",s+"/_app/immutable/nodes/3.DZsnUCyb.js",s+"/_app/immutable/assets/3.tHiLzZcV.css",s+"/_app/immutable/nodes/4.Ds9NUPuL.js",s+"/_app/immutable/nodes/5.RzzuafhT.js",s+"/_app/immutable/nodes/6.CgU4DxiO.js",s+"/_app/immutable/nodes/7.KqJSVpZf.js",s+"/_app/immutable/nodes/8.7fN-Vx9B.js",s+"/_app/immutable/nodes/9.BxUUIVwr.js",s+"/_app/immutable/assets/AnnouncementRow.CbfVDtZE.css",s+"/_app/immutable/chunks/AnnouncementRow.DGLimGYV.js",s+"/_app/immutable/chunks/CompatibilityModal.D_TIHaKU.js",s+"/_app/immutable/chunks/EditCompatibilityForm.CWFDRans.js",s+"/_app/immutable/assets/FicsitCard.Bep6FE4g.css",s+"/_app/immutable/chunks/FicsitCard.DMlKHoG5.js",s+"/_app/immutable/chunks/GuideCard.DfRhnCWQ.js",s+"/_app/immutable/assets/GuideForm.DcQdjkdL.css",s+"/_app/immutable/chunks/GuideForm.ZZA6Lmmb.js",s+"/_app/immutable/chunks/MetaDescriptors.Bp3k1tf0.js",s+"/_app/immutable/chunks/ModCard.BarGQhd4.js",s+"/_app/immutable/chunks/ModCompatibilityEdit.BTOmfmgd.js",s+"/_app/immutable/chunks/ModForm.lgRUfefN.js",s+"/_app/immutable/chunks/Page404.SqiZl399.js",s+"/_app/immutable/assets/TagList.C9F31gTP.css",s+"/_app/immutable/chunks/TagList.Dg4iW5UR.js",s+"/_app/immutable/chunks/VersionDependenciesGrid.Dd8dMbQ0.js",s+"/_app/immutable/assets/VersionForm.fNMkQdp2.css",s+"/_app/immutable/chunks/VersionForm.Dsa8yY5A.js",s+"/_app/immutable/chunks/api.Dn0ikjHb.js",s+"/_app/immutable/chunks/extras.DeRaE0XW.js",s+"/_app/immutable/chunks/formatting.CJGi6h9M.js",s+"/_app/immutable/chunks/forms.B6ROzrhG.js",s+"/_app/immutable/chunks/forms.DUgnUP3z.js",s+"/_app/immutable/chunks/gql.DGDorg1Q.js",s+"/_app/immutable/chunks/graphql.DSJZyne3.js",s+"/_app/immutable/chunks/jszip.BsQfnsCz.js",s+"/_app/immutable/chunks/launcher.BTNKX7v3.js",s+"/_app/immutable/chunks/markdown.DNe34AHq.js",s+"/_app/immutable/chunks/preload-helper.9YLJ1q38.js",s+"/_app/immutable/chunks/uplugin.DxQDf4cb.js",s+"/_app/immutable/chunks/user.uItlhuXC.js",s+"/_app/immutable/assets/vendor.Cirlo5Z8.css",s+"/_app/immutable/chunks/vendor.C_r4hsoS.js",s+"/_app/immutable/entry/start.CCC5I7UC.js",s+"/_app/immutable/chunks/custom_protocol.u56lozG6.js"],b=[s+"/assets/android-chrome-192x192.png",s+"/assets/android-chrome-512x512.png",s+"/assets/apple-touch-icon.png",s+"/assets/browserconfig.xml",s+"/assets/favicon-16x16.png",s+"/assets/favicon-32x32.png",s+"/assets/favicon.ico",s+"/assets/fonts/flow-rounded.woff",s+"/assets/mstile-150x150.png",s+"/assets/safari-pinned-tab.svg",s+"/images/Satisfactory_KeyArt_1_1024x1024_NoLogo.webp",s+"/images/bg_nologo.webp",s+"/images/dog_aw_yis_pats.gif",s+"/images/dog_boing.gif",s+"/images/dog_stand.gif",s+"/images/mods_mobile.webp",s+"/images/no_image.webp",s+"/images/satisfactory_logo_full_color_small.webp",s+"/images/sf_modding_logo.webp",s+"/images/smm_background.webp",s+"/images/smm_hand.webp",s+"/images/smm_icon_white.webp",s+"/manifest.json",s+"/robots.txt"],n="1724796470332",m=self,o=`cache${n}`,c=l.concat(b),_=new Set(c);m.addEventListener("install",a=>{a.waitUntil(caches.open(o).then(e=>e.addAll(c)).then(()=>{m.skipWaiting()}))});m.addEventListener("activate",a=>{a.waitUntil(caches.keys().then(async e=>{for(const t of e)t!==o&&await caches.delete(t);m.clients.claim()}))});async function r(a){const e=await caches.open(`offline${n}`);try{const t=await fetch(a);return e.put(a,t.clone()),t}catch(t){const p=await e.match(a);if(p)return p;throw t}}m.addEventListener("fetch",a=>{if(a.request.method!=="GET"||a.request.headers.has("range"))return;const e=new URL(a.request.url),t=e.protocol.startsWith("http"),p=e.hostname===self.location.hostname&&e.port!==self.location.port,i=e.host===self.location.host&&_.has(e.pathname),u=a.request.cache==="only-if-cached"&&!i;t&&!p&&!u&&i&&!a.request.url.includes("start")&&a.respondWith((async()=>i&&await caches.match(a.request)||r(a.request))())});
