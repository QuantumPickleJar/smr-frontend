const s=location.pathname.split("/").slice(0,-1).join("/"),l=[s+"/_app/immutable/entry/app.D_ToZmiX.js",s+"/_app/immutable/nodes/0.B3OsHY3b.js",s+"/_app/immutable/assets/0.CCe9y1Fn.css",s+"/_app/immutable/nodes/1.QYBABZlg.js",s+"/_app/immutable/nodes/10.D_bM85YM.js",s+"/_app/immutable/nodes/11.csregUBS.js",s+"/_app/immutable/nodes/12.Dghn2TsT.js",s+"/_app/immutable/nodes/13.DIVZGG2O.js",s+"/_app/immutable/nodes/14.OoZiQMjL.js",s+"/_app/immutable/assets/14.DGIivzJm.css",s+"/_app/immutable/nodes/15.5dLnNPeb.js",s+"/_app/immutable/nodes/16.BYUeGuIl.js",s+"/_app/immutable/nodes/17.Dpcnqh_c.js",s+"/_app/immutable/nodes/18.VyXIl73j.js",s+"/_app/immutable/nodes/19.DMF3XawZ.js",s+"/_app/immutable/nodes/2.Yvb-dHD_.js",s+"/_app/immutable/assets/2.XYLHkkhT.css",s+"/_app/immutable/nodes/20.zEZinye3.js",s+"/_app/immutable/assets/20.B8PWU8N1.css",s+"/_app/immutable/nodes/21.C2grntbw.js",s+"/_app/immutable/nodes/22.CkMuKCd6.js",s+"/_app/immutable/nodes/23.Hpv6-wQ7.js",s+"/_app/immutable/assets/8.DfdhIHyO.css",s+"/_app/immutable/nodes/24.CVmwlOo7.js",s+"/_app/immutable/nodes/25.1TcqcwHX.js",s+"/_app/immutable/nodes/26.BuBLtfkL.js",s+"/_app/immutable/nodes/27.BezVMxp3.js",s+"/_app/immutable/nodes/3.BRKeWCfH.js",s+"/_app/immutable/assets/3.tHiLzZcV.css",s+"/_app/immutable/nodes/4.Dimk3fMj.js",s+"/_app/immutable/nodes/5.BeLo7mm6.js",s+"/_app/immutable/nodes/6.CBvSfsUX.js",s+"/_app/immutable/nodes/7.DmLXY9cI.js",s+"/_app/immutable/nodes/8.Ct2Q34XY.js",s+"/_app/immutable/nodes/9.D1R2f-gt.js",s+"/_app/immutable/assets/AnnouncementRow.CbfVDtZE.css",s+"/_app/immutable/chunks/AnnouncementRow.p89Y_0kB.js",s+"/_app/immutable/chunks/CompatibilityModal.DjZrJW7p.js",s+"/_app/immutable/chunks/EditCompatibilityForm.4XTkkPbu.js",s+"/_app/immutable/assets/FicsitCard.zCeLN5-f.css",s+"/_app/immutable/chunks/FicsitCard.BnhWf_qK.js",s+"/_app/immutable/chunks/GuideCard.toyi2OeY.js",s+"/_app/immutable/assets/GuideForm.DcQdjkdL.css",s+"/_app/immutable/chunks/GuideForm.BcsiaUwy.js",s+"/_app/immutable/chunks/MetaDescriptors.qty2Ul8p.js",s+"/_app/immutable/chunks/ModCard.eeTJBcCT.js",s+"/_app/immutable/chunks/ModCompatibilityEdit.DzIxgd2a.js",s+"/_app/immutable/chunks/ModForm.dJFVPT6Y.js",s+"/_app/immutable/chunks/Page404.FMghfDy_.js",s+"/_app/immutable/assets/TagList.C9F31gTP.css",s+"/_app/immutable/chunks/TagList.BDNqCPnP.js",s+"/_app/immutable/chunks/VersionDependenciesGrid.BHc3Eat4.js",s+"/_app/immutable/assets/VersionForm.fNMkQdp2.css",s+"/_app/immutable/chunks/VersionForm.BWYauK6C.js",s+"/_app/immutable/chunks/api.Dn0ikjHb.js",s+"/_app/immutable/chunks/extras.zAofBdAs.js",s+"/_app/immutable/chunks/formatting.CJGi6h9M.js",s+"/_app/immutable/chunks/forms.DFefcPfb.js",s+"/_app/immutable/chunks/forms.L71L-9ga.js",s+"/_app/immutable/chunks/gql.DGDorg1Q.js",s+"/_app/immutable/chunks/graphql.DSJZyne3.js",s+"/_app/immutable/chunks/jszip.Dunw9h5H.js",s+"/_app/immutable/chunks/launcher.OuWfTCMd.js",s+"/_app/immutable/chunks/markdown.D1OBRoE3.js",s+"/_app/immutable/chunks/preload-helper.9YLJ1q38.js",s+"/_app/immutable/chunks/uplugin.DHrKEgZQ.js",s+"/_app/immutable/chunks/user.6g-cz5HZ.js",s+"/_app/immutable/assets/vendor.Cirlo5Z8.css",s+"/_app/immutable/chunks/vendor.Czei42k5.js",s+"/_app/immutable/entry/start.Ct4q7xD7.js",s+"/_app/immutable/chunks/custom_protocol.u56lozG6.js"],_=[s+"/assets/android-chrome-192x192.png",s+"/assets/android-chrome-512x512.png",s+"/assets/apple-touch-icon.png",s+"/assets/browserconfig.xml",s+"/assets/favicon-16x16.png",s+"/assets/favicon-32x32.png",s+"/assets/favicon.ico",s+"/assets/fonts/flow-rounded.woff",s+"/assets/mstile-150x150.png",s+"/assets/safari-pinned-tab.svg",s+"/images/Satisfactory_KeyArt_1_1024x1024_NoLogo.webp",s+"/images/bg_nologo.webp",s+"/images/dog_aw_yis_pats.gif",s+"/images/dog_boing.gif",s+"/images/dog_stand.gif",s+"/images/mods_mobile.webp",s+"/images/no_image.webp",s+"/images/satisfactory_logo_full_color_small.webp",s+"/images/sf_modding_logo.webp",s+"/images/smm_background.webp",s+"/images/smm_hand.webp",s+"/images/smm_icon_white.webp",s+"/manifest.json",s+"/robots.txt"],n="1724767150188",m=self,o=`cache${n}`,c=l.concat(_),b=new Set(c);m.addEventListener("install",a=>{a.waitUntil(caches.open(o).then(e=>e.addAll(c)).then(()=>{m.skipWaiting()}))});m.addEventListener("activate",a=>{a.waitUntil(caches.keys().then(async e=>{for(const t of e)t!==o&&await caches.delete(t);m.clients.claim()}))});async function d(a){const e=await caches.open(`offline${n}`);try{const t=await fetch(a);return e.put(a,t.clone()),t}catch(t){const p=await e.match(a);if(p)return p;throw t}}m.addEventListener("fetch",a=>{if(a.request.method!=="GET"||a.request.headers.has("range"))return;const e=new URL(a.request.url),t=e.protocol.startsWith("http"),p=e.hostname===self.location.hostname&&e.port!==self.location.port,i=e.host===self.location.host&&b.has(e.pathname),u=a.request.cache==="only-if-cached"&&!i;t&&!p&&!u&&i&&!a.request.url.includes("start")&&a.respondWith((async()=>i&&await caches.match(a.request)||d(a.request))())});
