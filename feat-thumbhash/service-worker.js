const s=location.pathname.split("/").slice(0,-1).join("/"),l=[s+"/_app/immutable/entry/app.kwPMbDhV.js",s+"/_app/immutable/nodes/0.CdAu9Sj6.js",s+"/_app/immutable/assets/0.Z0Ow6ygb.css",s+"/_app/immutable/nodes/1.BDrbvY_J.js",s+"/_app/immutable/nodes/10.CA2i9W5S.js",s+"/_app/immutable/nodes/11.C33AyLmd.js",s+"/_app/immutable/nodes/12.DNBSicLo.js",s+"/_app/immutable/nodes/13.DOaOuC4p.js",s+"/_app/immutable/nodes/14.CnjB_IhV.js",s+"/_app/immutable/assets/14.DGIivzJm.css",s+"/_app/immutable/nodes/15.CEKsfIEg.js",s+"/_app/immutable/nodes/16.D374VQqn.js",s+"/_app/immutable/nodes/17.BgJ0Ca_9.js",s+"/_app/immutable/nodes/18.BslhtxhD.js",s+"/_app/immutable/nodes/19.C4cHvHuh.js",s+"/_app/immutable/nodes/2.B9eBNusL.js",s+"/_app/immutable/assets/2.XYLHkkhT.css",s+"/_app/immutable/nodes/20.DJmoHb1n.js",s+"/_app/immutable/assets/20.B8PWU8N1.css",s+"/_app/immutable/nodes/21.DIsVYUEZ.js",s+"/_app/immutable/nodes/22.AIx2O_pv.js",s+"/_app/immutable/nodes/23.DNF6jsim.js",s+"/_app/immutable/assets/8.DfdhIHyO.css",s+"/_app/immutable/nodes/24.DIoq6dju.js",s+"/_app/immutable/nodes/25.Di-bx9zu.js",s+"/_app/immutable/nodes/26.eAdFJ91Z.js",s+"/_app/immutable/nodes/27.BIo2OTpN.js",s+"/_app/immutable/nodes/3.Urne6LBd.js",s+"/_app/immutable/assets/3.tHiLzZcV.css",s+"/_app/immutable/nodes/4.Dnefg_Yn.js",s+"/_app/immutable/nodes/5.B5LQ5yvc.js",s+"/_app/immutable/nodes/6.BIVWBzYR.js",s+"/_app/immutable/nodes/7.BmdJszTB.js",s+"/_app/immutable/nodes/8.Ccdjp6E5.js",s+"/_app/immutable/nodes/9.DfP9yFj5.js",s+"/_app/immutable/assets/AnnouncementRow.CbfVDtZE.css",s+"/_app/immutable/chunks/AnnouncementRow.DSzUOHo_.js",s+"/_app/immutable/chunks/CompatibilityModal.Dbdxcfc3.js",s+"/_app/immutable/chunks/EditCompatibilityForm.BCliq89G.js",s+"/_app/immutable/assets/FicsitCard.Bep6FE4g.css",s+"/_app/immutable/chunks/FicsitCard.CWOwOGxC.js",s+"/_app/immutable/chunks/GuideCard.BO0fESd_.js",s+"/_app/immutable/assets/GuideForm.DcQdjkdL.css",s+"/_app/immutable/chunks/GuideForm.CX1XTBJp.js",s+"/_app/immutable/chunks/MetaDescriptors.CyojAPa8.js",s+"/_app/immutable/chunks/ModCard.C4rmFkDp.js",s+"/_app/immutable/chunks/ModCompatibilityEdit.CfJXgby0.js",s+"/_app/immutable/chunks/ModForm.D1iAA_Wl.js",s+"/_app/immutable/chunks/Page404.Dg6oCpo5.js",s+"/_app/immutable/assets/TagList.C9F31gTP.css",s+"/_app/immutable/chunks/TagList.OVFYHD89.js",s+"/_app/immutable/chunks/VersionDependenciesGrid.C9qCv7-C.js",s+"/_app/immutable/assets/VersionForm.fNMkQdp2.css",s+"/_app/immutable/chunks/VersionForm.DlZxEjT3.js",s+"/_app/immutable/chunks/api.Dn0ikjHb.js",s+"/_app/immutable/chunks/extras.g5WjmbV1.js",s+"/_app/immutable/chunks/formatting.CJGi6h9M.js",s+"/_app/immutable/chunks/forms.C1ygUuWO.js",s+"/_app/immutable/chunks/forms.umpDkwZg.js",s+"/_app/immutable/chunks/gql.DGDorg1Q.js",s+"/_app/immutable/chunks/graphql.DSJZyne3.js",s+"/_app/immutable/chunks/jszip.4Z675kFd.js",s+"/_app/immutable/chunks/launcher.DuCl_vKP.js",s+"/_app/immutable/chunks/markdown.B44QG1cw.js",s+"/_app/immutable/chunks/preload-helper.9YLJ1q38.js",s+"/_app/immutable/chunks/uplugin.wvYCq2We.js",s+"/_app/immutable/chunks/user.DXmDHLyz.js",s+"/_app/immutable/assets/vendor.Cirlo5Z8.css",s+"/_app/immutable/chunks/vendor.CIZ-SFek.js",s+"/_app/immutable/entry/start.BudZTOYF.js",s+"/_app/immutable/chunks/custom_protocol.u56lozG6.js"],_=[s+"/assets/android-chrome-192x192.png",s+"/assets/android-chrome-512x512.png",s+"/assets/apple-touch-icon.png",s+"/assets/browserconfig.xml",s+"/assets/favicon-16x16.png",s+"/assets/favicon-32x32.png",s+"/assets/favicon.ico",s+"/assets/fonts/flow-rounded.woff",s+"/assets/mstile-150x150.png",s+"/assets/safari-pinned-tab.svg",s+"/images/Satisfactory_KeyArt_1_1024x1024_NoLogo.webp",s+"/images/bg_nologo.webp",s+"/images/dog_aw_yis_pats.gif",s+"/images/dog_boing.gif",s+"/images/dog_stand.gif",s+"/images/mods_mobile.webp",s+"/images/no_image.webp",s+"/images/satisfactory_logo_full_color_small.webp",s+"/images/sf_modding_logo.webp",s+"/images/smm_background.webp",s+"/images/smm_hand.webp",s+"/images/smm_icon_white.webp",s+"/manifest.json",s+"/robots.txt"],n="1724795544325",m=self,o=`cache${n}`,c=l.concat(_),b=new Set(c);m.addEventListener("install",a=>{a.waitUntil(caches.open(o).then(e=>e.addAll(c)).then(()=>{m.skipWaiting()}))});m.addEventListener("activate",a=>{a.waitUntil(caches.keys().then(async e=>{for(const t of e)t!==o&&await caches.delete(t);m.clients.claim()}))});async function d(a){const e=await caches.open(`offline${n}`);try{const t=await fetch(a);return e.put(a,t.clone()),t}catch(t){const p=await e.match(a);if(p)return p;throw t}}m.addEventListener("fetch",a=>{if(a.request.method!=="GET"||a.request.headers.has("range"))return;const e=new URL(a.request.url),t=e.protocol.startsWith("http"),p=e.hostname===self.location.hostname&&e.port!==self.location.port,i=e.host===self.location.host&&b.has(e.pathname),u=a.request.cache==="only-if-cached"&&!i;t&&!p&&!u&&i&&!a.request.url.includes("start")&&a.respondWith((async()=>i&&await caches.match(a.request)||d(a.request))())});
