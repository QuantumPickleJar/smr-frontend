{"version":3,"mappings":"wu1BAUaA,GAA2BC,GACtCC,GAAa,CACXC,IAAKC,GACLH,QACAI,UAAW,CACTC,GAAc,CACZC,UACAC,KAAM,CACJC,QAAS,IAAM,KACfC,eAAgB,IAAM,KACtBC,QAAS,IAAM,KACfC,UAAW,IAAM,KACjBC,aAAc,IAAM,KACpBC,UAAW,IAAM,KACjBC,cAAe,IAAM,KACrBC,kBAAmB,IAAM,IAE3BC,UAAS,CACPC,SAAU,CACRC,YAAYC,EAASC,EAAMC,GACzBA,EAAMC,WAAW,CACfC,WAAY,QACZC,GAAIJ,EAAKK,SAEb,EACAC,UAAUP,EAASC,EAAMC,GACvBA,EAAMC,WAAW,CACfC,WAAY,MACZC,GAAIJ,EAAKO,OAEb,EACAC,WAAWT,EAASC,EAAMC,GACxBA,EAAMC,WAAW,CACfC,WAAY,MACZC,GAAIJ,EAAKO,OAEb,EACAE,QAAQV,EAASC,EAAMC,GACrBA,EAAMC,WAAW,CACfC,WAAY,MACZC,GAAIJ,EAAKO,OAEb,EACAG,eAAeX,EAASC,EAAMC,GAC5BA,EAAMC,WAAW,CACfC,WAAY,UACZC,GAAIJ,EAAKW,SAEb,IACAC,YAAYb,EAASC,EAAMC,EACzBA,GAAMC,WAAW,CACfC,WAAY,UACZC,GAAIJ,EAAKW,SAEb,IACAE,iBAAiBd,EAASC,EAAMC,EAC9BA,GAAMC,WAAW,CACfC,WAAY,aACZC,GAAIJ,EAAKc,cAEb,EACAC,cAAchB,EAASC,EAAMC,GAC3BA,EAAMC,WAAW,CACfC,WAAY,UACZC,GAAIJ,EAAKW,WAEb,EACAK,cAAcjB,EAASC,EAAMC,GAC3BA,EAAMC,WAAW,CACfC,WAAY,UACZC,GAAIJ,EAAKW,WAEb,MAINM,GAAaC,MAAOC,GACZ,OAAAC,EAAQC,GAAIC,IACX,OACLC,mBAAmBC,EACV,QAAAL,EAAMM,cAAcD,EAAW,CACpCE,cAAeN,CAEnB,IACAO,aAAaC,EACX,QAAOA,EAAMC,QAAQC,QAAQ,oBAAyB,IACxD,EACAZ,oBAEA,EACF,CAEFa,KAAkB,CAChBC,6BAA8B,KAEhCC,MCrGOC,GAAmBhB,MAAStC,aAEhC,CACLuD,OAFaxD,GAAwBC,CAChC,CAEP,6ICsIO,m/BAYYwD,EAAa,GAACR,MAAMC,QAAO,6BAArC,mGAAHQ,GAA4CC,EAAAC,EAAAC,sCAA/BJ,EAAa,GAACR,MAAMC,QAAO,KAAAY,EAAAC,EAAAC,0EAFrC,sFAAHN,EAAgBC,EAAAC,EAAAC,qJANb,kQAAHH,EAAmBC,EAAAC,EAAAC,iBACnBH,IAEKC,EAAAM,EAAAJ,kKAOgG,+HAGA,+HAGI,4KAjBtGJ,EAAS,KAKJA,GAAcS,WAAQ,EAGtBT,KAAcR,MAAK,0LAT/BS,GAsBKC,EAAAM,EAAAJ,mzBAKAJ,EAAY,4CAAZA,EAAY,yBAAnBC,EAA0BC,EAAAQ,EAAAN,2BAAnBJ,EAAY,yHA9BFA,EAAgB,qBAAhBA,EAAgB,gIA6BdA,EAAU,wBAAVA,EAAU,8QA7BZA,EAAgB,oGA6BdA,EAAU,qOArJvB,SAAAD,EAASY,KAEJ,CACH,MAAAC,EAAQC,GAAU,CACtBC,MAAOC,GACPhB,SACAiB,UAAS,GACTC,cAAe,eACfC,MAAO,EAGL,OAAAC,EAAQ,GACZjC,GAAUkC,UAAWpC,OACfA,EAAK,CACD,MAAAqC,EAAe,IAAAC,KAAS,IAAAA,OAAOC,UAAY,MAAoB,EACrEC,GAAOC,IAAI,QAASzC,EAAK,CACvB0C,OAAQC,OAAOC,SAASC,SACxBC,QAAST,SAEDF,GACVpB,EACGgC,SAASC,GAAgBC,OAAS,CACjChB,cAAe,cAEhBiB,eACAC,MACAC,OAAI,KACHZ,GAAOa,OAAO,OAAO,OAI3BlB,EAAQ,GAEJnC,EAAK,CACP4B,EAAMM,QACNN,EAAM0B,SAEA,MAAAC,EAAQ3B,EAAMQ,UAAWoB,IACxBA,EAAS/B,WACR+B,EAAShD,OAEXiD,QAAQjD,MAAMgD,EAAShD,MAAMC,SAC7B8C,KACSC,EAASE,OAClBC,GAAKlB,IAAIe,EAASE,KAAK9B,OACvB2B,aAKNI,GAAKlB,IAAI,cAKTmB,EAAa,CACjBC,OAAQC,GACRC,OAAQC,GACRC,SAAUC,EAGR,MAAAC,EAAe,GACfC,EAAa,GACbC,EAAY,GAEL,CACH,MAAAC,EAAeC,aAAaC,QAAQ,kBAC1CD,aAAaE,WAAW,sBAEpBC,EAAcC,OAAOC,YAAYC,EAAMnH,IAAIoH,aAAaC,QACxD,GAAAJ,OAAO5G,KAAK2G,GAAaM,SAAW,IACtCN,EAAcC,OAAOC,YAAW,IAAKK,gBAAgBtC,OAAOC,SAASsC,gBAGjEC,EAAOT,EAAYS,KACnBC,EAAQV,EAAYU,MAEtBd,GAAgBa,GAAQC,IAC1Bf,EAAY,GACZgB,GAAgB5C,IAAI,IAEpB1B,EACGgC,SAASa,EAAcU,CAAgD,GACtEa,OACAC,MAEDlC,gBACAE,KAAMkC,IACDA,EAAO9E,OACTiD,QAAQjD,MAAM8E,EAAO9E,MAAMC,OAC3B8E,IAAA,EAAApB,EAAe,qBAAuBmB,EAAO9E,MAAMC,SACnD8E,EAAA,EAAAnB,EAAa,MAEblE,GAAUuC,IAAI6C,EAAO5B,KAAK8B,QAAQxF,OAClCqF,GAAgB5C,IAAI,IAGvBU,WACAC,KAAY,IAAAmC,EAAA,EAAAlB,EAAY,MAIzB,MAAAoB,EAAe5D,GAAU,CAC7BC,MAAO4D,GACP3E,SACAiB,UAAS,CAAI2D,aAAwBC,mBAAmBjD,OAAOC,SAASiD,OAASlD,OAAOC,SAASkD,WACjG7D,cAAe,2CAQX8D,EAAI,CAAIC,EAAiBtI,IAC7B6G,cAAa0B,QAAQ,iBAAkBD,GACvCE,GAAKxI,EAAG,QAmBuCqI,EAAK,SAAUI,EAAczC,KAAK0C,gBAAgBvC,cAGlDkC,EAAK,SAAUI,EAAczC,KAAK0C,gBAAgBrC,cAGlDgC,EAAK,WAAYI,EAAczC,KAAK0C,gBAAgBnC,uBArBpFoC,GAAgBC,0BA6BdlC,EAAUkC,+CAxCtBD,IACLZ,EAAavD,MACbuD,IAAanC,qrBClBAtC,EAAO,CAAAuF,MAAAvF,oCAOuDA,EAAW,GAACwF,WAAW,4VAPrFxF,EAAO,2IAOuDA,EAAW,GAACwF,WAAW,ypBANhCxF,EAAW,CAACwF,aAAW,qLAAvBxF,EAAW,GAACwF,WAAW,iLAC7C,iIAC1B,oyBAMsEC,EAAAjF,EAAA,QAAAkF,EAAA,0BAAA1F,KAAM2F,oBAAlF1F,EAA+FC,EAAAM,EAAAJ,WAAnBwF,EAAA,IAAAF,OAAA,0BAAA1F,GAAM2F,6DAE7E,IAAAE,EAAA7F,GAAM8F,WAAQ,+DAAdF,EAAA,IAAAC,OAAA7F,GAAM8F,WAAQ,KAAAzF,EAAA0F,EAAAF,6lBAIW,qGAC1B,kqBApB0B,mGAC1B,gsBAHL,OAAA7F,OAAU,KAAI,uWAsCLgG,KAAAhG,MAAKtD,qKAALkJ,EAAA,MAAAK,EAAAD,KAAAhG,MAAKtD,sNALLsJ,KAAAhG,MAAKtD,cAAgBsD,EAAW,CAAKA,MAAI,IAACtD,+JAA1CkJ,EAAA,MAAAK,EAAAD,KAAAhG,IAAKtD,2BAAgBsD,EAAW,KAAKA,EAAI,EAACtD,wJAMnB,IAAAmJ,EAAA7F,IAAKkG,OAAI,8DAAT,CAAAN,EAAA,KAAAC,OAAA7F,IAAKkG,OAAI,KAAA7F,EAAA0F,EAAAF,kCACnC,IAAAA,EAAA7F,IAAKmG,QAAK,+DAAVP,EAAA,KAAAC,OAAA7F,IAAKmG,QAAK,KAAA9F,EAAA0F,EAAAF,8nBANgB,KAAAA,EAAA7F,MAAKkG,KAAI,8DAAT,CAAAN,EAAA,KAAAC,OAAA7F,MAAKkG,KAAI,KAAA7F,EAAA0F,EAAAF,kCACnC,IAAAA,EAAA7F,IAAKmG,QAAK,+DAAVP,EAAA,KAAAC,OAAA7F,MAAKmG,MAAK,KAAA9F,EAAA0F,EAAAF,grBAHf,OAAA7F,MAAKoG,WAAQ,gVADdpG,EAAG,wBAARgE,OAAIqC,GAAA,4PAACrG,EAAG,qBAARgE,OAAIqC,GAAA,qHAAJrC,OAAIqC,EAAAC,EAAAtC,OAAAqC,GAAA,yCAAJrC,OAAIqC,GAAA,yJAuBUL,KAAAhG,MAAKtD,qKAALkJ,EAAA,KAAAK,EAAAD,KAAAhG,MAAKtD,sNALLsJ,KAAAhG,MAAKtD,cAAgBsD,EAAW,KAAKA,EAAI,EAACtD,iKAA1CkJ,EAAA,KAAAK,EAAAD,KAAAhG,MAAKtD,yBAAgBsD,EAAW,CAAKA,MAAI,IAACtD,sJAMnB,IAAAmJ,EAAA7F,IAAKkG,OAAI,+DAATN,EAAA,IAAAC,OAAA7F,IAAKkG,OAAI,KAAA7F,EAAA0F,EAAAF,iCACnC,KAAAA,EAAA7F,MAAKmG,MAAK,+DAAVP,EAAA,IAAAC,OAAA7F,MAAKmG,MAAK,KAAA9F,EAAA0F,EAAAF,+lBANgB,IAAAA,EAAA7F,IAAKkG,OAAI,+DAATN,EAAA,IAAAC,OAAA7F,MAAKkG,KAAI,KAAA7F,EAAA0F,EAAAF,iCACnC,KAAAA,EAAA7F,MAAKmG,MAAK,8DAAV,CAAAP,EAAA,IAAAC,OAAA7F,MAAKmG,MAAK,KAAA9F,EAAA0F,EAAAF,+oBAHf,QAAA7F,IAAKoG,aAAQ,qoBAee,mHAC1B,yuBAMgBpG,EAAa,wBAAbA,EAAa,uKAAbA,EAAa,6JAChB,2JAAnBC,EAA2CC,EAAAQ,EAAAN,qYAxBxCJ,EAAM,wBAAXgE,OAAIqC,GAAA,kEAcDrG,EAAe,CAAAuG,MAAAvG,iWAdbA,EAAM,qBAAXgE,OAAIqC,GAAA,qHAAJrC,OAAIqC,EAAAC,EAAAtC,OAAAqC,GAAA,WAcDrG,EAAe,yLAdlBgE,OAAIqC,GAAA,qNAjDHrG,EAAe,IAAAwG,GAAAxG,sYADtBC,EA8EKC,EAAAM,EAAAJ,qEA7EEJ,EAAe,+tBAHTA,EAAa,SAAS,wOAAtBA,EAAa,6UA3FjByG,GAAaC,iBACbC,GAAsCD,mBACtCE,CAAwBF,mBACxBG,GAAsBH,EAElB,MAAAI,GAAMC,uBA4FW1C,GAAgB5C,IAAI,UAMlByD,GAAK8B,EAAO,UAMdC,EAAA,IAAA/B,GAAK8B,EAAO,SAAWE,EAAMlJ,UAO7BkB,GAAUuC,IAAI,WAa2C0F,GAAYC,EAAK1K,UAgBjByK,GAAYC,EAAK1K,kBAqB1EmK,GAAavB,8PA/J1C+B,EAAcxD,EAAMnH,IAAIoI,yBAC1BP,EAAA,EAAE+C,EAAWJ,EAAgBA,EAAMK,MAAMC,aAAeN,EAAMK,MAAME,iBAAmBP,EAAMK,MAAMG,gBAA9E,yBAEnBC,EAAG,EAEFjL,IAAKsK,EAAO,IACZd,KAAM,OACNC,MAAOyB,EAAG,kBAGVlL,IAAKsK,EAAO,QACZd,KAAM,YACNC,MAAOyB,EAAG,kBAGVlL,IAAKsK,EAAO,UACZd,KAAM,cACNC,MAAOyB,EAAG,oBAGVlL,IAAKsK,EAAO,gBACZd,KAAM,YACNC,MAAOyB,EAAG,0BAGVlL,IAAKsK,EAAO,SACZd,KAAM,OACNC,MAAOyB,EAAG,mBAGVlL,IAAK,6BACLwJ,KAAM,SACNC,MAAOyB,EAAG,mBACVxB,SAAU,KAGV1J,IAAK,2BACLwJ,KAAM,eACNC,MAAOyB,EAAG,gBACVxB,SAAU,KAGV1J,IAAK,6BACLwJ,KAAM,QACNC,MAAOyB,EAAG,kBACVxB,SAAU,2BAIXyB,EAAM,EAELnL,IAAKsK,EAAO,QACZd,KAAM,OACNC,MAAOyB,EAAG,kBAGVlL,IAAKsK,EAAO,kBACZd,KAAM,gBACNC,MAAO,mBAGPzJ,IAAKsK,EAAO,kBACZd,KAAM,SACNC,MAAOyB,EAAG,4BAGVlL,IAAKsK,EAAO,OACZd,KAAM,QACNC,MAAOyB,EAAG,iBAGVlL,IAAKsK,EAAO,YACZd,KAAM,MACNC,MAAOyB,EAAG,iBAGVlL,IAAK,yCACLwJ,KAAM,SACNC,MAAOyB,EAAG,gBACVxB,WAAU,6NCtEwC,IAAA0B,EAAA9H,GAAUA,IAAU,kEAApB,CAAA4F,EAAA,GAAAkC,OAAA9H,GAAUA,IAAU,SAAAK,EAAAyG,EAAAgB,qPAKlE9H,EAAU,QAAC,UAAOA,EAAY,qLAA9BA,EAAU,UAAC,yBAAOA,EAAY,iJAFjBA,EAAW,0BACNA,EAAW,yDAN1ByF,EAAAsC,EAAA,QAAAC,EAAAhI,GAAiBA,IAAU,uDAAxCC,GAUKC,EAAA6H,EAAA3H,GATH6H,EAQKF,EAAAG,sBANHD,EAKKC,EAAAC,CADHF,IAAqBE,EAAAC,6GAAjBpI,EAAU,mBAAQA,EAAY,gCAFjBA,EAAW,qCACNA,EAAW,KAN1BqI,IAAAzC,EAAA,GAAAoC,OAAAhI,KAAiBA,EAAU,uJAVhC,MAAAsI,GAAkB,6CAZlBC,EAAS,EACZC,GAAuBC,MAAO,QAC9BD,GAAuBE,OAAQ,SAC/BF,GAAuBG,OAAU,aACjCH,GAAuBI,KAAM,gBAE1BC,EAAgB,EACnBL,GAAuBC,MAAO,cAC9BD,GAAuBE,KAAQ,gBAC/BF,GAAuBG,SAAU,iBACjCH,GAAuBI,GAAM,8BAIrBnJ,GAAeiH,cACfoC,CAAkCpC,kIAG1CqC,EAActJ,EAAQ+F,WAAW8C,oBACnC/D,EAAA,EAAEyE,EAAeD,EAActJ,EAAQwJ,WAAWX,GAAiB,IAAM7I,4LCDjEO,EAAc,IAAE0C,MAAMwG,sCAA3BlF,OAAIqC,GAAA,0RADRpG,EAIKC,EAAAM,EAAAJ,2EAHIJ,EAAc,CAAE0C,SAAMwG,mCAA3BlF,OAAIqC,GAAA,6GAAJrC,OAAIqC,EAAAC,EAAAtC,OAAAqC,GAAA,yCAAJrC,OAAIqC,GAAA,mMAJkCrG,EAAc,GAACR,MAAMC,QACjDqJ,WAAAN,GAAuBG,oJADK3I,EAAc,CAACR,QAAMC,qMAKjCA,QAAAO,KAAaP,QAAqBqJ,WAAA9I,GAAa8I,wGAA/ClD,EAAA,IAAAuD,EAAA1J,QAAAO,GAAaP,WAAqBmG,EAAA,IAAAuD,EAAAL,WAAA9I,GAAa8I,2KAT1E,OAAA9I,KAAeS,SAAQ,EAElBT,GAAeR,QAAK,EAIpBQ,EAAc,IAAIA,EAAe,CAAA0C,QAAQ1C,EAAc,GAAC0C,KAAKwG,iBAAgB,6XAf/E,MAAAnJ,EAASY,GAET,EAAAyI,EAAgBvI,GAAU,CAC9BC,MAAOuI,GACPtJ,OACAiB,YAAS,gLCgBkB,IAAA6E,EAAA7F,GAAK,KAAC,0HAAhBsF,MAAAtF,KAAK,4RADf2D,OAAOI,QAAQ/D,EAAS,yBAA7BgE,OAAIqC,GAAA,2PAAC1C,OAAOI,QAAQ/D,EAAS,sBAA7BgE,OAAIqC,GAAA,qHAAJrC,OAAIqC,EAAAC,EAAAtC,OAAAqC,GAAA,yCAAJrC,OAAIqC,GAAA,mKAD0BF,MAAAnG,KAAG,8FAAjBA,EAAK,sBAALA,EAAK,yOAD3BC,EAMKC,EAAAM,EAAAJ,yCAL+BwF,EAAA,IAAA0D,EAAAnD,MAAAnG,KAAG,wFAAjBA,EAAK,wNAnBnBuJ,EAASC,GAAS,CAAE,iCAEX,KAAA1C,IAAMC,iBAEf0C,EAAS,CACbC,GAAI,UACJC,GAAI,UACJC,GAAI,WACJC,GAAI,YAGAC,EAAOC,GAAiBxG,aAAaC,QAAQ,aAAewG,EAAQC,mCAC1EH,EAAK1I,UAAW8I,IACdF,EAAQG,eAAeD,CACvB3G,eAAa0B,QAAQ,WAAYiF,EAAC,gBAKhBE,GAAK9E,qtDC8GhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wIADyDtF,EAAI,KAAAyF,EAAA4E,EAAA,MAAAC,UAApErK,GAA+EC,EAAAmK,EAAAjK,UAC/EH,IAUQC,EAAAqK,EAAAnK,kFAXwDJ,EAAI,qbAqBO,iGAE9D,sIAHFwK,EAAAxK,GAAkB,aAAOuF,GAAAvF,uMAAzBA,OAAkB,8pCAUiDyK,kQAY3D,+GACsB,irBAZtB,2HACsB,8qBAqB1BzK,EAAO,CAAAwG,MAAAxG,sbAOZC,EAuBKC,EAAAM,EAAAJ,+CA9BAJ,EAAO,0pCAED,mGACsB,grBAUV0K,EAAA1K,GAAM8F,WAAQ,wQAC2CL,EAAAyC,EAAA,QAAAyC,EAAA,0BAAA3K,GAAM2F,qBADlF1F,GAAuCC,EAAAiI,EAAA/H,mBACvCH,EAA+FC,EAAAgI,EAAA9H,WAD5EwF,EAAA,GAAA8E,OAAA1K,KAAM8F,SAAQ,KAAAzF,EAAAuK,EAAAF,GAC2C9E,EAAA,GAAA+E,OAAA,0BAAA3K,KAAM2F,gGAMxE,yZAGA,2ZAGA,mjDA9BL,uGACsB,2tBArB5B3F,EAAY,kEAkBZ,OAAAA,GAAU,SAAI,ouBAtBjBA,EAAe,IAAA6K,GAAA7K,6NAAfA,EAAe,ukBAqEP,geAKdC,IAEMC,EAAA4K,EAAA1K,qvBARH,IAAAoK,EAAAxK,GAAkB,aAAOuG,8kBA7ElCtG,GAwFKC,EAAAgI,EAAA9H,sBAdH6H,EAaKC,EAAAC,4WAVEnI,GAAkB,ocA/FtBA,EAAI,IAAA+K,GAAA/K,21BAbmCgH,EAAI,uFACIA,EAAI,uHACDA,EAAI,oHACJA,EAAI,2EAC/BA,EAAI,iEACHA,EAAI,2GACAA,EAAI,oJAEOA,EAAI,oIAGrBA,EAAI,oFAX/BiB,EAAuE+C,EAAAC,KAAAC,CACvEjD,IAAqG+C,EAAAC,KAAAE,GACrGlD,EAAqG+C,EAAAC,KAAAG,CACrGnD,IAAqG+C,EAAAC,KAAAI,GACrGpD,EAA+D+C,EAAAC,KAAAK,CAC/DrD,IAA+F+C,EAAAC,KAAAM,GAC/FtD,EAAyE+C,EAAAC,KAAAO,GACzEvD,EAAwD+C,EAAAC,KAAAQ,CACxDxD,IAAiG+C,EAAAC,KAAAS,GACjGzD,EAA4C+C,EAAAC,KAAAU,CAE5C1D,IAA6F+C,EAAAC,KAAAW,oEAExF5L,EAAI,2YAvGE0C,GAAgBgE,EAEnB,MAAA3G,UAAW2C,EAEb6G,EAASsC,GACZC,MAAIC,MACJD,IAAIE,MACJC,KAAI,CACHC,UAAW,SAEXC,SAAU,KAEVC,OAAQC,GACRC,OAAQC,GAERC,WAAU,CACR,YAAaC,GACb,YAAaC,GACb,YAAaC,GACb,YAAaC,UAIfC,EAEFA,EAAOC,GAGPnL,OAAOkL,KAAOA,MAGZE,EACJC,GAAOlO,eAEHiO,EAAOE,SAASC,0BAEH,gCAAiC9K,KAAA+K,KAAAC,EAAAC,EAAA,GAAA3Q,iBAE1C,kBAAmBiF,QAGrBA,OAAO2L,cAAcC,WAAU,CAC7BC,QAAO,CACLC,MAAK,CACHC,WAAY,MAEdC,SAAM,CACJD,WAAY,YAGhBE,MAAO,WACPC,SAAU,iBAIdC,GAAoBrM,UAAGsM,GAAA,IAAAC,OAAc,uCAAiCX,EAAA,eAAA3Q,MAElE6G,aAAaC,QAAQ,gBAAkBD,aAAaC,QAAQ,eAAeyK,kBAAwB,YACrGC,GAAYzM,IAAI,IAGlByM,GAAY9M,UAAWkE,KACjBA,IAAU,IAAQA,IAAU,KAC9B/B,aAAa0B,QAAQ,cAAeK,EAAM6I,WAAWF,yBAMzD,IAAApH,EAAgB,GAGpBuH,GAAiBrO,GAIb,IAAA0G,EAAO,GACPE,EAAqC,QACrCC,EAAkB,GAEpByH,GAASjN,UAAWkN,GAClB/J,GAAA,EAAAoC,EAAgB2H,EAAS,QAAUrM,QACnCsC,EAAA,EAAAqC,EAAkB0H,EAAM,OAIxBC,EAwC0D,MAAAC,EAAA,IAAAjK,EAAA,EAAAkC,GAAQA,SA2BGpC,GAAgB5C,IAAI,UAMLyD,GAAK8B,EAAO,gBAUpEuH,EAAKE,QAAQ,EAQC,EAAAC,EAAA,IAAAxJ,GAAK8B,EAAO,SAAWE,EAAMlJ,UAG7BkH,GAAK8B,EAAO,mBAGZ9H,GAAUuC,IAAI,8CAR7B8M,GAAII,qOAzGhC5B,IAASlG,EAAgBkG,EAAK6B,UAAUC,IAAI,eAAmB9B,IAAK6B,UAAUvM,OAAO,gCAIvFkC,EAAA,EAAE+C,EAAWJ,EAAgBA,EAAMK,MAAMC,aAAeN,EAAMK,MAAME,iBAAmBP,EAAMK,MAAMG,gBAA9E","names":["initializeGraphQLClient","fetch","createClient","url","API_GRAPHQL","exchanges","cacheExchange","schema","keys","GetMods","LatestVersions","UserMod","GetGuides","OAuthOptions","UserRoles","Compatibility","CompatibilityInfo","updates","Mutation","deleteGuide","_result","args","cache","invalidate","__typename","id","guideId","deleteMod","modId","approveMod","denyMod","approveVersion","versionId","denyVersion","deleteSMLVersion","smlVersionId","deleteVersion","updateVersion","authExchange","async","utils","token","get","userToken","addAuthToOperation","operation","appendHeaders","Authorization","didAuthError","error","message","indexOf","persistedExchange","preferGetForPersistedQueries","fetchExchange","load","client","ctx","insert_hydration","target","p","anchor","set_data","t1","t1_value","div","fetching","span","getContextClient","getMe","queryStore","query","GetMeDocument","variables","requestPolicy","pause","first","subscribe","oneMonth","Date","getTime","cookie","set","domain","window","location","hostname","expires","mutation","LogoutDocument","undefined","toPromise","catch","then","remove","resume","unsub","response","console","data","user","signInMethods","github","OAuthGithubDocument","google","OAuthGoogleDocument","facebook","OAuthFacebookDocument","errorMessage","errorToast","signingIn","signInMethod","localStorage","getItem","removeItem","queryParams","Object","fromEntries","$page","searchParams","entries","length","URLSearchParams","search","code","state","loginDialogOpen","result","$$invalidate","session","oauthOptions","GetOAuthOptionsDocument","callback_url","encodeURIComponent","origin","pathname","goTo","service","setItem","goto","$oauthOptions","getOAuthOptions","$loginDialogOpen","value","create_if_block_5","startsWith","attr","div_style_value","avatar","dirty","t_1_value","username","t_1","href","item_changes","icon","label","external","i","each_blocks","create_if_block","create_if_block_3","open","$$props","drawerVariant","hideTopElements","accessibility","t","getTranslate","base","click_handler_2","$user","preloadData","item","currentPath","isAdmin","roles","approveMods","approveVersions","editSMLVersions","top","$t","bottom","t_value","div2","div2_class_value","append_hydration","div1","div0","b","current","monospacePrefix","iconNames","AnnouncementImportance","Info","Alert","Warning","Fix","backgroundColors","importance","isMonospace","finalMessage","replaceAll","getAnnouncements","announcementrow_changes","announcements","GetAnnouncementsDocument","select_changes","tolgee","getTolgee","languages","en","de","fr","lv","lang","writable","$tolgee","getLanguage","l","changeLanguage","$lang","script0","script0_src_value","script1","if_block","pingLauncher","t0_value","div1_style_value","t0","create_if_block_1","main","create_if_block_6","document_1","head","link0","link1","link2","link3","link4","link5","link6","meta0","meta1","meta2","link7","Tolgee","use","DevTools","FormatSimple","init","defaultNs","language","apiUrl","PUBLIC_TOLGEE_API_URL","apiKey","PUBLIC_TOLGEE_API_KEY","staticData","enCommon","deCommon","frCommon","lvCommon","gTag","PUBLIC_GOOGLE_SITE_TAG","root","onMount","document","body","n","bK","__VITE_IS_MODERN__","cookieconsent","initialise","palette","popup","background","button","theme","position","customProtocolCheck","__vitePreload","import","toLocaleLowerCase","hasLauncher","toString","setContextClient","onMobile","mobile","menu","click_handler","setOpen","SMUI_action_handler","$$value","classList","add"],"sources":["../../../../../../src/lib/core/graphql.ts","../../../../../../src/routes/+layout.ts","../../../../../../src/lib/components/auth/LoginDialog.svelte","../../../../../../src/lib/components/general/Sidebar.svelte","../../../../../../src/lib/components/announcements/AnnouncementRow.svelte","../../../../../../src/lib/components/announcements/AnnouncementHeader.svelte","../../../../../../src/lib/components/general/TranslationDropdown.svelte","../../../../../../src/routes/+layout.svelte"],"sourcesContent":["import schema from '$lib/generated/graphql.schema.urql.json';\nimport { createClient, fetchExchange, type Client } from '@urql/svelte';\nimport { cacheExchange } from '@urql/exchange-graphcache';\nimport { persistedExchange } from '@urql/exchange-persisted';\nimport { API_GRAPHQL } from './api';\nimport { userToken } from '$lib/stores/user';\nimport { authExchange } from '@urql/exchange-auth';\nimport type { LoadEvent } from '@sveltejs/kit';\nimport { get } from 'svelte/store';\n\nexport const initializeGraphQLClient = (fetch?: LoadEvent['fetch']): Client =>\n  createClient({\n    url: API_GRAPHQL,\n    fetch,\n    exchanges: [\n      cacheExchange({\n        schema,\n        keys: {\n          GetMods: () => null,\n          LatestVersions: () => null,\n          UserMod: () => null,\n          GetGuides: () => null,\n          OAuthOptions: () => null,\n          UserRoles: () => null,\n          Compatibility: () => null,\n          CompatibilityInfo: () => null\n        },\n        updates: {\n          Mutation: {\n            deleteGuide(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Guide',\n                id: args.guideId as string\n              });\n            },\n            deleteMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            approveMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            denyMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            approveVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            denyVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            deleteSMLVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'SMLVersion',\n                id: args.smlVersionId as string\n              });\n            },\n            deleteVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            updateVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            }\n          }\n        }\n      }),\n      authExchange(async (utils) => {\n        const token = get(userToken);\n        return {\n          addAuthToOperation(operation) {\n            return utils.appendHeaders(operation, {\n              Authorization: token\n            });\n          },\n          didAuthError(error) {\n            return error.message.indexOf('user not logged in') >= 0;\n          },\n          async refreshAuth() {\n            // Token cannot be refreshed currently\n          }\n        };\n      }),\n      persistedExchange({\n        preferGetForPersistedQueries: true\n      }),\n      fetchExchange\n    ]\n  });\n","import type { LayoutLoad } from './$types';\nimport './_global.postcss';\nimport { initializeGraphQLClient } from '$lib/core';\n\nexport const load: LayoutLoad = async ({ fetch }) => {\n  const client = initializeGraphQLClient(fetch);\n  return {\n    client\n  };\n};\n","<script lang=\"ts\">\n  import { loginDialogOpen } from '$lib/stores/global';\n  import {\n    GetMeDocument,\n    GetOAuthOptionsDocument,\n    OAuthFacebookDocument,\n    OAuthGithubDocument,\n    OAuthGoogleDocument,\n    LogoutDocument\n  } from '$lib/generated';\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { browser } from '$app/environment';\n  import { page } from '$app/stores';\n  import { goto } from '$app/navigation';\n  import Toast from '../general/Toast.svelte';\n  import { user, userToken } from '$lib/stores/user';\n  import cookie from 'js-cookie';\n  import Dialog, { Title, Content } from '@smui/dialog';\n  import Button from '@smui/button';\n  import CircularProgress from '@smui/circular-progress';\n\n  const client = getContextClient();\n\n  if (browser) {\n    const getMe = queryStore({\n      query: GetMeDocument,\n      client,\n      variables: {},\n      requestPolicy: 'network-only',\n      pause: true\n    });\n\n    let first = true;\n    userToken.subscribe((token) => {\n      if (token) {\n        const oneMonth = new Date(new Date().getTime() + 30 * 24 * 60 * 60 * 1000);\n        cookie.set('token', token, {\n          domain: window.location.hostname,\n          expires: oneMonth\n        });\n      } else if (!first) {\n        client\n          .mutation(LogoutDocument, undefined, {\n            requestPolicy: 'network-only'\n          })\n          .toPromise()\n          .catch()\n          .then(() => {\n            cookie.remove('token');\n          });\n      }\n\n      first = false;\n\n      if (token) {\n        getMe.pause();\n        getMe.resume();\n\n        const unsub = getMe.subscribe((response) => {\n          if (!response.fetching) {\n            if (response.error) {\n              // TODO Toast or something\n              console.error(response.error.message);\n              unsub();\n            } else if (response.data) {\n              user.set(response.data.getMe);\n              unsub();\n            }\n          }\n        });\n      } else {\n        user.set(null);\n      }\n    });\n  }\n\n  const signInMethods = {\n    github: OAuthGithubDocument,\n    google: OAuthGoogleDocument,\n    facebook: OAuthFacebookDocument\n  };\n\n  let errorMessage = '';\n  let errorToast = false;\n  let signingIn = false;\n\n  if (browser) {\n    const signInMethod = localStorage.getItem('sign.in.method');\n    localStorage.removeItem('sign.in.method');\n\n    let queryParams = Object.fromEntries($page.url.searchParams.entries());\n    if (Object.keys(queryParams).length === 0) {\n      queryParams = Object.fromEntries(new URLSearchParams(window.location.search));\n    }\n\n    const code = queryParams.code;\n    const state = queryParams.state;\n\n    if (signInMethod && code && state) {\n      signingIn = true;\n      loginDialogOpen.set(true);\n\n      client\n        .mutation(signInMethods[signInMethod as 'github' | 'google' | 'facebook'], {\n          code,\n          state\n        })\n        .toPromise()\n        .then((result) => {\n          if (result.error) {\n            console.error(result.error.message);\n            errorMessage = 'Error logging in: ' + result.error.message;\n            errorToast = true;\n          } else {\n            userToken.set(result.data.session.token);\n            loginDialogOpen.set(false);\n          }\n        })\n        .catch()\n        .then(() => (signingIn = false));\n    }\n  }\n\n  const oauthOptions = queryStore({\n    query: GetOAuthOptionsDocument,\n    client,\n    variables: { callback_url: browser ? encodeURIComponent(window.location.origin + window.location.pathname) : '' },\n    requestPolicy: 'network-only'\n  });\n\n  $: if ($loginDialogOpen) {\n    oauthOptions.pause();\n    oauthOptions.resume();\n  }\n\n  const goTo = (service: string, url: string) => {\n    localStorage.setItem('sign.in.method', service);\n    goto(url);\n  };\n</script>\n\n<Dialog bind:open={$loginDialogOpen}>\n  <Title>Login / Sign Up</Title>\n  <Content>\n    <div class=\"grid grid-flow-row gap-4\">\n      {#if signingIn}\n        <p>Logging in...</p>\n        <div class=\"flex justify-center\">\n          <CircularProgress class=\"h-10 w-10\" indeterminate />\n        </div>\n      {:else if $oauthOptions.fetching}\n        <!-- TODO Placeholders -->\n        <p>Loading...</p>\n      {:else if $oauthOptions.error}\n        <p>Oh no... {$oauthOptions.error.message}</p>\n      {:else}\n        <Button variant=\"outlined\" on:click={() => goTo('github', $oauthOptions.data.getOAuthOptions.github)}>\n          Sign in with Github\n        </Button>\n        <Button variant=\"outlined\" on:click={() => goTo('google', $oauthOptions.data.getOAuthOptions.google)}>\n          Sign in with Google\n        </Button>\n        <Button variant=\"outlined\" on:click={() => goTo('facebook', $oauthOptions.data.getOAuthOptions.facebook)}>\n          Sign in with Facebook\n        </Button>\n      {/if}\n    </div>\n  </Content>\n</Dialog>\n\n<Toast bind:running={errorToast}>\n  <span>{errorMessage}</span>\n</Toast>\n","<script lang=\"ts\">\n  import Switch from '@smui/switch';\n  import FormField from '@smui/form-field';\n  import Drawer, { Content } from '@smui/drawer';\n  import List, { Item, Text, Graphic, Separator } from '@smui/list';\n  import { goto, preloadData } from '$app/navigation';\n  import { base } from '$app/paths';\n  import { page } from '$app/stores';\n  import { user, userToken } from '$lib/stores/user';\n  import { loginDialogOpen } from '$lib/stores/global';\n  import { getTranslate } from '@tolgee/svelte';\n\n  export let open: boolean;\n  export let drawerVariant: 'modal' | 'dismissible';\n  export let hideTopElements: boolean;\n  export let accessibility: boolean;\n\n  export const { t } = getTranslate();\n\n  $: currentPath = $page.url.pathname;\n  $: isAdmin = !$user ? false : $user.roles.approveMods || $user.roles.approveVersions || $user.roles.editSMLVersions;\n\n  $: top = [\n    {\n      url: base + '/',\n      icon: 'home',\n      label: $t('sidebar.home')\n    },\n    {\n      url: base + '/mods',\n      icon: 'extension',\n      label: $t('sidebar.mods')\n    },\n    {\n      url: base + '/guides',\n      icon: 'description',\n      label: $t('sidebar.guides')\n    },\n    {\n      url: base + '/sml-versions',\n      icon: 'lightbulb',\n      label: $t('sidebar.sml-versions')\n    },\n    {\n      url: base + '/tools',\n      icon: 'apps',\n      label: $t('sidebar.tools')\n    },\n    {\n      url: 'https://discord.gg/xkVJ73E',\n      icon: 'people',\n      label: $t('sidebar.discord'),\n      external: true\n    },\n    {\n      url: 'https://docs.ficsit.app/',\n      icon: 'find_in_page',\n      label: $t('sidebar.docs'),\n      external: true\n    },\n    {\n      url: 'https://forums.ficsit.app/',\n      icon: 'forum',\n      label: $t('sidebar.forums'),\n      external: true\n    }\n  ];\n\n  $: bottom = [\n    {\n      url: base + '/help',\n      icon: 'help',\n      label: $t('sidebar.help')\n    },\n    {\n      url: base + '/content-policy',\n      icon: 'verified_user',\n      label: 'Content Policy'\n    },\n    {\n      url: base + '/privacy-policy',\n      icon: 'policy',\n      label: $t('sidebar.privacy-policy')\n    },\n    {\n      url: base + '/tos',\n      icon: 'gavel',\n      label: $t('sidebar.tos')\n    },\n    {\n      url: base + '/api-docs',\n      icon: 'api',\n      label: $t('sidebar.api')\n    },\n    {\n      url: 'https://github.com/satisfactorymodding',\n      icon: 'source',\n      label: $t('sidebar.github'),\n      external: true\n    }\n  ];\n</script>\n\n<Drawer variant={drawerVariant} fixed={false} bind:open>\n  <Content>\n    <div class=\"drawer-content\">\n      {#if hideTopElements}\n        <List>\n          {#if $user === null}\n            <Item on:click={() => loginDialogOpen.set(true)}>\n              <Graphic class=\"material-icons\">login</Graphic>\n              <Text>Sign In</Text>\n            </Item>\n          {:else}\n            {#if isAdmin}\n              <Item on:click={() => goto(base + '/admin')} activated={currentPath.startsWith('/admin')}>\n                <Graphic class=\"material-icons\">admin_panel_settings</Graphic>\n                <Text>Admin</Text>\n              </Item>\n            {/if}\n\n            <Item on:click={() => goto(base + '/user/' + $user.id)} activated={currentPath.startsWith('/user')}>\n              <Graphic>\n                <div class=\"rounded-full bg-cover w-7 h-7\" style={`background-image: url(\"${$user.avatar}\")`} />\n              </Graphic>\n              <Text>{$user.username}</Text>\n            </Item>\n\n            <Item on:click={() => userToken.set(null)}>\n              <Graphic class=\"material-icons\">logout</Graphic>\n              <Text>Logout</Text>\n            </Item>\n          {/if}\n        </List>\n\n        <Separator />\n      {/if}\n\n      <List>\n        {#each top as item}\n          {#if !item.external}\n            <Item href={item.url} activated={currentPath === item.url} on:mouseover={() => preloadData(item.url)}>\n              <Graphic class=\"material-icons\">{item.icon}</Graphic>\n              <Text>{item.label}</Text>\n            </Item>\n          {:else}\n            <Item href={item.url} target=\"_blank\" rel=\"noopener\">\n              <Graphic class=\"material-icons\">{item.icon}</Graphic>\n              <Text>{item.label}</Text>\n            </Item>\n          {/if}\n        {/each}\n      </List>\n\n      <List>\n        {#each bottom as item}\n          {#if !item.external}\n            <Item href={item.url} activated={currentPath === item.url} on:mouseover={() => preloadData(item.url)}>\n              <Graphic class=\"material-icons\">{item.icon}</Graphic>\n              <Text>{item.label}</Text>\n            </Item>\n          {:else}\n            <Item href={item.url} target=\"_blank\" rel=\"noopener\">\n              <Graphic class=\"material-icons\">{item.icon}</Graphic>\n              <Text>{item.label}</Text>\n            </Item>\n          {/if}\n        {/each}\n\n        {#if hideTopElements}\n          <Item target=\"_blank\" href=\"https://smm.ficsit.app\" rel=\"noopener\">\n            <Graphic class=\"material-icons\">file_download</Graphic>\n            <Text>Mod Manager</Text>\n          </Item>\n        {/if}\n\n        <Item>\n          <FormField align=\"end\">\n            <Switch bind:checked={accessibility} aria-label=\"Accessibility Font\" />\n            <span slot=\"label\">Accessibility Font</span>\n          </FormField>\n        </Item>\n      </List>\n    </div>\n  </Content>\n</Drawer>\n\n<style lang=\"postcss\">\n  .drawer-content {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 100%;\n  }\n</style>\n","<script lang=\"ts\">\n  import { AnnouncementImportance } from '$lib/generated';\n  import { Icon } from '@smui/icon-button';\n\n  const iconNames: { [key in AnnouncementImportance]: string } = {\n    [AnnouncementImportance.Info]: 'info',\n    [AnnouncementImportance.Alert]: 'error',\n    [AnnouncementImportance.Warning]: 'warning',\n    [AnnouncementImportance.Fix]: 'build_circle'\n  };\n  const backgroundColors: { [key in AnnouncementImportance]: string } = {\n    [AnnouncementImportance.Info]: 'bg-sky-500',\n    [AnnouncementImportance.Alert]: 'bg-red-600',\n    [AnnouncementImportance.Warning]: 'bg-yellow-400',\n    [AnnouncementImportance.Fix]: 'bg-green-600'\n  };\n  const monospacePrefix = 'monotext:';\n\n  export let message: string;\n  export let importance: AnnouncementImportance;\n\n  // Enables making monospace announcements\n  $: isMonospace = message.startsWith(monospacePrefix);\n  $: finalMessage = isMonospace ? message.replaceAll(monospacePrefix, '') : message;\n</script>\n\n<div class=\"{backgroundColors[importance]} max-h-64 overflow-hidden\">\n  <div class=\"p-1 striped text-black\">\n    <Icon class=\"material-icons text-2xl align-middle\">{iconNames[importance]}</Icon>\n    <div\n      class=\"align-middle text-l inline-block break-words max-w-full\"\n      class:font-mono={isMonospace}\n      class:whitespace-pre={isMonospace}>\n      <b>{importance}: </b>{finalMessage}\n    </div>\n  </div>\n</div>\n\n<style>\n  .striped {\n    background: repeating-linear-gradient(\n      45deg,\n      transparent,\n      transparent 14px,\n      rgba(60, 60, 60, 0.1) 14px,\n      rgba(60, 60, 60, 0.1) 28px\n    );\n  }\n</style>\n","<script lang=\"ts\">\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { AnnouncementImportance, GetAnnouncementsDocument } from '$lib/generated';\n  import AnnouncementRow from './AnnouncementRow.svelte';\n\n  const client = getContextClient();\n\n  const announcements = queryStore({\n    query: GetAnnouncementsDocument,\n    client,\n    variables: {}\n  });\n</script>\n\n{#if $announcements.fetching}\n  <!-- Display nothing, don't disrupt the page for no reason -->\n{:else if $announcements.error}\n  <AnnouncementRow\n    message=\"Failed to load announcements: {$announcements.error.message}\"\n    importance={AnnouncementImportance.Warning} />\n{:else if $announcements && $announcements.data && $announcements.data.getAnnouncements}\n  <div class=\"max-h-96 overflow-y-auto\">\n    {#each $announcements?.data?.getAnnouncements as announcement}\n      <AnnouncementRow message={announcement.message} importance={announcement.importance} />\n    {/each}\n  </div>\n{/if}\n\n<style></style>\n","<script lang=\"ts\">\n  import { getTolgee, getTranslate } from '@tolgee/svelte';\n  import Select, { Option } from '@smui/select';\n  import { writable } from 'svelte/store';\n\n  const tolgee = getTolgee(['language']);\n\n  export const { t } = getTranslate();\n\n  const languages = {\n    en: 'English',\n    de: 'Deutsch',\n    fr: 'Français',\n    lv: 'Latviešu'\n  };\n\n  const lang = writable<string>(localStorage.getItem('language') || $tolgee.getLanguage());\n  lang.subscribe((l) => {\n    $tolgee.changeLanguage(l);\n    localStorage.setItem('language', l);\n  });\n</script>\n\n<div class=\"darker-please mr-3 max-h-1/2\">\n  <Select bind:value={$lang} label={$t('appbar.language-dropdown')} variant=\"outlined\">\n    {#each Object.entries(languages) as lang}\n      <Option value={lang[0]}>{lang[1]}</Option>\n    {/each}\n  </Select>\n</div>\n","<script lang=\"ts\">\n  import LoginDialog from '$lib/components/auth/LoginDialog.svelte';\n  import { setContextClient } from '@urql/svelte';\n  import TopAppBar, { Row, Section, Title } from '@smui/top-app-bar';\n  import { AppContent, Scrim } from '@smui/drawer';\n  import List, { Item, Text } from '@smui/list';\n  import IconButton from '@smui/icon-button';\n  import Button, { Label, Icon } from '@smui/button';\n  import { user, userToken } from '$lib/stores/user';\n  import { goto } from '$app/navigation';\n  import { loginDialogOpen, onMobile } from '$lib/stores/global';\n  import Menu from '@smui/menu';\n  import { onMount } from 'svelte';\n  import { customProtocolCheck, hasLauncher, pingLauncher } from '$lib/stores/launcher';\n  import Sidebar from '$lib/components/general/Sidebar.svelte';\n  import AnnouncementHeader from '$lib/components/announcements/AnnouncementHeader.svelte';\n  import { base } from '$app/paths';\n  import { browser } from '$app/environment';\n  import { PUBLIC_GOOGLE_SITE_TAG, PUBLIC_TOLGEE_API_URL, PUBLIC_TOLGEE_API_KEY } from '$env/static/public';\n  import type { LayoutData } from './$types';\n  import { TolgeeProvider, Tolgee, DevTools, FormatSimple } from '@tolgee/svelte';\n  import TranslationDropdown from '$lib/components/general/TranslationDropdown.svelte';\n\n  import enCommon from '../i18n/common/en.json';\n  import deCommon from '../i18n/common/de.json';\n  import frCommon from '../i18n/common/fr.json';\n  import lvCommon from '../i18n/common/lv.json';\n\n  export let data: LayoutData;\n\n  const { client } = data;\n\n  const tolgee = Tolgee()\n    .use(DevTools())\n    .use(FormatSimple())\n    .init({\n      defaultNs: 'common',\n\n      language: 'en',\n\n      apiUrl: PUBLIC_TOLGEE_API_URL,\n      apiKey: PUBLIC_TOLGEE_API_KEY,\n\n      staticData: {\n        'en:common': enCommon,\n        'de:common': deCommon,\n        'fr:common': frCommon,\n        'lv:common': lvCommon\n      }\n    });\n\n  let gTag: unknown;\n  if (browser) {\n    gTag = PUBLIC_GOOGLE_SITE_TAG as string;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    window.gTag = gTag;\n  }\n\n  let root: HTMLElement;\n  onMount(async () => {\n    if (browser) {\n      root = document.body;\n\n      await import('cookieconsent/src/cookieconsent');\n\n      if ('cookieconsent' in window) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        window.cookieconsent.initialise({\n          palette: {\n            popup: {\n              background: '#000'\n            },\n            button: {\n              background: '#f1d600'\n            }\n          },\n          theme: 'edgeless',\n          position: 'bottom-right'\n        });\n      }\n\n      customProtocolCheck.set(await import('$lib/thirdparty/custom_protocol'));\n\n      if (localStorage.getItem('hasLauncher') && localStorage.getItem('hasLauncher').toLocaleLowerCase() === 'true') {\n        hasLauncher.set(true);\n      }\n\n      hasLauncher.subscribe((value) => {\n        if (value === true || value === false) {\n          localStorage.setItem('hasLauncher', value.toString().toLocaleLowerCase());\n        }\n      });\n    }\n  });\n\n  let accessibility = false;\n  $: root && (accessibility ? root.classList.add('accessibility') : root.classList.remove('accessibility'));\n\n  setContextClient(client);\n\n  $: isAdmin = !$user ? false : $user.roles.approveMods || $user.roles.approveVersions || $user.roles.editSMLVersions;\n\n  let open = false;\n  let drawerVariant: 'modal' | undefined = 'modal';\n  let hideTopElements = true;\n  if (browser) {\n    onMobile.subscribe((mobile) => {\n      drawerVariant = mobile ? 'modal' : undefined;\n      hideTopElements = mobile;\n    });\n  }\n\n  let menu: Menu;\n</script>\n\n<svelte:head>\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"{base}/assets/favicon.ico\" />\n  <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"{base}/assets/apple-touch-icon.png?v=69P26YMB35\" />\n  <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"{base}/assets/favicon-32x32.png?v=69P26YMB35\" />\n  <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"{base}/assets/favicon-16x16.png?v=69P26YMB35\" />\n  <link rel=\"manifest\" href=\"{base}/manifest.json?v=69P26YMB35\" />\n  <link rel=\"mask-icon\" href=\"{base}/assets/safari-pinned-tab.svg?v=69P26YMB35\" color=\"#da8517\" />\n  <link rel=\"shortcut icon\" href=\"{base}/assets/favicon.ico?v=69P26YMB35\" />\n  <meta name=\"msapplication-TileColor\" content=\"#da8517\" />\n  <meta name=\"msapplication-config\" content=\"{base}/static/assets/browserconfig.xml?v=69P26YMB35\" />\n  <meta name=\"theme-color\" content=\"#ff6f00\" />\n\n  <link rel=\"preload\" href=\"{base}/assets/fonts/flow-rounded.woff\" as=\"font\" type=\"font/woff\" />\n\n  {#if gTag}\n    <!-- Global site tag (gtag.js) - Google Analytics -->\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id={gTag}\"></script>\n    <script>\n      window.dataLayer = window.dataLayer || [];\n\n      function gtag() {\n        dataLayer.push(arguments);\n      }\n\n      gtag('js', new Date());\n\n      gtag('config', window['gTag']);\n    </script>\n  {/if}\n</svelte:head>\n\n<TolgeeProvider {tolgee}>\n  <div class=\"app-container\">\n    <TopAppBar variant=\"static\">\n      <Row>\n        <Section>\n          {#if drawerVariant === 'modal'}\n            <IconButton class=\"material-icons\" on:click={() => (open = !open)}>menu</IconButton>\n          {/if}\n          <Title>FICSIT Augmentation Database</Title>\n        </Section>\n        {#if !hideTopElements}\n          <Section align=\"end\" toolbar>\n            <TranslationDropdown />\n\n            {#if $hasLauncher}\n              <Button color=\"secondary\" variant=\"outlined\" class=\"mr-3\" on:click={pingLauncher}>\n                <Label>Launcher Detected</Label>\n                <Icon class=\"material-icons\">file_download</Icon>\n              </Button>\n            {:else}\n              <Button\n                color=\"secondary\"\n                variant=\"outlined\"\n                class=\"mr-3\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                href=\"https://smm.ficsit.app\">\n                <Label>Mod Manager</Label>\n                <Icon class=\"material-icons\">file_download</Icon>\n              </Button>\n            {/if}\n\n            {#if $user === null}\n              <Button color=\"secondary\" variant=\"outlined\" on:click={() => loginDialogOpen.set(true)}>\n                <Label>Sign In</Label>\n                <Icon class=\"material-icons\">login</Icon>\n              </Button>\n            {:else}\n              {#if isAdmin}\n                <Button color=\"secondary\" variant=\"outlined\" class=\"mr-3\" on:click={() => goto(base + '/admin')}>\n                  <Label>Admin</Label>\n                  <Icon class=\"material-icons\">admin_panel_settings</Icon>\n                </Button>\n              {/if}\n\n              <div>\n                <Button\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  on:click={() => menu.setOpen(true)}\n                  class=\"grid grid-flow-col\">\n                  <div class=\"mr-3\">{$user.username}</div>\n                  <div class=\"rounded-full bg-cover w-7 h-7\" style={`background-image: url(\"${$user.avatar}\")`} />\n                </Button>\n\n                <Menu bind:this={menu}>\n                  <List>\n                    <Item on:SMUI:action={() => goto(base + '/user/' + $user.id)}>\n                      <Text>Profile</Text>\n                    </Item>\n                    <Item on:SMUI:action={() => goto(base + '/settings')}>\n                      <Text>Settings</Text>\n                    </Item>\n                    <Item on:SMUI:action={() => userToken.set(null)}>\n                      <Text>Logout</Text>\n                    </Item>\n                  </List>\n                </Menu>\n              </div>\n            {/if}\n          </Section>\n        {/if}\n      </Row>\n    </TopAppBar>\n\n    <div class=\"drawer-container\">\n      <Sidebar bind:open bind:accessibility bind:drawerVariant bind:hideTopElements />\n\n      {#if drawerVariant === 'modal'}\n        <Scrim fixed={false} />\n      {/if}\n\n      <AppContent class=\"app-content w-full overflow-auto\">\n        <AnnouncementHeader />\n        <main class=\"main-content min-h-100% py-6 px-3\">\n          <slot />\n        </main>\n      </AppContent>\n    </div>\n  </div>\n\n  <LoginDialog />\n</TolgeeProvider>\n\n<style lang=\"postcss\">\n  .app-container {\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    height: 100vh;\n    max-height: 100vh;\n    width: 100vw;\n    max-width: 100vw;\n  }\n\n  .drawer-container {\n    display: flex;\n    height: 100%;\n    overflow: hidden;\n    position: relative;\n  }\n</style>\n"],"file":"_app/immutable/nodes/0.830b2e30.js"}