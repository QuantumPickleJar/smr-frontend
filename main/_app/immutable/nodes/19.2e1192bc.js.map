{"version":3,"file":"19.2e1192bc.js","sources":["../../../../../../src/routes/mod/[modId]/version/[versionId]/+page.ts","../../../../../../src/lib/components/versions/VersionDescription.svelte","../../../../../../src/lib/components/versions/VersionInfo.svelte","../../../../../../src/routes/mod/[modId]/version/[versionId]/+page.svelte"],"sourcesContent":["import type { PageLoad } from './$types';\nimport { queryStore } from '@urql/svelte';\nimport { GetModVersionDocument } from '$lib/generated';\nimport { loadWaitForNoFetch } from '$lib/utils/gql';\n\nexport const load: PageLoad = async ({ params, parent }) => ({\n  ...params,\n  ...(await loadWaitForNoFetch({\n    version: queryStore({\n      query: GetModVersionDocument,\n      client: (await parent()).client,\n      variables: { version: params.versionId }\n    })\n  }))\n});\n","<script lang=\"ts\">\n  import { markdown } from '$lib/utils/markdown';\n  import Card, { Content } from '@smui/card';\n\n  export let changelog!: string;\n</script>\n\n<Card class=\"h-fit\">\n  <Content>\n    <div class=\"markdown-content\">\n      {#await markdown(changelog) then changelogRendered}\n        <p>{@html changelogRendered}</p>\n      {/await}\n    </div>\n  </Content>\n</Card>\n","<script lang=\"ts\">\n  import type { Version } from '$lib/generated';\n  import Card, { Content } from '@smui/card';\n  import { prettyBytes, prettyDate, prettyNumber } from '$lib/utils/formatting';\n\n  export let version!: Pick<Version, 'created_at' | 'sml_version' | 'size' | 'stability' | 'downloads' | 'hash'>;\n</script>\n\n<Card>\n  <Content>\n    <div class=\"text-lg break-words\">\n      <h3 class=\"text-2xl my-4 font-bold\">Info</h3>\n      <span><strong>Created:</strong> {prettyDate(version.created_at)}</span><br />\n      <span><strong>Downloads:</strong> {prettyNumber(version.downloads)}</span><br />\n      <span><strong>SML Version:</strong> {version.sml_version}</span><br />\n      <span><strong>Stability:</strong> {version.stability}</span><br />\n      <span><strong>Size:</strong> {prettyBytes(version.size)}</span><br />\n      <span><strong>Hash:</strong> {version.hash}</span>\n    </div>\n  </Content>\n</Card>\n","<script lang=\"ts\">\n  import { DeleteVersionDocument } from '$lib/generated';\n  import VersionDescription from '$lib/components/versions/VersionDescription.svelte';\n  import VersionInfo from '$lib/components/versions/VersionInfo.svelte';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import { API_REST } from '$lib/core';\n  import Toast from '$lib/components/general/Toast.svelte';\n  import { writable } from 'svelte/store';\n  import { goto } from '$app/navigation';\n  import { user } from '$lib/stores/user';\n  import { base } from '$app/paths';\n  import Button, { Label, Icon } from '@smui/button';\n  import Dialog, { Title, Content as DialogContent } from '@smui/dialog';\n  import { installMod } from '$lib/stores/launcher';\n  import { getContextClient } from '@urql/svelte';\n  import type { PageData } from './$types';\n\n  export let data: PageData;\n\n  const { modId, versionId, version } = data;\n\n  const client = getContextClient();\n\n  let errorMessage = '';\n  let errorToast = false;\n\n  $: canUserEdit =\n    $user?.roles?.deleteContent ||\n    $version?.data?.getVersion.mod?.authors?.findIndex((author) => author.user_id == $user?.id) >= 0;\n\n  const deleteDialogOpen = writable<boolean>(false);\n\n  const deleteVersionFn = () => {\n    client\n      .mutation(DeleteVersionDocument, { versionId })\n      .toPromise()\n      .then((value) => {\n        if (value.error) {\n          console.error(value.error.message);\n          errorMessage = 'Error deleting version: ' + value.error.message;\n          errorToast = true;\n        } else {\n          // TODO Toast or something\n          goto(base + '/mod/' + modId);\n        }\n      });\n  };\n</script>\n\n<svelte:head>\n  {#if !$version.fetching && !$version.error && $version.data.getVersion}\n    <MetaDescriptors\n      description=\"Information for mod version {$version.data.getVersion.mod.name} {$version.data.getVersion.version}\"\n      title=\"Mod version {$version.data.getVersion.mod.name} {$version.data.getVersion.version}\" />\n  {/if}\n</svelte:head>\n\n{#if $version.fetching}\n  <p>Loading...</p>\n{:else if $version.error}\n  <p>Oh no... {$version.error.message}</p>\n{:else if $version.data.getVersion}\n  <div class=\"grid gap-6 xlx:grid-flow-row\">\n    <div class=\"flex flex-wrap h-auto justify-between items-center\">\n      <h1 class=\"text-4xl font-bold\">\n        {$version.data.getVersion.mod.name}\n        Version {$version.data.getVersion.version}\n      </h1>\n\n      <div class=\"grid grid-flow-col gap-4\">\n        {#if canUserEdit}\n          <Button variant=\"outlined\" on:click={() => goto(base + '/mod/' + modId + '/version/' + versionId + '/edit')}>\n            Edit\n          </Button>\n          <Button variant=\"outlined\" on:click={() => deleteDialogOpen.set(true)}>Delete</Button>\n        {/if}\n\n        <Button variant=\"outlined\" href={API_REST + '/mod/' + modId + '/versions/' + versionId + '/download'}>\n          Download\n        </Button>\n        <Button variant=\"outlined\" on:click={() => installMod($version.data.getVersion.mod.mod_reference)}>\n          <Label>Install</Label>\n          <Icon class=\"material-icons\">download</Icon>\n        </Button>\n\n        <Button variant=\"outlined\" href={base + '/mod/' + modId}>\n          <Label>Mod</Label>\n          <Icon class=\"material-icons\">extension</Icon>\n        </Button>\n      </div>\n    </div>\n    <div class=\"grid grid-auto-max auto-cols-fr gap-4\">\n      <VersionDescription changelog={$version.data.getVersion.changelog} />\n      <div class=\"grid grid-cols-1 auto-rows-min gap-8\">\n        <VersionInfo version={$version.data.getVersion} />\n      </div>\n    </div>\n  </div>\n\n  {#if canUserEdit}\n    <Dialog bind:open={$deleteDialogOpen}>\n      <Title id=\"simple-title\">Delete Version?</Title>\n      <DialogContent>\n        <div class=\"grid grid-flow-row gap-4\">\n          <span>Are you sure you wish to delete this version</span>\n\n          <Button variant=\"outlined\" on:click={() => deleteDialogOpen.set(false)}>Cancel</Button>\n          <Button variant=\"outlined\" on:click={() => deleteVersionFn()}>Delete</Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  {/if}\n\n  <Toast bind:running={errorToast}>\n    <span>{errorMessage}</span>\n  </Toast>\n{:else}\n  <!-- TODO Better 404 -->\n  404\n{/if}\n"],"names":["load","async","params","parent","r","loadWaitForNoFetch","version","queryStore","query","GetModVersionDocument","client","variables","versionId","ctx","insert_hydration","target","p","anchor","innerHTML","raw_value","handle_promise","promise","markdown","info","div","dirty","changelog","$$props","prettyDate","created_at","prettyNumber","downloads","t12_value","sml_version","t16_value","stability","prettyBytes","size","t24_value","hash","append_hydration","h3","span0","strong0","br0","span1","strong1","br1","span2","strong2","br2","span3","strong3","br3","span4","strong4","br4","span5","strong5","set_data","t4","t4_value","t8","t8_value","t12","t16","t20","t20_value","t24","description","data","getVersion","mod","name","title","metadescriptors_changes","t0_value","t2_value","create_if_block_4","API_REST","base","create_if_block_3","div4","div1","h1","div0","div3","div2","current","t0","t2","versiondescription_changes","error","message","t1","t1_value","span","fetching","create_if_block_5","modId","getContextClient","errorMessage","errorToast","deleteDialogOpen","writable","deleteVersionFn","mutation","DeleteVersionDocument","toPromise","then","value","console","$$invalidate","goto","set","installMod","$version","mod_reference","$deleteDialogOpen","canUserEdit","$user","roles","deleteContent","authors","findIndex","author","user_id","id"],"mappings":"k3BAKO,MAAMA,GAAiBC,MAASC,CAAAA,OAAAA,EAAQC,OAAcC,CAAA,KAAA,CAAA,GACxDF,WACOG,GAAmB,CAC3BC,QAASC,GAAW,CAClBC,MAAOC,GACPC,QAAAA,MAAeP,KAAUO,OACzBC,UAAW,CAAEL,QAASJ,EAAOU,yLCAjBC,EAAiB,CAAA,EAAA,2EAA3BC,EAA+BC,EAAAC,EAAAC,CAAAA,oCAArBJ,EAAiB,CAAA,EAAA,MAAAG,EAAAE,UAAAC,qKADrBC,EAAAA,OAAAA,GAAAC,EAAAC,GAAST,EAAS,CAAAU,CAAAA,EAAAA,CAAAA,iKAD5BT,EAIKC,EAAAS,EAAAP,CAAAA,6EAHKQ,EAAA,GAAAJ,KAAAA,EAAAC,GAAST,EAAS,CAAAO,CAAAA,IAAAA,GAAAC,EAAAE,CAAAA,ssBANnBG,CAAAA,EAAkBC,iLCQQC,GAAWf,EAAO,CAACgB,EAAAA,UAAAA,EAAU,mBAC3BC,GAAajB,EAAO,CAAA,EAACkB,SAAS,EAAA,kBAC5BC,EAAAnB,GAAQoB,EAAAA,YAAW,oBACrBC,EAAArB,KAAQsB,UAAS,sBACtBC,GAAYvB,EAAO,CAACwB,EAAAA,IAAAA,EAAI,wBACxBC,GAAAzB,KAAQ0B,KAAI,0CANN,4CACtB,uEACA,0EACA,8EACA,0EACA,OAAA,qEACA,OAAA,8GANsB,iGACtB,oJACA,YAAA,2IACA,4JACA,uJACA,2JACA,OAAA,kKAPhBzB,EAQKC,EAAAS,EAAAP,CAAAA,EAPHuB,EAA4ChB,EAAAiB,CAAAA,cAC5CD,EAAAA,EAAuEhB,EAAAkB,CAAAA,EAAjEF,EAAyBE,EAAAC,wBAAwCH,EAAKhB,EAAAoB,CAAAA,SAC5EJ,EAA0EhB,EAAAqB,CAApEL,EAAAA,EAA2BK,EAAAC,wBAAyCN,EAAKhB,EAAAuB,WAC/EP,EAAgEhB,EAAAwB,GAA1DR,EAA6BQ,EAAAC,yBAA6BT,EAAKhB,EAAA0B,QACrEV,EAAAA,EAA4DhB,EAAA2B,CAAtDX,EAAAA,EAA2BW,EAAAC,EAAAA,uBAA2BZ,EAAAA,EAAKhB,EAAA6B,CAAAA,SACjEb,EAA+DhB,EAAA8B,CAAzDd,EAAAA,EAAsBc,EAAAC,yBAAmCf,EAAAA,EAAKhB,EAAAgC,EAAAA,UACpEhB,EAAiDhB,EAAAiC,IAA3CjB,EAAsBiB,GAAAC,mDALK9B,GAAWf,EAAO,GAACgB,UAAU,EAAA,KAAA8B,GAAAC,EAAAC,eAC3B/B,GAAajB,EAAO,CAACkB,EAAAA,SAAAA,EAAS,KAAA4B,GAAAG,EAAAC,CAC5B,EAAAtC,EAAA,GAAAO,KAAAA,EAAAnB,GAAQoB,EAAAA,YAAW,KAAA0B,GAAAK,GAAAhC,CACrB,EAAAP,EAAA,GAAAS,KAAAA,EAAArB,GAAQsB,EAAAA,UAAS,KAAAwB,GAAAM,EAAA/B,iBACtBE,GAAYvB,EAAO,CAACwB,EAAAA,IAAAA,EAAI,KAAAsB,GAAAO,GAAAC,EACxB,EAAA1C,EAAA,GAAAa,MAAAA,GAAAzB,GAAQ0B,EAAAA,KAAI,KAAAoB,GAAAS,GAAA9B,EAAAA,2oBAZnChC,CAAAA,EAAmGqB,qLC+ChE0C,YAAA,+BAAAxD,EAAS,CAAAyD,EAAAA,KAAKC,WAAWC,IAAIC,KAAI,IAAG5D,EAAS,CAAAyD,EAAAA,KAAKC,WAAWjE,QACnFoE,MAAA,eAAA7D,EAAS,CAAAyD,EAAAA,KAAKC,WAAWC,IAAIC,KAAI,IAAG5D,EAAS,GAAAyD,KAAKC,WAAWjE,mGADvCmB,EAAA,IAAAkD,EAAAN,YAAA,+BAAAxD,EAAS,GAAAyD,KAAKC,WAAWC,IAAIC,KAAI,IAAG5D,EAAS,CAAA,EAAAyD,KAAKC,WAAWjE,SACnFmB,EAAA,IAAAkD,EAAAD,MAAA,eAAA7D,EAAS,CAAAyD,EAAAA,KAAKC,WAAWC,IAAIC,KAAI,IAAG5D,EAAS,CAAAyD,EAAAA,KAAKC,WAAWjE,uIAgE9D,mBAAA,KAAA,wEApDhBsE,EAAA/D,KAASyD,KAAKC,WAAWC,IAAIC,KAAI,OACzBI,EAAAhE,EAAS,CAAA,EAAAyD,KAAKC,WAAWjE,QAAO,+CAIpCO,EAAW,CAAA,GAAAiE,GAAAjE,CAAAA,2CAOiBkE,GAAW,QAAUlE,KAAQ,aAAeA,EAAS,CAAG,EAAA,kMAQxDmE,GAAO,QAAUnE,EAAK,8DAO1Ba,UAAAb,EAAS,CAAAyD,EAAAA,KAAKC,WAAW7C,sCAEhCb,EAAQ,GAACyD,KAAKC,UAAAA,CAAAA,CAAAA,QAKrC1D,EAAW,CAAAoE,GAAAA,GAAApE,kFAcKA,EAAU,yBAAVA,EAAU,yGAhDS;AAAA,iBAAA,yVAAA;AAAA,iBAAA,8rBAHxCC,EAmCKC,EAAAmE,EAAAjE,CAlCHuB,EAAAA,EA2BK0C,EAAAC,CAAAA,EA1BH3C,EAGI2C,EAAAC,CAAAA,8BAEJ5C,EAoBK2C,EAAAE,kFAEP7C,EAKK0C,EAAAI,CAAAA,sBAHH9C,EAEK8C,EAAAC,CAAAA,iEA9BF,EAAA,CAAAC,GAAA/D,EAAA,IAAAmD,KAAAA,EAAA/D,KAASyD,KAAKC,WAAWC,IAAIC,KAAI,KAAAd,GAAA8B,EAAAb,CAAAA,GACzBY,CAAAA,GAAA/D,EAAA,IAAAoD,KAAAA,EAAAhE,EAAS,GAAAyD,KAAKC,WAAWjE,QAAO,KAAAqD,GAAA+B,EAAAb,CAAAA,EAIpChE,EAAW,CAAA,+RAsBaY,EAAA,IAAAkE,EAAAjE,UAAAb,EAAS,CAAA,EAAAyD,KAAKC,WAAW7C,gDAEhCb,EAAQ,GAACyD,KAAKC,sBAKrC1D,EAAW,CAAA,2LAcKA,EAAU,CAAA,2ZArDlBA,EAAQ,CAAA,EAAC+E,MAAMC,QAAO,6BAAhC,WAAA,8CAAA,WAAA,+BAAH/E,CAAAA,EAAuCC,EAAAC,EAAAC,qCAA1BJ,EAAQ,CAAA,EAAC+E,MAAMC,QAAO,KAAAlC,GAAAmC,EAAAC,0EAFhC,mDAAA,kCAAHjF,CAAAA,EAAgBC,EAAAC,EAAAC,CAAAA,8rBAaoG,MAAA,cAAA,MAAA,uEAGrC,QAAA,cAAA,+EAG4B,wBAAA,UAAA,uEAI5F,uBAAA,gFACsB,UAAA,cAAA,UAAA,moBAItB,mBAAA,4EACsB,WAAA,cAAA,WAAA,qsBAahBJ,EAAiB,CAAA,IAAA,gBAAjBA,EAAiB,CAAA,yMAAjBA,EAAiB,+IACT,iBAAA,cAAA,wFAKmD,sBAAA,QAAA,uEACV,sBAAA,2TAHxD,kLAAA,4LADRC,CAAAA,EAKKC,EAAAS,EAAAP,CAAAA,EAJHuB,EAAwDhB,EAAAwE,+5BAUvDnF,EAAY,4CAAZA,EAAY,CAAA,CAAA,uBAAnBC,EAA0BC,EAAAiF,EAAA/E,4BAAnBJ,EAAY,CAAA,CAAA,oDAhEfA,EAAQ,CAACoF,EAAAA,UAAAA,CAAapF,EAAQ,CAAA,EAAC+E,OAAS/E,EAAQ,CAAA,EAACyD,KAAKC,YAAU2B,GAAArF,6CAOnE,CAAA,OAAAA,KAASoF,SAAQ,EAEZpF,KAAS+E,MAAK,EAEd/E,EAAQ,CAACyD,EAAAA,KAAKC,WAAU,+QAX1B1D,CAAAA,EAAQ,CAACoF,EAAAA,UAAAA,CAAapF,EAAQ,CAAC+E,EAAAA,OAAS/E,EAAQ,CAAA,EAACyD,KAAKC,+ZAjCjDD,CAAc3C,EAAAA,EAEjB,KAAAwE,CAAAA,MAAAA,EAAKvF,UAAEA,EAASN,QAAEA,CAAAA,EAAYgE,mBAEhC,CAAA,EAAA,MAAA5D,EAAS0F,GAAAA,EAEX,IAAAC,EAAe,GACfC,EAAa,SAMXC,EAAmBC,GAAkB,EAAA,4BAErCC,EAAe,IACnB/F,CAAAA,EACGgG,SAASC,GAAqB,CAAI/F,UAClCgG,CAAAA,CAAAA,EAAAA,UAAAA,EACAC,KAAMC,GACD,CAAAA,EAAMlB,OACRmB,QAAQnB,MAAMkB,EAAMlB,MAAMC,OAC1BmB,EAAAA,EAAA,EAAAX,EAAe,2BAA6BS,EAAMlB,MAAMC,OACxDmB,EAAAA,EAAA,EAAAV,EAAa,EAAA,GAGbW,GAAKjC,GAAO,QAAUmB,YA4BqBc,GAAKjC,GAAO,QAAUmB,EAAQ,YAAcvF,EAAY,eAGxD2F,EAAiBW,IAAI,UAMvBC,GAAWC,EAAS9C,KAAKC,WAAWC,IAAI6C,qBA0BtCd,EAAiBW,IAAI,EAAA,SACrBT,kBAP9Ba,EAAiBR,wBAajBR,CAAAA,EAAUQ,0FAvF5BE,EAAA,EAAAO,EACDC,GAAOC,OAAOC,eACdN,GAAU9C,MAAMC,WAAWC,KAAKmD,SAASC,UAAWC,GAAWA,EAAOC,SAAWN,GAAOO,EAAAA,GAAO"}