{"version":3,"file":"22.4b80995c.js","sources":["../../../../../../src/lib/components/mods/ModGrid.svelte","../../../../../../src/routes/mods/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { queryStore, getContextClient } from '@urql/svelte';\n  import { GetModsDocument, ModFields, Order } from '$lib/generated';\n  import ModCard from './ModCard.svelte';\n  import PageControls from '$lib/components/utils/PageControls.svelte';\n  import { base } from '$app/paths';\n  import Button from '@smui/button';\n  import { Input } from '@smui/textfield';\n  import Paper from '@smui/paper';\n  import Fab from '@smui/fab';\n  import { Icon } from '@smui/common';\n  import { goto } from '$app/navigation';\n  import { page as storePage } from '$app/stores';\n  import { user } from '$lib/stores/user';\n  import FicsitCard from '$lib/components/general/FicsitCard.svelte';\n  import Select, { Option } from '@smui/select';\n  import { browser } from '$app/environment';\n\n  export let colCount: 4 | 5 = 4;\n  export let newMod = false;\n  export let showSearch = false;\n\n  const client = getContextClient();\n\n  let search = $storePage.url.searchParams.get('q');\n\n  // TODO Selectable\n  const perPage = 40;\n  let order: Order = Order.Desc;\n  let orderBy: ModFields = ModFields.LastVersionDate;\n\n  let page = parseInt($storePage.url.searchParams.get('p'), 10) || 1;\n\n  $: mods = queryStore({\n    query: GetModsDocument,\n    client,\n    variables: { offset: (page - 1) * perPage, limit: perPage, search, order, orderBy }\n  });\n\n  let totalMods: number;\n\n  let searchField = search;\n\n  let timer: number;\n  $: {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      if (searchField && searchField.length > 2) {\n        if ((search === '' || search === null) && searchField !== '' && searchField !== null) {\n          orderBy = ModFields.Search;\n          page = 1;\n        }\n\n        search = searchField;\n      } else if (searchField === '' || searchField === null) {\n        if (orderBy === ModFields.Search || !orderBy) {\n          orderBy = ModFields.LastVersionDate;\n        }\n\n        search = null;\n      }\n    }, 250) as unknown as number;\n  }\n\n  $: if (browser) {\n    const url = new URL(window.location.origin + window.location.pathname);\n    url.searchParams.append('p', page.toString());\n    searchField !== '' && searchField !== null && url.searchParams.append('q', searchField);\n    goto(url.toString(), { keepFocus: true });\n  }\n\n  $: totalMods = $mods?.data?.getMods?.count || 0;\n\n  $: gridClasses =\n    colCount == 4\n      ? '3xl:grid-cols-4 2xl:grid-cols-3 lg:grid-cols-2 grid-cols-1'\n      : '3xl:grid-cols-3 2xl:grid-cols-2 grid-cols-1';\n\n  $: orderFields = [\n    ['Name', 'name'],\n    ['Views', 'views'],\n    ['Downloads', 'downloads'],\n    ['Hotness (Views)', 'hotness'],\n    ['Popularity (Downloads)', 'popularity'],\n    ['Creation Date', 'created_at'],\n    ['Last Version', 'last_version_date'],\n    ...(search !== '' && search !== null ? [['Search', 'search']] : [])\n  ];\n</script>\n\n<div class=\"ml-auto flex flex-wrap justify-between items-center mb-5\">\n  {#if newMod && $user !== null}\n    <Button variant=\"outlined\" href=\"{base}/new-mod\">New Mod</Button>\n  {/if}\n\n  {#if showSearch}\n    <div class=\"search-container flex flex-wrap sm:px-4\">\n      <div class=\"mr-3\">\n        <Select bind:value={orderBy} label=\"Order By\">\n          {#each orderFields as orderField}\n            <Option value={orderField[1]}>{orderField[0]}</Option>\n          {/each}\n        </Select>\n      </div>\n      <div class=\"mr-3\">\n        <Select bind:value={order} label=\"Order\">\n          <Option value=\"asc\">Ascending</Option>\n          <Option value=\"desc\">Descending</Option>\n        </Select>\n      </div>\n      <Paper class=\"search-paper mr-3\" elevation={6}>\n        <Icon class=\"material-icons\">search</Icon>\n        <Input bind:value={searchField} placeholder=\"Search\" />\n      </Paper>\n      <Fab on:click={() => goto(base + '/mods?q=' + search)} color=\"primary\" mini class=\"solo-fab\" aria-label=\"Search\">\n        <Icon class=\"material-icons\">arrow_forward</Icon>\n      </Fab>\n    </div>\n  {/if}\n\n  <div>\n    <PageControls totalPages={Math.ceil(totalMods / perPage)} currentPage={page} />\n  </div>\n</div>\n\n{#if $mods.fetching}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each Array(perPage) as _}\n      <FicsitCard fake />\n    {/each}\n  </div>\n{:else if $mods.error}\n  <p>Oh no... {$mods.error.message}</p>\n{:else}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each $mods.data.getMods.mods as mod}\n      <ModCard {mod} />\n    {/each}\n  </div>\n{/if}\n\n<div class=\"mt-5 ml-auto flex justify-end\">\n  <div>\n    <PageControls totalPages={Math.ceil(totalMods / perPage)} currentPage={page} />\n  </div>\n</div>\n\n<style>\n  .search-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-grow: 1;\n  }\n\n  * :global(.search-paper) {\n    display: flex;\n    align-items: center;\n    flex-grow: 1;\n    max-width: 600px;\n    height: 48px;\n  }\n\n  * :global(.search-paper > *) {\n    display: inline-block;\n    margin: 0 12px;\n  }\n</style>\n","<script lang=\"ts\">\n  import ModGrid from '$lib/components/mods/ModGrid.svelte';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Mods available from the Satisfactory Mod Repository\" title=\"Mods\" />\n</svelte:head>\n\n<ModGrid showSearch={true} newMod={true} colCount={4} />\n"],"names":["base","ctx","insert_hydration","target","div2","anchor","append_hydration","div0","div1","t_value","dirty","set_data","t","value","option_changes","length","i","each_blocks","each_value_1","data","getMods","mods","div","error","message","p","t1","t1_value","each_value","Array","perPage","create_if_block_3","create_if_block_2","totalPages","Math","ceil","fetching","div3","pagecontrols0_changes","pagecontrols1_changes","colCount","$$props","newMod","showSearch","client","getContextClient","search","$storePage","url","searchParams","get","order","Order","Desc","orderBy","ModFields","LastVersionDate","page","parseInt","totalMods","searchField","timer","click_handler","goto","clearTimeout","$$invalidate","setTimeout","Search","$$subscribe_mods","queryStore","query","GetModsDocument","variables","offset","limit","URL","window","location","origin","pathname","append","toString","keepFocus","$mods","count","gridClasses","orderFields"],"mappings":"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"}