{"version":3,"file":"22.a92427f0.js","sources":["../../../../../../src/lib/components/mods/ModGrid.svelte","../../../../../../src/routes/mods/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { queryStore, getContextClient } from '@urql/svelte';\n  import { GetModsDocument, ModFields, Order } from '$lib/generated';\n  import ModCard from './ModCard.svelte';\n  import PageControls from '$lib/components/utils/PageControls.svelte';\n  import { base } from '$app/paths';\n  import Button from '@smui/button';\n  import { Input } from '@smui/textfield';\n  import Paper from '@smui/paper';\n  import Fab from '@smui/fab';\n  import { Icon } from '@smui/common';\n  import { goto } from '$app/navigation';\n  import { page as storePage } from '$app/stores';\n  import { user } from '$lib/stores/user';\n  import FicsitCard from '$lib/components/general/FicsitCard.svelte';\n  import Select, { Option } from '@smui/select';\n  import { browser } from '$app/environment';\n\n  export let colCount: 4 | 5 = 4;\n  export let newMod = false;\n  export let showSearch = false;\n\n  const client = getContextClient();\n\n  let search = $storePage.url.searchParams.get('q');\n\n  // TODO Selectable\n  const perPage = 40;\n  let order: Order = Order.Desc;\n  let orderBy: ModFields = ModFields.LastVersionDate;\n\n  if (search) {\n    orderBy = ModFields.Search;\n  }\n\n  let page = parseInt($storePage.url.searchParams.get('p'), 10) || 1;\n\n  $: mods = queryStore({\n    query: GetModsDocument,\n    client,\n    variables: { offset: (page - 1) * perPage, limit: perPage, search, order, orderBy }\n  });\n\n  let totalMods = 0;\n\n  let searchField = search;\n\n  let timer: number;\n  $: {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      if (searchField && searchField.length > 2) {\n        if ((search === '' || search === null) && searchField !== '' && searchField !== null) {\n          orderBy = ModFields.Search;\n          page = 1;\n        }\n\n        search = searchField;\n      } else if (searchField === '' || searchField === null) {\n        if (orderBy === ModFields.Search || !orderBy) {\n          orderBy = ModFields.LastVersionDate;\n        }\n\n        search = null;\n      }\n    }, 250) as unknown as number;\n  }\n\n  $: if (browser) {\n    const url = new URL(window.location.origin + window.location.pathname);\n    url.searchParams.append('p', page.toString());\n    searchField !== '' && searchField !== null && url.searchParams.append('q', searchField);\n    goto(url.toString(), { keepFocus: true });\n  }\n\n  $: if ($mods?.data?.getMods?.count) {\n    totalMods = $mods.data.getMods.count;\n  }\n\n  $: gridClasses =\n    colCount == 4\n      ? '3xl:grid-cols-4 2xl:grid-cols-3 lg:grid-cols-2 grid-cols-1'\n      : '3xl:grid-cols-3 2xl:grid-cols-2 grid-cols-1';\n\n  $: orderFields = [\n    ['Name', 'name'],\n    ['Views', 'views'],\n    ['Downloads', 'downloads'],\n    ['Hotness (Views)', 'hotness'],\n    ['Popularity (Downloads)', 'popularity'],\n    ['Creation Date', 'created_at'],\n    ['Last Version', 'last_version_date'],\n    // Hide the search option if a search string is not set.\n    // The component must still exist, otherwise Select will set orderBy to null/undefined, because the selectedIndex would be -1.\n    ['Search', 'search', search === '' || search === null]\n  ];\n</script>\n\n<div class=\"ml-auto flex flex-wrap justify-between items-center mb-5\">\n  {#if newMod && $user !== null}\n    <Button variant=\"outlined\" href=\"{base}/new-mod\">New Mod</Button>\n  {/if}\n\n  {#if showSearch}\n    <div class=\"search-container flex flex-wrap sm:px-4\">\n      <div class=\"mr-3\">\n        <Select bind:value={orderBy} label=\"Order By\">\n          {#each orderFields as orderField}\n            <!-- Using style instead of tailwind because Option unnecessarily consumes the class prop without exposing another one for the inner item -->\n            <Option value={orderField[1]} style={orderField[2] ? 'display: none;' : ''}>{orderField[0]}</Option>\n          {/each}\n        </Select>\n      </div>\n      <div class=\"mr-3\">\n        <Select bind:value={order} label=\"Order\">\n          <Option value=\"asc\">Ascending</Option>\n          <Option value=\"desc\">Descending</Option>\n        </Select>\n      </div>\n      <Paper class=\"search-paper mr-3\" elevation={6}>\n        <Icon class=\"material-icons\">search</Icon>\n        <Input bind:value={searchField} placeholder=\"Search\" />\n      </Paper>\n      <Fab on:click={() => goto(base + '/mods?q=' + search)} color=\"primary\" mini class=\"solo-fab\" aria-label=\"Search\">\n        <Icon class=\"material-icons\">arrow_forward</Icon>\n      </Fab>\n    </div>\n  {/if}\n\n  <div>\n    <PageControls totalPages={Math.ceil(totalMods / perPage)} bind:currentPage={page} />\n  </div>\n</div>\n\n{#if $mods.fetching}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each Array(perPage) as _}\n      <FicsitCard fake />\n    {/each}\n  </div>\n{:else if $mods.error}\n  <p>Oh no... {$mods.error.message}</p>\n{:else}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each $mods.data.getMods.mods as mod}\n      <ModCard {mod} />\n    {/each}\n  </div>\n{/if}\n\n<div class=\"mt-5 ml-auto flex justify-end\">\n  <div>\n    <PageControls totalPages={Math.ceil(totalMods / perPage)} bind:currentPage={page} />\n  </div>\n</div>\n\n<style>\n  .search-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-grow: 1;\n  }\n\n  * :global(.search-paper) {\n    display: flex;\n    align-items: center;\n    flex-grow: 1;\n    max-width: 600px;\n    height: 48px;\n  }\n\n  * :global(.search-paper > *) {\n    display: inline-block;\n    margin: 0 12px;\n  }\n</style>\n","<script lang=\"ts\">\n  import ModGrid from '$lib/components/mods/ModGrid.svelte';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Mods available from the Satisfactory Mod Repository\" title=\"Mods\" />\n</svelte:head>\n\n<ModGrid showSearch={true} newMod={true} colCount={4} />\n"],"names":["base","ctx","insert_hydration","target","div2","anchor","append_hydration","div0","div1","t_value","dirty","set_data","t","value","style","option_changes","length","i","each_blocks","each_value_1","data","getMods","mods","div","error","message","p","t1","t1_value","each_value","Array","perPage","create_if_block_3","create_if_block_2","totalPages","Math","ceil","fetching","div3","pagecontrols0_changes","pagecontrols1_changes","colCount","$$props","newMod","showSearch","client","getContextClient","search","$storePage","url","searchParams","get","order","Order","Desc","orderBy","ModFields","LastVersionDate","Search","page","parseInt","totalMods","searchField","timer","click_handler","goto","clearTimeout","$$invalidate","setTimeout","$$subscribe_mods","queryStore","query","GetModsDocument","variables","offset","limit","URL","window","location","origin","pathname","append","toString","keepFocus","$mods","count","gridClasses","orderFields"],"mappings":"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"}