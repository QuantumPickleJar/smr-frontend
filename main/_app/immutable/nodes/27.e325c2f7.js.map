{"version":3,"file":"27.e325c2f7.js","sources":["../../../../../../src/routes/sml-versions/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { GetSmlVersionsDocument } from '$lib/generated';\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import PageControls from '$lib/components/utils/PageControls.svelte';\n  import { markdown } from '$lib/utils/markdown';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import Card, { Content } from '@smui/card';\n  import DataTable, { Head, Body, Row, Cell } from '@smui/data-table';\n  import Button from '@smui/button';\n  import { prettyDate } from '$lib/utils/formatting';\n\n  const client = getContextClient();\n\n  let expandedVersions = new Set<string>();\n\n  // TODO Selectable\n  const perPage = 20;\n\n  const page = 1;\n\n  // TODO Pagination\n  $: versions = queryStore({\n    query: GetSmlVersionsDocument,\n    client,\n    variables: {\n      offset: (page - 1) * perPage,\n      limit: perPage\n    }\n  });\n\n  $: totalVersions = $versions?.data?.getSMLVersions?.count;\n\n  const toggleRow = (versionId: string) => {\n    if (expandedVersions.has(versionId)) {\n      expandedVersions.delete(versionId);\n    } else {\n      expandedVersions.add(versionId);\n    }\n    expandedVersions = expandedVersions;\n  };\n</script>\n\n<svelte:head>\n  <title>SML Versions - SMR</title>\n  <MetaDescriptors description=\"Versions of the Satisfactory Mod Loader\" title=\"Satisfactory Mod Loader versions\" />\n</svelte:head>\n\n{#if totalVersions}\n  <div class=\"mb-5 ml-auto flex justify-end\">\n    <div>\n      <PageControls totalPages={Math.ceil(totalVersions / perPage)} currentPage={page} />\n    </div>\n  </div>\n{/if}\n\n<Card>\n  {#if $versions.fetching}\n    <Content>Loading...</Content>\n  {:else if $versions.error}\n    <Content>Oh no... {$versions.error.message}</Content>\n  {:else}\n    <DataTable class=\"max-w-full\">\n      <Head>\n        <Row>\n          <Cell>Version</Cell>\n          <Cell>Stability</Cell>\n          <Cell>Game Version</Cell>\n          <Cell>Release Date</Cell>\n          <Cell><!-- Buttons --></Cell>\n        </Row>\n      </Head>\n      <Body>\n        {#each $versions.data.getSMLVersions.sml_versions as version}\n          <Row on:click={() => toggleRow(version.id)}>\n            <Cell>{version.version}</Cell>\n            <Cell>{version.stability}</Cell>\n            <Cell>{version.satisfactory_version}</Cell>\n            <Cell>{prettyDate(version.date)}</Cell>\n            <Cell>\n              <div class=\"grid grid-flow-col gap-4\">\n                <Button variant=\"outlined\" href={version.link}>View</Button>\n              </div>\n            </Cell>\n          </Row>\n\n          {#if expandedVersions.has(version.id)}\n            <Row>\n              <Cell colspan={5} class=\"p-2 markdown-content\">\n                {#await markdown(version.changelog) then changelogRendered}\n                  {@html changelogRendered}\n                {/await}\n              </Cell>\n            </Row>\n          {/if}\n        {/each}\n      </Body>\n    </DataTable>\n  {/if}\n</Card>\n\n{#if totalVersions}\n  <div class=\"mt-5 ml-auto flex justify-end\">\n    <div>\n      <PageControls totalPages={Math.ceil(totalVersions / perPage)} currentPage={page} />\n    </div>\n  </div>\n{/if}\n"],"names":["totalPages","Math","ceil","ctx","perPage","page","insert_hydration","target","div1","anchor","append_hydration","div0","dirty","pagecontrols_changes","t_value","version","set_data","t","stability","satisfactory_version","prettyDate","date","href","link","div","button_changes","html_tag","p","raw_value","markdown","changelog","info","handle_promise","promise","show_if","has","id","each_value","data","getSMLVersions","sml_versions","length","i","each_blocks","error","message","t1","t1_value","fetching","create_if_block_4","create_if_block","client","getContextClient","expandedVersions","Set","toggleRow","versionId","delete","add","$$invalidate","totalVersions","$versions","count","$$subscribe_versions","versions","queryStore","query","GetSmlVersionsDocument","variables","offset","limit"],"mappings":"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"}