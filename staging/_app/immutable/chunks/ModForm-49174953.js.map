{"version":3,"file":"ModForm-49174953.js","sources":["../../../../../../src/lib/models/mods.ts","../../../../../../src/lib/components/mods/ModAuthor.svelte","../../../../../../src/lib/components/mods/ModForm.svelte"],"sourcesContent":["import * as zod from 'zod';\n\nexport type ModData = {\n  name: string;\n  mod_reference: string;\n  short_description: string;\n  full_description?: string;\n  logo?: string;\n  source_url?: string;\n  authors?: {\n    role: string;\n    user_id: string;\n  }[];\n  hidden: boolean;\n};\n\nexport const modSchema = zod.object({\n  name: zod.string().min(3).max(32),\n  mod_reference: zod\n    .string()\n    .min(3)\n    .max(32)\n    .regex(/^([a-zA-Z][a-zA-Z0-9_]*)$/)\n    .refine(\n      async () =>\n        // TODO Check if mod reference exists\n        true\n    ),\n  short_description: zod.string().min(16).max(128),\n  full_description: zod.optional(zod.string()),\n  logo: zod.optional(zod.any().refine((logo) => 'name' in logo && 'size' in logo && 'type' in logo)),\n  source_url: zod.string().url().optional().or(zod.literal('')),\n  authors: zod.optional(\n    zod\n      .object({\n        role: zod.string(),\n        user_id: zod.string()\n      })\n      .array()\n  ),\n  hidden: zod.boolean()\n});\n","<script lang=\"ts\">\n  import { operationStore, query } from '@urql/svelte';\n  import { GetUserDocument } from '$lib/generated';\n  import { assets } from '$app/paths';\n\n  export let id: string;\n\n  const user = operationStore(GetUserDocument, { user: id });\n\n  $: {\n    $user.variables.user = id;\n    $user.reexecute();\n  }\n\n  query(user);\n</script>\n\n{#if $user.fetching}\n  <p class=\"mr-2\">Loading...</p>\n{:else if $user.error}\n  <p class=\"mr-2\">Oh no... {$user.error.message}</p>\n{:else if $user.data.getUser}\n  <div class=\"grid grid-flow-col auto-cols-max gap-x-2 mr-2\">\n    <div\n      class=\"rounded-full bg-cover w-7 h-7\"\n      style={`background-image: url(\"${$user.data.getUser.avatar || assets + '/images/no_image.webp'}\")`} />\n    <div class=\"grid grid-flow-row\">\n      <span class=\"text-yellow-500\">{$user.data.getUser.username}</span>\n    </div>\n  </div>\n{:else}\n  <p class=\"mr-2 whitespace-nowrap\">Unknown User ID</p>\n{/if}\n","<script lang=\"ts\">\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { reporter, ValidationMessage } from '@felte/reporter-svelte';\n  import type { ModData } from '$lib/models/mods';\n  import { modSchema } from '$lib/models/mods';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { markdown } from '$lib/utils/markdown';\n  import Textfield from '@smui/textfield';\n  import HelperText from '@smui/textfield/helper-text';\n  import Button, { Label } from '@smui/button';\n  import ModAuthor from '$lib/components/mods/ModAuthor.svelte';\n  import FormField from '@smui/form-field';\n  import Switch from '@smui/switch';\n\n  export let onSubmit: (data: ModData) => void;\n  export let initialValues: ModData = {\n    full_description: '',\n    mod_reference: '',\n    name: '',\n    short_description: '',\n    source_url: '',\n    hidden: false\n  };\n  export let submitText = 'Create';\n\n  export let editing = false;\n\n  const { form, data } = createForm<ModData>({\n    initialValues: initialValues,\n    extend: [validator({ schema: modSchema }), reporter],\n    onSubmit: (submitted: ModData) => onSubmit(trimNonSchema(submitted, modSchema))\n  });\n\n  $: preview = ($data.full_description as string) || '';\n\n  const addAuthor = () => {\n    $data.authors.push({ role: 'editor', user_id: '', key: '' });\n    $data.authors = $data.authors;\n  };\n\n  const removeAuthor = (i: number) => {\n    $data.authors.splice(i, 1);\n    $data.authors = $data.authors;\n  };\n</script>\n\n<form use:form>\n  <div class=\"grid grid-flow-row gap-6\">\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.name} label=\"Name\" required />\n      <ValidationMessage for=\"name\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.mod_reference} label=\"Mod Reference\" required disabled={editing}>\n        <HelperText persistent={!editing} slot=\"helper\">\n          {#if !editing}\n            Warning! You will not be able to change this after creating the mod! Please ensure this is a unique modifier\n            that closely matches the name of your mod!\n          {/if}\n        </HelperText>\n      </Textfield>\n      <ValidationMessage for=\"mod_reference\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.short_description} label=\"Short Description\" required />\n      <ValidationMessage for=\"short_description\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid gap-6 split\">\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <Textfield\n          textarea\n          class=\"vertical-textarea\"\n          bind:value={$data.full_description}\n          label=\"Full Description\"\n          required\n          input$rows={10} />\n        <ValidationMessage for=\"full_description\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <span>Preview:</span>\n        {#await markdown(preview) then previewRendered}\n          <div class=\"markdown-content right\">{@html previewRendered}</div>\n        {/await}\n      </div>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <label for=\"logo\">Logo:</label>\n      <input\n        id=\"logo\"\n        class=\"base-input\"\n        name=\"logo\"\n        type=\"file\"\n        accept=\"image/png,image/jpeg,image/gif\"\n        placeholder=\"Logo\" />\n      <ValidationMessage for=\"logo\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.source_url} label=\"Source URL\" />\n      <ValidationMessage for=\"source_url\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <FormField>\n        <Switch bind:checked={$data.hidden} />\n        <span slot=\"label\">Hidden</span>\n      </FormField>\n      <ValidationMessage for=\"hidden\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    {#if editing}\n      <div class=\"grid grid-flow-row gap-2\">\n        <div class=\"flex items-baseline\">\n          <h4 class=\"mr-4\">Authors</h4>\n          <Button type=\"button\" on:click={addAuthor}>\n            <Label>Add</Label>\n          </Button>\n        </div>\n        {#each $data.authors as author, i}\n          <div class=\"flex items-baseline\">\n            {#if $data.authors[i].user_id}\n              <ModAuthor id={$data.authors[i].user_id} />\n            {/if}\n            <Textfield\n              bind:value={$data.authors[i].user_id}\n              label=\"User ID\"\n              class=\"mr-4 w-full\"\n              disabled={author.role === 'creator'} />\n            {#if author.role !== 'creator'}\n              <Button type=\"button\" on:click={() => removeAuthor(i)} variant=\"raised\">\n                <Label>Remove</Label>\n              </Button>\n            {/if}\n          </div>\n        {/each}\n      </div>\n    {/if}\n\n    <div>\n      <Button variant=\"outlined\" type=\"submit\">{submitText}</Button>\n    </div>\n  </div>\n</form>\n\n<style lang=\"postcss\">\n  .split {\n    grid-template-columns: 50% 50%;\n\n    & .right {\n      max-height: 75vh;\n      overflow: auto;\n    }\n  }\n</style>\n"],"names":["modSchema","zod.object","name","zod.string","min","max","mod_reference","regex","refine","async","short_description","full_description","zod.optional","logo","zod.any","source_url","url","optional","or","zod.literal","authors","role","user_id","array","hidden","zod.boolean","insert_hydration","target","p","anchor","t1_value","ctx","data","getUser","username","avatar","assets","div2","append_hydration","div0","div1","span","dirty","set_data","t1","error","message","fetching","create_if_block","create_if_block_1","create_if_block_2","id","$$props","user","operationStore","GetUserDocument","query","set_store_value","$user","variables","reexecute","t_value","t","create_if_block_3","div","innerHTML","raw_value","switch_1_props","checked","switch_1_changes","each_value","length","i","h4","each_blocks","modauthor_changes","if_block0","textfield_props","value","textfield_changes","textfield0_props","textfield1_props","textfield2_props","textfield3_props","handle_promise","promise","markdown","info","textfield4_props","form_1","div10","div5","div3","div4","div6","label","input","div7","div8","div9","textfield0_changes","textfield1_changes","textfield2_changes","textfield3_changes","textfield4_changes","onSubmit","initialValues","submitText","editing","form","createForm","extend","validator","schema","reporter","submitted","trimNonSchema","addAuthor","$data","push","key","removeAuthor","splice","$$self","$$","not_equal","click_handler","preview"],"mappings":"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"}