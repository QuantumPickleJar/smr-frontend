{"version":3,"file":"SMLVersionForm.537aa733.js","sources":["../../../../../../src/lib/models/sml-versions.ts","../../../../../../src/lib/components/sml-versions/SMLVersionForm.svelte"],"sourcesContent":["import * as zod from 'zod';\nimport type { UpdateSmlArch, VersionStabilities } from '$lib/generated';\n\nexport type SMLArchData = {\n  platform: string;\n  link: string;\n};\n\nexport type SMLVersionData = {\n  version: string;\n  satisfactory_version: number;\n  bootstrap_version?: string;\n  stability: VersionStabilities;\n  link: string;\n  changelog: string;\n  date: string;\n  arch: UpdateSmlArch[];\n};\n\nconst versionRegex =\n  /^(<=|<|>|>=|\\^)?(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\nexport const smlLinksSchema = zod.object({\n  platform: zod.string(),\n  link: zod.string().url()\n});\n\nexport const smlVersionSchema = zod.object({\n  version: zod.string().regex(versionRegex),\n  satisfactory_version: zod.number(),\n  bootstrap_version: zod.string().regex(versionRegex),\n  stability: zod.string(),\n  link: zod.string().url(),\n  arch: zod.array(smlLinksSchema),\n  changelog: zod.string(),\n  date: zod.string()\n});\n","<script lang=\"ts\">\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { reporter, ValidationMessage } from '@felte/reporter-svelte';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { markdown } from '$lib/utils/markdown';\n  import type { SMLVersionData } from '$lib/models/sml-versions';\n  import { smlVersionSchema } from '$lib/models/sml-versions';\n  import Textfield from '@smui/textfield';\n  import Button from '@smui/button';\n  import { VersionStabilities } from '$lib/generated';\n  import Select, { Option } from '@smui/select';\n\n  export let onSubmit: (data: SMLVersionData) => void;\n\n  export let editing = false;\n\n  export let initialValues: SMLVersionData = {\n    link: '',\n    bootstrap_version: '0.0.0',\n    date: '',\n    changelog: '',\n    satisfactory_version: 0,\n    stability: VersionStabilities.Alpha,\n    version: '',\n    arch: [{ platform: '', link: '' }]\n  };\n  export let submitText = 'Create';\n\n  const { form, data } = createForm<SMLVersionData>({\n    initialValues: initialValues,\n    extend: [validator({ schema: smlVersionSchema }), reporter],\n    onSubmit: (submitted: SMLVersionData) => onSubmit(trimNonSchema(submitted, smlVersionSchema))\n  });\n\n  const addArch = () => {\n    $data.arch.push({ platform: '', link: '', key: '' });\n    $data.arch = $data.arch;\n  };\n\n  const removeArch = (i: number) => {\n    $data.arch.splice(i, 1);\n    $data.arch = $data.arch;\n  };\n\n  $: preview = ($data.changelog as string) || '';\n</script>\n\n<form use:form>\n  <div class=\"grid grid-flow-row gap-6\">\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.version} label=\"Version\" required />\n      <ValidationMessage for=\"version\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.satisfactory_version} label=\"Satisfactory Version\" required type=\"number\" />\n      <ValidationMessage for=\"satisfactory_version\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    {#if $data.bootstrap_version !== '0.0.0'}\n      <div class=\"grid grid-flow-row gap-2\">\n        <Textfield bind:value={$data.bootstrap_version} label=\"Bootstrap Version\" required />\n        <ValidationMessage for=\"bootstrap_version\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n    {/if}\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Select bind:value={$data.stability} label=\"Stability\">\n        <Option value=\"alpha\">Alpha</Option>\n        <Option value=\"beta\">Beta</Option>\n        <Option value=\"release\">Release</Option>\n      </Select>\n      <ValidationMessage for=\"stability\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid gap-6 split\">\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <Textfield\n          textarea\n          class=\"vertical-textarea\"\n          bind:value={$data.changelog}\n          label=\"Changelog\"\n          required\n          input$rows={10} />\n        <ValidationMessage for=\"changelog\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <span>Preview:</span>\n        {#await markdown(preview) then previewRendered}\n          <div class=\"markdown-content right\">{@html previewRendered}</div>\n        {/await}\n      </div>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      {#each $data.arch as data_link, i}\n        <div class=\"gap-6 auto-rows-max\">\n          <Select bind:value={data_link.platform} label=\"Platform\">\n            <Option value=\"WindowsNoEditor\">Windows Client</Option>\n            <Option value=\"WindowsServer\">Windows Server</Option>\n            <Option value=\"LinuxServer\">Linux Server</Option>\n          </Select>\n\n          <Textfield\n            name={`data_link.link`}\n            placeholder=\"URL\"\n            bind:value={data_link.link}\n            style=\"min-width: 850px;\"\n            label=\"URL\" />\n          <ValidationMessage for=\"data_link.link\" let:messages={message}>\n            <span class=\"validation-message\">{message || ''}</span>\n          </ValidationMessage>\n\n          {#if !editing}\n            <Button type=\"button\" on:click={addArch}>Add</Button>\n            <Button type=\"button\" disabled={$data.arch.length == 1} on:click={() => removeArch(i)}>Remove</Button>\n          {/if}\n        </div>\n      {/each}\n\n      <Textfield bind:value={$data.link} label=\"Link\" />\n      <ValidationMessage for=\"link\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.date} label=\"Date and Time\" required />\n      <ValidationMessage for=\"date\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div>\n      <Button variant=\"outlined\" type=\"submit\">{submitText}</Button>\n    </div>\n  </div>\n</form>\n\n<style lang=\"postcss\">\n  .split {\n    grid-template-columns: 50% 50%;\n\n    & .right {\n      max-height: 75vh;\n      overflow: auto;\n    }\n  }\n</style>\n"],"names":["versionRegex","smlLinksSchema","zod.object","platform","zod.string","link","url","smlVersionSchema","version","regex","satisfactory_version","zod.number","bootstrap_version","stability","arch","zod.array","changelog","date","t_value","ctx","insert_hydration_dev","target","span","anchor","dirty","set_data_dev","t","textfield_props","value","message","div","textfield_changes","innerHTML","raw_value","disabled","length","button1_changes","select_props","create_if_block","select_changes","textfield0_props","textfield1_props","create_if_block_1","textfield2_props","handle_promise","promise","markdown","info","each_value","i","textfield3_props","textfield4_props","form_1","append_hydration_dev","div9","div0","div1","div2","div5","div3","div4","div6","div7","div8","textfield0_changes","textfield1_changes","textfield2_changes","each_blocks","textfield3_changes","textfield4_changes","onSubmit","$$props","editing","initialValues","VersionStabilities","Alpha","submitText","form","data","createForm","extend","validator","schema","reporter","submitted","trimNonSchema","addArch","$data","push","key","removeArch","splice","$$self","$$","not_equal","data_link","click_handler","preview"],"mappings":"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"}