{"version":3,"file":"markdown.623802d0.js","sources":["../../../../../../src/lib/utils/markdown.ts"],"sourcesContent":["import DOMPurify from 'dompurify';\nimport { marked } from 'marked';\nimport { browser } from '$app/environment';\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-c.js';\nimport 'prismjs/components/prism-cpp.js';\nimport 'prismjs/components/prism-lua.js';\nimport 'prismjs/components/prism-javascript.js';\nimport 'prismjs/components/prism-json.js';\nimport 'prismjs/components/prism-python.js';\nimport 'prismjs/components/prism-markdown.js';\nimport 'prismjs/components/prism-markup.js';\n\nlet resolver;\nconst sanitizer = new Promise<(string) => string>((r) => (resolver = r));\n\nif (!browser) {\n  (async () => {\n    const { JSDOM } = await import('jsdom');\n    resolver(DOMPurify(new JSDOM('').window).sanitize);\n  })();\n} else {\n  resolver(DOMPurify.sanitize);\n}\n\nexport const markdown = (md: string): Promise<string> =>\n  sanitizer.then((s) => {\n    const sanitized = s(marked(md));\n    const parsed = new DOMParser().parseFromString(sanitized, 'text/html');\n    Prism.highlightAllUnder(parsed.body);\n    return parsed.body.innerHTML;\n  });\n"],"names":["resolver","sanitizer","Promise","r","DOMPurify","sanitize","markdown","md","then","s","sanitized","marked","parsed","DOMParser","parseFromString","Prism","highlightAllUnder","body","innerHTML"],"mappings":"uDAaA,IAAIA,EACJ,MAAMC,EAAY,IAAIC,QAA6BC,GAAOH,EAAWG,CAAAA,EAQnEH,EAASI,EAAUC,UAGd,MAAMC,EAAYC,GACvBN,EAAUO,KAAMC,GACd,CAAA,MAAMC,EAAYD,EAAEE,EAAOJ,IACrBK,EAAS,IAAIC,YAAYC,gBAAgBJ,EAAW,WACpDK,EAAAA,OAAAA,EAAAC,kBAAkBJ,EAAOK,IAAAA,EACxBL,EAAOK,KAAKC,SAAA"}