{"version":3,"mappings":"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","names":["initializeGraphQLClient","fetch","createClient","url","API_GRAPHQL","exchanges","cacheExchange","schema","keys","GetMods","LatestVersions","UserMod","GetGuides","OAuthOptions","UserRoles","Compatibility","CompatibilityInfo","updates","Mutation","deleteGuide","_result","args","cache","invalidate","__typename","id","guideId","deleteMod","modId","approveMod","denyMod","approveVersion","versionId","denyVersion","deleteSMLVersion","smlVersionId","deleteVersion","updateVersion","authExchange","async","utils","token","get","userToken","addAuthToOperation","operation","appendHeaders","Authorization","didAuthError","error","message","indexOf","persistedExchange","preferGetForPersistedQueries","fetchExchange","load","e","client","ctx","insert_hydration_dev","target","p","anchor","set_data_dev","t1","t1_value","div","fetching","span","getContextClient","getMe","queryStore","query","GetMeDocument","variables","requestPolicy","pause","first","subscribe","oneMonth","Date","getTime","cookie","set","domain","window","location","hostname","expires","mutation","LogoutDocument","undefined","toPromise","catch","then","remove","resume","unsub","response","console","data","user","signInMethods","github","OAuthGithubDocument","google","OAuthGoogleDocument","facebook","OAuthFacebookDocument","errorMessage","errorToast","signingIn","signInMethod","localStorage","getItem","removeItem","queryParams","Object","fromEntries","$page","searchParams","entries","length","URLSearchParams","search","code","state","loginDialogOpen","result","$$invalidate","session","oauthOptions","GetOAuthOptionsDocument","callback_url","encodeURIComponent","origin","pathname","goTo","service","setItem","goto","$oauthOptions","getOAuthOptions","$loginDialogOpen","value","create_if_block_5","startsWith","attr_dev","div_style_value","avatar","dirty","t_value","username","t","href","icon","label","external","i","each_blocks","create_if_block","create_if_block_3","open","$$props","drawerVariant","hideTopElements","accessibility","top","base","bottom","click_handler_2","$user","preloadData","item","currentPath","isAdmin","roles","approveMods","approveVersions","editSMLVersions","div2","div2_class_value","append_hydration_dev","div1","div0","b","current","monospacePrefix","iconNames","AnnouncementImportance","Info","Alert","Warning","Fix","backgroundColors","importance","isMonospace","finalMessage","replaceAll","getAnnouncements","announcementrow_changes","announcements","GetAnnouncementsDocument","script0","script0_src_value","script1","if_block","pingLauncher","t0_value","div1_style_value","t0","create_if_block_1","$$inline","main","create_if_block_6","if_block1","document_1","head","link0","link1","link2","link3","link4","link5","link6","meta0","meta1","meta2","link7","gTag","PUBLIC_GOOGLE_SITE_TAG","root","onMount","document","body","n","bN","cookieconsent","initialise","palette","popup","background","button","theme","position","customProtocolCheck","__vitePreload","import","toLocaleLowerCase","hasLauncher","toString","setContextClient","onMobile","mobile","menu","click_handler","setOpen","SMUI_action_handler","$$value","classList","add"],"sources":["../../../../../../src/lib/core/graphql.ts","../../../../../../src/routes/+layout.ts","../../../../../../src/lib/components/auth/LoginDialog.svelte","../../../../../../src/lib/components/general/Sidebar.svelte","../../../../../../src/lib/components/announcements/AnnouncementRow.svelte","../../../../../../src/lib/components/announcements/AnnouncementHeader.svelte","../../../../../../src/routes/+layout.svelte"],"sourcesContent":["import schema from '$lib/generated/graphql.schema.urql.json';\nimport { createClient, fetchExchange, type Client } from '@urql/svelte';\nimport { cacheExchange } from '@urql/exchange-graphcache';\nimport { persistedExchange } from '@urql/exchange-persisted';\nimport { API_GRAPHQL } from './api';\nimport { userToken } from '$lib/stores/user';\nimport { authExchange } from '@urql/exchange-auth';\nimport type { LoadEvent } from '@sveltejs/kit';\nimport { get } from 'svelte/store';\n\nexport const initializeGraphQLClient = (fetch?: LoadEvent['fetch']): Client =>\n  createClient({\n    url: API_GRAPHQL,\n    fetch,\n    exchanges: [\n      cacheExchange({\n        schema,\n        keys: {\n          GetMods: () => null,\n          LatestVersions: () => null,\n          UserMod: () => null,\n          GetGuides: () => null,\n          OAuthOptions: () => null,\n          UserRoles: () => null,\n          Compatibility: () => null,\n          CompatibilityInfo: () => null\n        },\n        updates: {\n          Mutation: {\n            deleteGuide(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Guide',\n                id: args.guideId as string\n              });\n            },\n            deleteMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            approveMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            denyMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            approveVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            denyVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            deleteSMLVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'SMLVersion',\n                id: args.smlVersionId as string\n              });\n            },\n            deleteVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            updateVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            }\n          }\n        }\n      }),\n      authExchange(async (utils) => {\n        const token = get(userToken);\n        return {\n          addAuthToOperation(operation) {\n            return utils.appendHeaders(operation, {\n              Authorization: token\n            });\n          },\n          didAuthError(error) {\n            return error.message.indexOf('user not logged in') >= 0;\n          },\n          async refreshAuth() {\n            // Token cannot be refreshed currently\n          }\n        };\n      }),\n      persistedExchange({\n        preferGetForPersistedQueries: true\n      }),\n      fetchExchange\n    ]\n  });\n","import type { LayoutLoad } from './$types';\nimport './_global.postcss';\nimport { initializeGraphQLClient } from '$lib/core';\n\nexport const load: LayoutLoad = async ({ fetch }) => {\n  const client = initializeGraphQLClient(fetch);\n  return {\n    client\n  };\n};\n","<script lang=\"ts\">\n  import { loginDialogOpen } from '$lib/stores/global';\n  import {\n    GetMeDocument,\n    GetOAuthOptionsDocument,\n    OAuthFacebookDocument,\n    OAuthGithubDocument,\n    OAuthGoogleDocument,\n    LogoutDocument\n  } from '$lib/generated';\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { browser } from '$app/environment';\n  import { page } from '$app/stores';\n  import { goto } from '$app/navigation';\n  import Toast from '../general/Toast.svelte';\n  import { user, userToken } from '$lib/stores/user';\n  import cookie from 'js-cookie';\n  import Dialog, { Title, Content } from '@smui/dialog';\n  import Button from '@smui/button';\n  import CircularProgress from '@smui/circular-progress';\n\n  const client = getContextClient();\n\n  if (browser) {\n    const getMe = queryStore({\n      query: GetMeDocument,\n      client,\n      variables: {},\n      requestPolicy: 'network-only',\n      pause: true\n    });\n\n    let first = true;\n    userToken.subscribe((token) => {\n      if (token) {\n        const oneMonth = new Date(new Date().getTime() + 30 * 24 * 60 * 60 * 1000);\n        cookie.set('token', token, {\n          domain: window.location.hostname,\n          expires: oneMonth\n        });\n      } else if (!first) {\n        client\n          .mutation(LogoutDocument, undefined, {\n            requestPolicy: 'network-only'\n          })\n          .toPromise()\n          .catch()\n          .then(() => {\n            cookie.remove('token');\n          });\n      }\n\n      first = false;\n\n      if (token) {\n        getMe.pause();\n        getMe.resume();\n\n        const unsub = getMe.subscribe((response) => {\n          if (!response.fetching) {\n            if (response.error) {\n              // TODO Toast or something\n              console.error(response.error.message);\n              unsub();\n            } else if (response.data) {\n              user.set(response.data.getMe);\n              unsub();\n            }\n          }\n        });\n      } else {\n        user.set(null);\n      }\n    });\n  }\n\n  const signInMethods = {\n    github: OAuthGithubDocument,\n    google: OAuthGoogleDocument,\n    facebook: OAuthFacebookDocument\n  };\n\n  let errorMessage = '';\n  let errorToast = false;\n  let signingIn = false;\n\n  if (browser) {\n    const signInMethod = localStorage.getItem('sign.in.method');\n    localStorage.removeItem('sign.in.method');\n\n    let queryParams = Object.fromEntries($page.url.searchParams.entries());\n    if (Object.keys(queryParams).length === 0) {\n      queryParams = Object.fromEntries(new URLSearchParams(window.location.search));\n    }\n\n    const code = queryParams.code;\n    const state = queryParams.state;\n\n    if (signInMethod && code && state) {\n      signingIn = true;\n      loginDialogOpen.set(true);\n\n      client\n        .mutation(signInMethods[signInMethod as 'github' | 'google' | 'facebook'], {\n          code,\n          state\n        })\n        .toPromise()\n        .then((result) => {\n          if (result.error) {\n            console.error(result.error.message);\n            errorMessage = 'Error logging in: ' + result.error.message;\n            errorToast = true;\n          } else {\n            userToken.set(result.data.session.token);\n            loginDialogOpen.set(false);\n          }\n        })\n        .catch()\n        .then(() => (signingIn = false));\n    }\n  }\n\n  const oauthOptions = queryStore({\n    query: GetOAuthOptionsDocument,\n    client,\n    variables: { callback_url: browser ? encodeURIComponent(window.location.origin + window.location.pathname) : '' },\n    requestPolicy: 'network-only'\n  });\n\n  $: if ($loginDialogOpen) {\n    oauthOptions.pause();\n    oauthOptions.resume();\n  }\n\n  const goTo = (service: string, url: string) => {\n    localStorage.setItem('sign.in.method', service);\n    goto(url);\n  };\n</script>\n\n<Dialog bind:open={$loginDialogOpen}>\n  <Title>Login / Sign Up</Title>\n  <Content>\n    <div class=\"grid grid-flow-row gap-4\">\n      {#if signingIn}\n        <p>Logging in...</p>\n        <div class=\"flex justify-center\">\n          <CircularProgress class=\"h-10 w-10\" indeterminate />\n        </div>\n      {:else if $oauthOptions.fetching}\n        <!-- TODO Placeholders -->\n        <p>Loading...</p>\n      {:else if $oauthOptions.error}\n        <p>Oh no... {$oauthOptions.error.message}</p>\n      {:else}\n        <Button variant=\"outlined\" on:click={() => goTo('github', $oauthOptions.data.getOAuthOptions.github)}>\n          Sign in with Github\n        </Button>\n        <Button variant=\"outlined\" on:click={() => goTo('google', $oauthOptions.data.getOAuthOptions.google)}>\n          Sign in with Google\n        </Button>\n        <Button variant=\"outlined\" on:click={() => goTo('facebook', $oauthOptions.data.getOAuthOptions.facebook)}>\n          Sign in with Facebook\n        </Button>\n      {/if}\n    </div>\n  </Content>\n</Dialog>\n\n<Toast bind:running={errorToast}>\n  <span>{errorMessage}</span>\n</Toast>\n","<script lang=\"ts\">\n  import Switch from '@smui/switch';\n  import FormField from '@smui/form-field';\n  import Drawer, { Content } from '@smui/drawer';\n  import List, { Item, Text, Graphic, Separator } from '@smui/list';\n  import { goto, preloadData } from '$app/navigation';\n  import { base } from '$app/paths';\n  import { page } from '$app/stores';\n  import { user, userToken } from '$lib/stores/user';\n  import { loginDialogOpen } from '$lib/stores/global';\n\n  export let open: boolean;\n  export let drawerVariant: 'modal' | 'dismissible';\n  export let hideTopElements: boolean;\n  export let accessibility: boolean;\n\n  $: currentPath = $page.url.pathname;\n  $: isAdmin = !$user ? false : $user.roles.approveMods || $user.roles.approveVersions || $user.roles.editSMLVersions;\n\n  const top = [\n    {\n      url: base + '/',\n      icon: 'home',\n      label: 'Home'\n    },\n    {\n      url: base + '/mods',\n      icon: 'extension',\n      label: 'Mods'\n    },\n    {\n      url: base + '/guides',\n      icon: 'description',\n      label: 'Guides'\n    },\n    {\n      url: base + '/sml-versions',\n      icon: 'lightbulb',\n      label: 'SML Versions'\n    },\n    {\n      url: base + '/tools',\n      icon: 'apps',\n      label: 'Tools'\n    },\n    {\n      url: 'https://discord.gg/xkVJ73E',\n      icon: 'people',\n      label: 'Discord',\n      external: true\n    },\n    {\n      url: 'https://docs.ficsit.app/',\n      icon: 'find_in_page',\n      label: 'Docs',\n      external: true\n    },\n    {\n      url: 'https://forums.ficsit.app/',\n      icon: 'forum',\n      label: 'Forums',\n      external: true\n    }\n  ];\n\n  const bottom = [\n    {\n      url: base + '/help',\n      icon: 'help',\n      label: 'Help'\n    },\n    {\n      url: base + '/privacy-policy',\n      icon: 'policy',\n      label: 'Privacy Policy'\n    },\n    {\n      url: base + '/tos',\n      icon: 'gavel',\n      label: 'Terms of Service'\n    },\n    {\n      url: base + '/api-docs',\n      icon: 'api',\n      label: 'API'\n    },\n    {\n      url: 'https://github.com/satisfactorymodding',\n      icon: 'source',\n      label: 'GitHub',\n      external: true\n    }\n  ];\n</script>\n\n<Drawer variant={drawerVariant} fixed={false} bind:open>\n  <Content>\n    <div class=\"drawer-content\">\n      {#if hideTopElements}\n        <List>\n          {#if $user === null}\n            <Item on:click={() => loginDialogOpen.set(true)}>\n              <Graphic class=\"material-icons\">login</Graphic>\n              <Text>Sign In</Text>\n            </Item>\n          {:else}\n            {#if isAdmin}\n              <Item on:click={() => goto(base + '/admin')} activated={currentPath.startsWith('/admin')}>\n                <Graphic class=\"material-icons\">admin_panel_settings</Graphic>\n                <Text>Admin</Text>\n              </Item>\n            {/if}\n\n            <Item on:click={() => goto(base + '/user/' + $user.id)} activated={currentPath.startsWith('/user')}>\n              <Graphic>\n                <div class=\"rounded-full bg-cover w-7 h-7\" style={`background-image: url(\"${$user.avatar}\")`} />\n              </Graphic>\n              <Text>{$user.username}</Text>\n            </Item>\n\n            <Item on:click={() => userToken.set(null)}>\n              <Graphic class=\"material-icons\">logout</Graphic>\n              <Text>Logout</Text>\n            </Item>\n          {/if}\n        </List>\n\n        <Separator />\n      {/if}\n\n      <List>\n        {#each top as item}\n          {#if !item.external}\n            <Item href={item.url} activated={currentPath === item.url} on:mouseover={() => preloadData(item.url)}>\n              <Graphic class=\"material-icons\">{item.icon}</Graphic>\n              <Text>{item.label}</Text>\n            </Item>\n          {:else}\n            <Item href={item.url} target=\"_blank\" rel=\"noopener\">\n              <Graphic class=\"material-icons\">{item.icon}</Graphic>\n              <Text>{item.label}</Text>\n            </Item>\n          {/if}\n        {/each}\n      </List>\n\n      <List>\n        {#each bottom as item}\n          {#if !item.external}\n            <Item href={item.url} activated={currentPath === item.url} on:mouseover={() => preloadData(item.url)}>\n              <Graphic class=\"material-icons\">{item.icon}</Graphic>\n              <Text>{item.label}</Text>\n            </Item>\n          {:else}\n            <Item href={item.url} target=\"_blank\" rel=\"noopener\">\n              <Graphic class=\"material-icons\">{item.icon}</Graphic>\n              <Text>{item.label}</Text>\n            </Item>\n          {/if}\n        {/each}\n\n        {#if hideTopElements}\n          <Item target=\"_blank\" href=\"https://smm.ficsit.app\" rel=\"noopener\">\n            <Graphic class=\"material-icons\">file_download</Graphic>\n            <Text>Mod Manager</Text>\n          </Item>\n        {/if}\n\n        <Item>\n          <FormField align=\"end\">\n            <Switch bind:checked={accessibility} aria-label=\"Accessibility Font\" />\n            <span slot=\"label\">Accessibility Font</span>\n          </FormField>\n        </Item>\n      </List>\n    </div>\n  </Content>\n</Drawer>\n\n<style lang=\"postcss\">\n  .drawer-content {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 100%;\n  }\n</style>\n","<script lang=\"ts\">\n  import { AnnouncementImportance } from '$lib/generated';\n  import { Icon } from '@smui/icon-button';\n\n  const iconNames: { [key in AnnouncementImportance]: string } = {\n    [AnnouncementImportance.Info]: 'info',\n    [AnnouncementImportance.Alert]: 'error',\n    [AnnouncementImportance.Warning]: 'warning',\n    [AnnouncementImportance.Fix]: 'build_circle'\n  };\n  const backgroundColors: { [key in AnnouncementImportance]: string } = {\n    [AnnouncementImportance.Info]: 'bg-sky-500',\n    [AnnouncementImportance.Alert]: 'bg-red-600',\n    [AnnouncementImportance.Warning]: 'bg-yellow-400',\n    [AnnouncementImportance.Fix]: 'bg-green-600'\n  };\n  const monospacePrefix = 'monotext:';\n\n  export let message: string;\n  export let importance: AnnouncementImportance;\n\n  // Enables making monospace announcements\n  $: isMonospace = message.startsWith(monospacePrefix);\n  $: finalMessage = isMonospace ? message.replaceAll(monospacePrefix, '') : message;\n</script>\n\n<div class=\"{backgroundColors[importance]} max-h-64 overflow-hidden\">\n  <div class=\"p-1 striped text-black\">\n    <Icon class=\"material-icons text-2xl align-middle\">{iconNames[importance]}</Icon>\n    <div\n      class=\"align-middle text-l inline-block break-words max-w-full\"\n      class:font-mono={isMonospace}\n      class:whitespace-pre={isMonospace}>\n      <b>{importance}: </b>{finalMessage}\n    </div>\n  </div>\n</div>\n\n<style>\n  .striped {\n    background: repeating-linear-gradient(\n      45deg,\n      transparent,\n      transparent 14px,\n      rgba(60, 60, 60, 0.1) 14px,\n      rgba(60, 60, 60, 0.1) 28px\n    );\n  }\n</style>\n","<script lang=\"ts\">\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { AnnouncementImportance, GetAnnouncementsDocument } from '$lib/generated';\n  import AnnouncementRow from './AnnouncementRow.svelte';\n\n  const client = getContextClient();\n\n  const announcements = queryStore({\n    query: GetAnnouncementsDocument,\n    client,\n    variables: {}\n  });\n</script>\n\n{#if $announcements.fetching}\n  <!-- Display nothing, don't disrupt the page for no reason -->\n{:else if $announcements.error}\n  <AnnouncementRow\n    message=\"Failed to load announcements: {$announcements.error.message}\"\n    importance={AnnouncementImportance.Warning} />\n{:else if $announcements && $announcements.data && $announcements.data.getAnnouncements}\n  <div class=\"max-h-96 overflow-y-auto\">\n    {#each $announcements?.data?.getAnnouncements as announcement}\n      <AnnouncementRow message={announcement.message} importance={announcement.importance} />\n    {/each}\n  </div>\n{/if}\n\n<style></style>\n","<script lang=\"ts\">\n  import LoginDialog from '$lib/components/auth/LoginDialog.svelte';\n  import { setContextClient } from '@urql/svelte';\n  import TopAppBar, { Row, Section, Title } from '@smui/top-app-bar';\n  import { AppContent, Scrim } from '@smui/drawer';\n  import List, { Item, Text } from '@smui/list';\n  import IconButton from '@smui/icon-button';\n  import Button, { Label, Icon } from '@smui/button';\n  import { user, userToken } from '$lib/stores/user';\n  import { goto } from '$app/navigation';\n  import { loginDialogOpen, onMobile } from '$lib/stores/global';\n  import Menu from '@smui/menu';\n  import { onMount } from 'svelte';\n  import { customProtocolCheck, hasLauncher, pingLauncher } from '$lib/stores/launcher';\n  import Sidebar from '$lib/components/general/Sidebar.svelte';\n  import AnnouncementHeader from '$lib/components/announcements/AnnouncementHeader.svelte';\n  import { base } from '$app/paths';\n  import { browser } from '$app/environment';\n  import { PUBLIC_GOOGLE_SITE_TAG } from '$env/static/public';\n  import type { LayoutData } from './$types';\n\n  export let data: LayoutData;\n\n  const { client } = data;\n\n  let gTag: unknown;\n  if (browser) {\n    gTag = PUBLIC_GOOGLE_SITE_TAG as string;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    window.gTag = gTag;\n  }\n\n  let root: HTMLElement;\n  onMount(async () => {\n    if (browser) {\n      root = document.body;\n\n      await import('cookieconsent/src/cookieconsent');\n\n      if ('cookieconsent' in window) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        window.cookieconsent.initialise({\n          palette: {\n            popup: {\n              background: '#000'\n            },\n            button: {\n              background: '#f1d600'\n            }\n          },\n          theme: 'edgeless',\n          position: 'bottom-right'\n        });\n      }\n\n      customProtocolCheck.set(await import('$lib/thirdparty/custom_protocol'));\n\n      if (localStorage.getItem('hasLauncher') && localStorage.getItem('hasLauncher').toLocaleLowerCase() === 'true') {\n        hasLauncher.set(true);\n      }\n\n      hasLauncher.subscribe((value) => {\n        if (value === true || value === false) {\n          localStorage.setItem('hasLauncher', value.toString().toLocaleLowerCase());\n        }\n      });\n    }\n  });\n\n  let accessibility = false;\n  $: root && (accessibility ? root.classList.add('accessibility') : root.classList.remove('accessibility'));\n\n  setContextClient(client);\n\n  $: isAdmin = !$user ? false : $user.roles.approveMods || $user.roles.approveVersions || $user.roles.editSMLVersions;\n\n  let open = false;\n  let drawerVariant: 'modal' | undefined = 'modal';\n  let hideTopElements = true;\n  if (browser) {\n    onMobile.subscribe((mobile) => {\n      drawerVariant = mobile ? 'modal' : undefined;\n      hideTopElements = mobile;\n    });\n  }\n\n  let menu: Menu;\n</script>\n\n<svelte:head>\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"{base}/assets/favicon.ico\" />\n  <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"{base}/assets/apple-touch-icon.png?v=69P26YMB35\" />\n  <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"{base}/assets/favicon-32x32.png?v=69P26YMB35\" />\n  <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"{base}/assets/favicon-16x16.png?v=69P26YMB35\" />\n  <link rel=\"manifest\" href=\"{base}/manifest.json?v=69P26YMB35\" />\n  <link rel=\"mask-icon\" href=\"{base}/assets/safari-pinned-tab.svg?v=69P26YMB35\" color=\"#da8517\" />\n  <link rel=\"shortcut icon\" href=\"{base}/assets/favicon.ico?v=69P26YMB35\" />\n  <meta name=\"msapplication-TileColor\" content=\"#da8517\" />\n  <meta name=\"msapplication-config\" content=\"{base}/static/assets/browserconfig.xml?v=69P26YMB35\" />\n  <meta name=\"theme-color\" content=\"#ff6f00\" />\n\n  <link rel=\"preload\" href=\"{base}/assets/fonts/flow-rounded.woff\" as=\"font\" type=\"font/woff\" />\n\n  {#if gTag}\n    <!-- Global site tag (gtag.js) - Google Analytics -->\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id={gTag}\"></script>\n    <script>\n      window.dataLayer = window.dataLayer || [];\n\n      function gtag() {\n        dataLayer.push(arguments);\n      }\n\n      gtag('js', new Date());\n\n      gtag('config', window['gTag']);\n    </script>\n  {/if}\n</svelte:head>\n\n<div class=\"app-container\">\n  <TopAppBar variant=\"static\">\n    <Row>\n      <Section>\n        {#if drawerVariant === 'modal'}\n          <IconButton class=\"material-icons\" on:click={() => (open = !open)}>menu</IconButton>\n        {/if}\n        <Title>FICSIT Augmentation Database</Title>\n      </Section>\n      {#if !hideTopElements}\n        <Section align=\"end\" toolbar>\n          {#if $hasLauncher}\n            <Button color=\"secondary\" variant=\"outlined\" class=\"mr-3\" on:click={pingLauncher}>\n              <Label>Launcher Detected</Label>\n              <Icon class=\"material-icons\">file_download</Icon>\n            </Button>\n          {:else}\n            <Button\n              color=\"secondary\"\n              variant=\"outlined\"\n              class=\"mr-3\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              href=\"https://smm.ficsit.app\">\n              <Label>Mod Manager</Label>\n              <Icon class=\"material-icons\">file_download</Icon>\n            </Button>\n          {/if}\n\n          {#if $user === null}\n            <Button color=\"secondary\" variant=\"outlined\" on:click={() => loginDialogOpen.set(true)}>\n              <Label>Sign In</Label>\n              <Icon class=\"material-icons\">login</Icon>\n            </Button>\n          {:else}\n            {#if isAdmin}\n              <Button color=\"secondary\" variant=\"outlined\" class=\"mr-3\" on:click={() => goto(base + '/admin')}>\n                <Label>Admin</Label>\n                <Icon class=\"material-icons\">admin_panel_settings</Icon>\n              </Button>\n            {/if}\n\n            <div>\n              <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                on:click={() => menu.setOpen(true)}\n                class=\"grid grid-flow-col\">\n                <div class=\"mr-3\">{$user.username}</div>\n                <div class=\"rounded-full bg-cover w-7 h-7\" style={`background-image: url(\"${$user.avatar}\")`} />\n              </Button>\n\n              <Menu bind:this={menu}>\n                <List>\n                  <Item on:SMUI:action={() => goto(base + '/user/' + $user.id)}>\n                    <Text>Profile</Text>\n                  </Item>\n                  <Item on:SMUI:action={() => goto(base + '/settings')}>\n                    <Text>Settings</Text>\n                  </Item>\n                  <Item on:SMUI:action={() => userToken.set(null)}>\n                    <Text>Logout</Text>\n                  </Item>\n                </List>\n              </Menu>\n            </div>\n          {/if}\n        </Section>\n      {/if}\n    </Row>\n  </TopAppBar>\n\n  <div class=\"drawer-container\">\n    <Sidebar bind:open bind:accessibility bind:drawerVariant bind:hideTopElements />\n\n    {#if drawerVariant === 'modal'}\n      <Scrim fixed={false} />\n    {/if}\n\n    <AppContent class=\"app-content w-full overflow-auto\">\n      <AnnouncementHeader />\n      <main class=\"main-content min-h-100% py-6 px-3\">\n        <slot />\n      </main>\n    </AppContent>\n  </div>\n</div>\n\n<LoginDialog />\n\n<style lang=\"postcss\">\n  .app-container {\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    height: 100vh;\n    max-height: 100vh;\n    width: 100vw;\n    max-width: 100vw;\n  }\n\n  .drawer-container {\n    display: flex;\n    height: 100%;\n    overflow: hidden;\n    position: relative;\n  }\n</style>\n"],"file":"_app/immutable/nodes/0.d452bce9.js"}