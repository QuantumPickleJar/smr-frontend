{"version":3,"file":"21.JSQvS003.js","sources":["../../../../../../src/lib/components/mods/ModGrid.svelte","../../../../../../src/routes/mods/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { queryStore, getContextClient } from '@urql/svelte';\n  import { GetModsDocument, GetTagsDocument, ModFields, Order } from '$lib/generated';\n  import ModCard from './ModCard.svelte';\n  import { base } from '$app/paths';\n  import { goto } from '$app/navigation';\n  import { page as storePage } from '$app/stores';\n  import { user } from '$lib/stores/user';\n  import FicsitCard from '$lib/components/general/FicsitCard.svelte';\n  import { browser } from '$app/environment';\n  import { getTranslate } from '@tolgee/svelte';\n  import { type PaginationSettings, Paginator } from '@skeletonlabs/skeleton';\n\n  export let colCount: 4 | 5 = 4;\n  export let newMod = false;\n  export let showSearch = false;\n\n  const client = getContextClient();\n\n  let search = (browser && $storePage.url.searchParams.get('q')) || '';\n\n  let order: Order = Order.Desc;\n  let orderBy: ModFields = ModFields.LastVersionDate;\n\n  let perPage = 32;\n  let page = parseInt((browser && $storePage.url.searchParams.get('p')) || '0', 10) || 0;\n\n  let selectedTags: string[] = [];\n\n  $: mods = queryStore({\n    query: GetModsDocument,\n    client,\n    variables: { offset: page * perPage, limit: perPage, search, order, orderBy, tagIDs: selectedTags.sort() }\n  });\n\n  $: allTags = queryStore({\n    query: GetTagsDocument,\n    client,\n    variables: {}\n  });\n\n  let totalMods: number;\n\n  let searchField = search;\n\n  let timer: number;\n  $: {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      if (searchField && searchField.length > 2) {\n        if ((search === '' || search === null) && searchField !== '' && searchField !== null) {\n          orderBy = ModFields.Search;\n          page = 0;\n        }\n\n        search = searchField;\n      } else if (searchField === '' || searchField === null) {\n        if (orderBy === ModFields.Search || !orderBy) {\n          orderBy = ModFields.LastVersionDate;\n        }\n\n        search = null;\n      }\n    }, 250) as unknown as number;\n  }\n\n  $: if (browser) {\n    const url = new URL(window.location.origin + window.location.pathname);\n    url.searchParams.append('p', page.toString());\n    searchField !== '' && searchField !== null && url.searchParams.append('q', searchField);\n    goto(url.toString(), { keepFocus: true });\n  }\n\n  $: totalMods = $mods?.data?.getMods?.count || 0;\n\n  $: gridClasses =\n    colCount == 4\n      ? '3xl:grid-cols-4 2xl:grid-cols-3 lg:grid-cols-2 grid-cols-1'\n      : '3xl:grid-cols-3 2xl:grid-cols-2 grid-cols-1';\n\n  export const { t } = getTranslate();\n\n  $: orderFields = [\n    [$t('sort-order.name'), 'name'],\n    [$t('sort-order.views'), 'views'],\n    [$t('sort-order.downloads'), 'downloads'],\n    [$t('sort-order.hotness'), 'hotness'],\n    [$t('sort-order.popularity'), 'popularity'],\n    [$t('sort-order.created_at'), 'created_at'],\n    [$t('sort-order.last_version_date'), 'last_version_date'],\n    ...(search !== '' && search !== null ? [[$t('sort-order.search'), 'search']] : [])\n  ];\n\n  $: paginationSettings = {\n    page: page,\n    limit: perPage,\n    size: totalMods,\n    amounts: [8, 16, 32, 64, 100]\n  } satisfies PaginationSettings;\n\n  const toggleTag = (tagId: string) => {\n    if (selectedTags.indexOf(tagId) >= 0) {\n      const i = selectedTags.indexOf(tagId);\n      selectedTags = [...selectedTags.slice(0, i), ...selectedTags.slice(i + 1)];\n    } else {\n      selectedTags = [...selectedTags, tagId];\n    }\n  };\n</script>\n\n<div class=\"mb-5 ml-auto flex flex-wrap\">\n  {#if newMod && $user !== null}\n    <a class=\"variant-ghost-primary btn self-end\" href=\"{base}/new-mod\">{$t('mods.new')}</a>\n  {/if}\n\n  {#if showSearch}\n    <div class=\"flex grow flex-col items-center justify-center gap-4 sm:px-4\">\n      <div class=\"flex grow flex-row flex-wrap items-center justify-center sm:px-4\">\n        <div class=\"mr-3\">\n          <select bind:value={orderBy} class=\"select\">\n            {#each orderFields as orderField}\n              <option value={orderField[1]}>{orderField[0]}</option>\n            {/each}\n          </select>\n        </div>\n        <div class=\"mr-3\">\n          <select bind:value={order} class=\"select\">\n            <option value=\"asc\">{$t('ascending')}</option>\n            <option value=\"desc\">{$t('descending')}</option>\n          </select>\n        </div>\n\n        <div class=\"input-group input-group-divider w-fit grid-cols-[1fr_auto] rounded-container-token\">\n          <input\n            bind:value={searchField}\n            class=\"border-0 bg-transparent p-1.5 ring-0\"\n            name=\"search\"\n            placeholder=\"Search\" />\n          <button class=\"material-icons variant-filled-primary\">arrow_forward</button>\n        </div>\n      </div>\n      <div class=\"flex flex-row gap-1\">\n        {#if $allTags.error}\n          <p>Oh no... {$allTags.error.message}</p>\n        {:else if !$allTags.fetching}\n          {#each $allTags.data.getTags as tag}\n            <button\n              class=\"chip hover:variant-filled-surface [&:not(:hover)]:variant-soft\"\n              class:selected={selectedTags.indexOf(tag.id) >= 0}\n              on:click={() => toggleTag(tag.id)}>\n              <div class=\"lowercase text-neutral-300\">\n                <span class=\"text-orange-500\">#</span>{tag.name}\n              </div>\n            </button>\n          {/each}\n        {/if}\n      </div>\n    </div>\n  {/if}\n\n  <div class=\"self-end\">\n    <Paginator\n      bind:settings={paginationSettings}\n      showFirstLastButtons={true}\n      showPreviousNextButtons={true}\n      on:page={(p) => (page = p.detail)}\n      on:amount={(p) => (perPage = p.detail)}\n      controlVariant=\"variant-filled-surface\" />\n  </div>\n</div>\n\n{#if $mods.fetching}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each Array(perPage) as _}\n      <FicsitCard fake />\n    {/each}\n  </div>\n{:else if $mods.error}\n  <p>Oh no... {$mods.error.message}</p>\n{:else}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each $mods.data.getMods.mods as mod}\n      <ModCard {mod} />\n    {/each}\n  </div>\n{/if}\n\n<div class=\"ml-auto mt-5 flex justify-end\">\n  <div>\n    <Paginator\n      bind:settings={paginationSettings}\n      showFirstLastButtons={true}\n      showPreviousNextButtons={true}\n      on:page={(p) => (page = p.detail)}\n      on:amount={(p) => (perPage = p.detail)}\n      controlVariant=\"variant-filled-surface\" />\n  </div>\n</div>\n\n<style lang=\"postcss\">\n  .selected {\n    @apply variant-ghost-primary hover:variant-ringed-primary;\n  }\n\n  * :global(.search-paper) {\n    display: flex;\n    align-items: center;\n    flex-grow: 1;\n    max-width: 600px;\n    height: 48px;\n  }\n\n  * :global(.search-paper > *) {\n    display: inline-block;\n    margin: 0 12px;\n  }\n</style>\n","<script lang=\"ts\">\n  import ModGrid from '$lib/components/mods/ModGrid.svelte';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Mods available from the Satisfactory Mod Repository\" title=\"Mods\" />\n</svelte:head>\n\n<ModGrid showSearch={true} newMod={true} colCount={4} />\n"],"names":["t_1_value","ctx","base","insert_hydration_dev","target","a","anchor","dirty","set_data_dev","t_1","t1_value","t2_value","length","i","error","create_if_block_3","fetching","create_if_block_4","add_render_callback","call","select0","select1","div5","append_hydration_dev","div3","div0","div1","option0","option1","div2","input","button","div4","t1","t2","option","__value","option_value_value","data","getTags","message","p","name","toggle_class","indexOf","id","div","span","each_value_1","ensure_array_like_dev","getMods","mods","each_blocks","each_value","Array","create_if_block_5","create_if_block_2","colCount","$$props","newMod","showSearch","client","getContextClient","search","$storePage","url","searchParams","get","order","Order","Desc","orderBy","ModFields","LastVersionDate","perPage","page","parseInt","selectedTags","totalMods","searchField","timer","t","getTranslate","toggleTag","tagId","$$invalidate","slice","select_value","this","value","tag","paginationSettings","page_handler","detail","amount_handler","page_handler_1","amount_handler_1","clearTimeout","setTimeout","Search","$$subscribe_mods","queryStore","query","GetModsDocument","variables","offset","limit","tagIDs","sort","URL","window","location","origin","pathname","append","toString","goto","keepFocus","$mods","count","gridClasses","orderFields","$t","size","amounts","$$subscribe_allTags","allTags","GetTagsDocument"],"mappings":"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"}