{"version":3,"file":"21.ab39676e.js","sources":["../../../../../../src/lib/components/mods/ModGrid.svelte","../../../../../../src/routes/mods/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { queryStore, getContextClient } from '@urql/svelte';\n  import { GetModsDocument, ModFields, Order } from '$lib/generated';\n  import ModCard from './ModCard.svelte';\n  import PageControls from '$lib/components/utils/PageControls.svelte';\n  import { base } from '$app/paths';\n  import Button from '@smui/button';\n  import { Input } from '@smui/textfield';\n  import Paper from '@smui/paper';\n  import Fab from '@smui/fab';\n  import { Icon } from '@smui/common';\n  import { goto } from '$app/navigation';\n  import { page as storePage } from '$app/stores';\n  import { user } from '$lib/stores/user';\n  import FicsitCard from '$lib/components/general/FicsitCard.svelte';\n  import Select, { Option } from '@smui/select';\n  import { browser } from '$app/environment';\n\n  export let colCount: 4 | 5 = 4;\n  export let newMod = false;\n  export let showSearch = false;\n\n  const client = getContextClient();\n\n  let search = $storePage.url.searchParams.get('q');\n\n  // TODO Selectable\n  const perPage = 40;\n  let order: Order = Order.Desc;\n  let orderBy: ModFields = ModFields.LastVersionDate;\n\n  let page = parseInt($storePage.url.searchParams.get('p'), 10) || 1;\n\n  $: mods = queryStore({\n    query: GetModsDocument,\n    client,\n    variables: { offset: (page - 1) * perPage, limit: perPage, search, order, orderBy }\n  });\n\n  let totalMods: number;\n\n  let searchField = search;\n\n  let timer: number;\n  $: {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      if (searchField && searchField.length > 2) {\n        if ((search === '' || search === null) && searchField !== '' && searchField !== null) {\n          orderBy = ModFields.Search;\n          page = 1;\n        }\n\n        search = searchField;\n      } else if (searchField === '' || searchField === null) {\n        if (orderBy === ModFields.Search || !orderBy) {\n          orderBy = ModFields.LastVersionDate;\n        }\n\n        search = null;\n      }\n    }, 250) as unknown as number;\n  }\n\n  $: if (browser) {\n    const url = new URL(window.location.origin + window.location.pathname);\n    url.searchParams.append('p', page.toString());\n    searchField !== '' && searchField !== null && url.searchParams.append('q', searchField);\n    goto(url.toString(), { keepFocus: true });\n  }\n\n  $: totalMods = $mods?.data?.getMods?.count || 0;\n\n  $: gridClasses =\n    colCount == 4\n      ? '3xl:grid-cols-4 2xl:grid-cols-3 lg:grid-cols-2 grid-cols-1'\n      : '3xl:grid-cols-3 2xl:grid-cols-2 grid-cols-1';\n\n  $: orderFields = [\n    ['Name', 'name'],\n    ['Views', 'views'],\n    ['Downloads', 'downloads'],\n    ['Hotness (Views)', 'hotness'],\n    ['Popularity (Downloads)', 'popularity'],\n    ['Creation Date', 'created_at'],\n    ['Last Version', 'last_version_date'],\n    ...(search !== '' && search !== null ? [['Search', 'search']] : [])\n  ];\n</script>\n\n<div class=\"ml-auto flex flex-wrap justify-between items-center mb-5\">\n  {#if newMod && $user !== null}\n    <Button variant=\"outlined\" href=\"{base}/new-mod\">New Mod</Button>\n  {/if}\n\n  {#if showSearch}\n    <div class=\"search-container flex flex-wrap sm:px-4\">\n      <div class=\"mr-3\">\n        <Select bind:value={orderBy} label=\"Order By\">\n          {#each orderFields as orderField}\n            <Option value={orderField[1]}>{orderField[0]}</Option>\n          {/each}\n        </Select>\n      </div>\n      <div class=\"mr-3\">\n        <Select bind:value={order} label=\"Order\">\n          <Option value=\"asc\">Ascending</Option>\n          <Option value=\"desc\">Descending</Option>\n        </Select>\n      </div>\n      <Paper class=\"search-paper mr-3\" elevation={6}>\n        <Icon class=\"material-icons\">search</Icon>\n        <Input bind:value={searchField} placeholder=\"Search\" />\n      </Paper>\n      <Fab on:click={() => goto(base + '/mods?q=' + search)} color=\"primary\" mini class=\"solo-fab\" aria-label=\"Search\">\n        <Icon class=\"material-icons\">arrow_forward</Icon>\n      </Fab>\n    </div>\n  {/if}\n\n  <div>\n    <PageControls totalPages={Math.ceil(totalMods / perPage)} currentPage={page} />\n  </div>\n</div>\n\n{#if $mods.fetching}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each Array(perPage) as _}\n      <FicsitCard fake />\n    {/each}\n  </div>\n{:else if $mods.error}\n  <p>Oh no... {$mods.error.message}</p>\n{:else}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each $mods.data.getMods.mods as mod}\n      <ModCard {mod} />\n    {/each}\n  </div>\n{/if}\n\n<div class=\"mt-5 ml-auto flex justify-end\">\n  <div>\n    <PageControls totalPages={Math.ceil(totalMods / perPage)} currentPage={page} />\n  </div>\n</div>\n\n<style>\n  .search-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-grow: 1;\n  }\n\n  * :global(.search-paper) {\n    display: flex;\n    align-items: center;\n    flex-grow: 1;\n    max-width: 600px;\n    height: 48px;\n  }\n\n  * :global(.search-paper > *) {\n    display: inline-block;\n    margin: 0 12px;\n  }\n</style>\n","<script lang=\"ts\">\n  import ModGrid from '$lib/components/mods/ModGrid.svelte';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Mods available from the Satisfactory Mod Repository\" title=\"Mods\" />\n</svelte:head>\n\n<ModGrid showSearch={true} newMod={true} colCount={4} />\n"],"names":["base","ctx","insert_hydration_dev","target","div2","anchor","append_hydration_dev","div0","div1","t_value","dirty","set_data_dev","t","value","option_changes","length","i","each_blocks","each_value_1","data","getMods","mods","div","error","message","p","t1","t1_value","each_value","Array","perPage","create_if_block_3","create_if_block_2","totalPages","Math","ceil","fetching","div3","pagecontrols0_changes","pagecontrols1_changes","colCount","$$props","newMod","showSearch","client","getContextClient","search","$storePage","url","searchParams","get","order","Order","Desc","orderBy","ModFields","LastVersionDate","page","parseInt","totalMods","searchField","timer","click_handler","goto","clearTimeout","$$invalidate","setTimeout","Search","$$subscribe_mods","queryStore","query","GetModsDocument","variables","offset","limit","URL","window","location","origin","pathname","append","toString","keepFocus","$mods","count","gridClasses","orderFields"],"mappings":"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"}