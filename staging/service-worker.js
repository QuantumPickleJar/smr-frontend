const s=location.pathname.split("/").slice(0,-1).join("/"),l=[s+"/_app/immutable/entry/app.DFnxwlLw.js",s+"/_app/immutable/nodes/0.GMJ4GYAj.js",s+"/_app/immutable/assets/0.CCe9y1Fn.css",s+"/_app/immutable/nodes/1.hylYChfA.js",s+"/_app/immutable/nodes/10.Be42AsFV.js",s+"/_app/immutable/nodes/11.C6uGvHhq.js",s+"/_app/immutable/nodes/12.DoxpsV33.js",s+"/_app/immutable/nodes/13.DhgH19nH.js",s+"/_app/immutable/nodes/14.Cd4RkgHO.js",s+"/_app/immutable/assets/14.DGIivzJm.css",s+"/_app/immutable/nodes/15.CZ7EFgHs.js",s+"/_app/immutable/nodes/16.D8i3cGLp.js",s+"/_app/immutable/nodes/17.0_sek0rz.js",s+"/_app/immutable/nodes/18.CY7A224h.js",s+"/_app/immutable/nodes/19.6KQ3fAhI.js",s+"/_app/immutable/nodes/2.DWXlt_ZN.js",s+"/_app/immutable/assets/2.XYLHkkhT.css",s+"/_app/immutable/nodes/20.DV06NS1R.js",s+"/_app/immutable/assets/20.B8PWU8N1.css",s+"/_app/immutable/nodes/21.mTYIlvZh.js",s+"/_app/immutable/nodes/22.BBsPyPUx.js",s+"/_app/immutable/nodes/23.DqkQwta9.js",s+"/_app/immutable/assets/8.DfdhIHyO.css",s+"/_app/immutable/nodes/24.DB_BTtYv.js",s+"/_app/immutable/nodes/25.Ce9dhaaC.js",s+"/_app/immutable/nodes/26.Bthf2TYW.js",s+"/_app/immutable/nodes/27.DcNG4Or3.js",s+"/_app/immutable/nodes/3.DEQdEcg6.js",s+"/_app/immutable/assets/3.tHiLzZcV.css",s+"/_app/immutable/nodes/4.Cu2p1UGe.js",s+"/_app/immutable/nodes/5.DX2KPVh3.js",s+"/_app/immutable/nodes/6.CH0IadPg.js",s+"/_app/immutable/nodes/7.DRqzl-fL.js",s+"/_app/immutable/nodes/8.D9GK_85W.js",s+"/_app/immutable/nodes/9.DXhF_Q_H.js",s+"/_app/immutable/assets/AnnouncementRow.CbfVDtZE.css",s+"/_app/immutable/chunks/AnnouncementRow.e0KRv052.js",s+"/_app/immutable/chunks/CompatibilityModal.DJyusXCJ.js",s+"/_app/immutable/chunks/EditCompatibilityForm.B_NnXjai.js",s+"/_app/immutable/assets/FicsitCard.Bep6FE4g.css",s+"/_app/immutable/chunks/FicsitCard.CznZ1QvX.js",s+"/_app/immutable/chunks/GuideCard.By8Wgx_I.js",s+"/_app/immutable/assets/GuideForm.DcQdjkdL.css",s+"/_app/immutable/chunks/GuideForm.CgdPbmmn.js",s+"/_app/immutable/chunks/MetaDescriptors.CPVFpPTL.js",s+"/_app/immutable/chunks/ModCard.JAZ762L_.js",s+"/_app/immutable/chunks/ModCompatibilityEdit.CGth8UxI.js",s+"/_app/immutable/chunks/ModForm.DPwgbUDh.js",s+"/_app/immutable/chunks/Page404.DWDCxAKJ.js",s+"/_app/immutable/assets/TagList.C9F31gTP.css",s+"/_app/immutable/chunks/TagList.DdBe4WcG.js",s+"/_app/immutable/chunks/VersionDependenciesGrid.Bdh2uQfJ.js",s+"/_app/immutable/assets/VersionForm.fNMkQdp2.css",s+"/_app/immutable/chunks/VersionForm.DXOz6zRz.js",s+"/_app/immutable/chunks/api.Dn0ikjHb.js",s+"/_app/immutable/chunks/extras.DFAQw6KQ.js",s+"/_app/immutable/chunks/formatting.Btts8bTQ.js",s+"/_app/immutable/chunks/forms.7tQY_mGi.js",s+"/_app/immutable/chunks/forms.C-FaWw5i.js",s+"/_app/immutable/chunks/gql.DGDorg1Q.js",s+"/_app/immutable/chunks/graphql.Cba3EtNU.js",s+"/_app/immutable/chunks/jszip.DIk8huRY.js",s+"/_app/immutable/chunks/launcher.CYw7dXXK.js",s+"/_app/immutable/chunks/markdown.sjiy-QlO.js",s+"/_app/immutable/chunks/preload-helper.9YLJ1q38.js",s+"/_app/immutable/chunks/uplugin.whXItc1C.js",s+"/_app/immutable/chunks/user.vzXPlzoe.js",s+"/_app/immutable/assets/vendor.Cirlo5Z8.css",s+"/_app/immutable/chunks/vendor.BoXvEba7.js",s+"/_app/immutable/entry/start.C9ziYNdw.js",s+"/_app/immutable/chunks/custom_protocol.u56lozG6.js"],_=[s+"/assets/android-chrome-192x192.png",s+"/assets/android-chrome-512x512.png",s+"/assets/apple-touch-icon.png",s+"/assets/browserconfig.xml",s+"/assets/favicon-16x16.png",s+"/assets/favicon-32x32.png",s+"/assets/favicon.ico",s+"/assets/fonts/flow-rounded.woff",s+"/assets/mstile-150x150.png",s+"/assets/safari-pinned-tab.svg",s+"/images/Satisfactory_KeyArt_1_1024x1024_NoLogo.webp",s+"/images/bg_nologo.webp",s+"/images/dog_aw_yis_pats.gif",s+"/images/dog_boing.gif",s+"/images/dog_stand.gif",s+"/images/mods_mobile.webp",s+"/images/no_image.webp",s+"/images/satisfactory_logo_full_color_small.webp",s+"/images/sf_modding_logo.webp",s+"/images/smm_background.webp",s+"/images/smm_hand.webp",s+"/images/smm_icon_white.webp",s+"/manifest.json",s+"/robots.txt"],n="1723390229617",m=self,o=`cache${n}`,c=l.concat(_),b=new Set(c);m.addEventListener("install",a=>{a.waitUntil(caches.open(o).then(e=>e.addAll(c)).then(()=>{m.skipWaiting()}))});m.addEventListener("activate",a=>{a.waitUntil(caches.keys().then(async e=>{for(const t of e)t!==o&&await caches.delete(t);m.clients.claim()}))});async function d(a){const e=await caches.open(`offline${n}`);try{const t=await fetch(a);return e.put(a,t.clone()),t}catch(t){const p=await e.match(a);if(p)return p;throw t}}m.addEventListener("fetch",a=>{if(a.request.method!=="GET"||a.request.headers.has("range"))return;const e=new URL(a.request.url),t=e.protocol.startsWith("http"),p=e.hostname===self.location.hostname&&e.port!==self.location.port,i=e.host===self.location.host&&b.has(e.pathname),u=a.request.cache==="only-if-cached"&&!i;t&&!p&&!u&&i&&!a.request.url.includes("start")&&a.respondWith((async()=>i&&await caches.match(a.request)||d(a.request))())});
