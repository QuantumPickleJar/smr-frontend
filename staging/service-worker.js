const s=location.pathname.split("/").slice(0,-1).join("/"),l=[s+"/_app/immutable/entry/app.DbJKlWwH.js",s+"/_app/immutable/nodes/0.gzAUleU9.js",s+"/_app/immutable/assets/0.dzcNOYQ2.css",s+"/_app/immutable/nodes/1.CMjKvTVT.js",s+"/_app/immutable/nodes/10.csePwjeA.js",s+"/_app/immutable/nodes/11.C7tNK2JO.js",s+"/_app/immutable/nodes/12.ByNKSLs9.js",s+"/_app/immutable/nodes/13.CAXQq4vb.js",s+"/_app/immutable/nodes/14.B8hZNzdc.js",s+"/_app/immutable/assets/14.DGIivzJm.css",s+"/_app/immutable/nodes/15.Cl74oK78.js",s+"/_app/immutable/nodes/16.BHCVEI9y.js",s+"/_app/immutable/nodes/17.Cih5FElx.js",s+"/_app/immutable/nodes/18.B_NoFIRZ.js",s+"/_app/immutable/nodes/19.CtnfJb_w.js",s+"/_app/immutable/nodes/2.9hZxLp09.js",s+"/_app/immutable/assets/2.XYLHkkhT.css",s+"/_app/immutable/nodes/20.BkrPJWUy.js",s+"/_app/immutable/assets/20.B8PWU8N1.css",s+"/_app/immutable/nodes/21.CJAtuN42.js",s+"/_app/immutable/nodes/22.C1K8FULp.js",s+"/_app/immutable/nodes/23.D3DK8M-c.js",s+"/_app/immutable/assets/8.DfdhIHyO.css",s+"/_app/immutable/nodes/24.B_n7kMGo.js",s+"/_app/immutable/nodes/25.D7Rikhq_.js",s+"/_app/immutable/nodes/26.TMFkNY1D.js",s+"/_app/immutable/nodes/27.v_G6k-Kx.js",s+"/_app/immutable/nodes/3.CTZVIkpL.js",s+"/_app/immutable/assets/3.tHiLzZcV.css",s+"/_app/immutable/nodes/4.D-76yVmG.js",s+"/_app/immutable/nodes/5.Cm2SYtmq.js",s+"/_app/immutable/nodes/6.BOSsL0I9.js",s+"/_app/immutable/nodes/7.BOwar8pB.js",s+"/_app/immutable/nodes/8.BrXriXvv.js",s+"/_app/immutable/nodes/9.B4sKWtX6.js",s+"/_app/immutable/assets/AnnouncementRow.CbfVDtZE.css",s+"/_app/immutable/chunks/AnnouncementRow.CnYarrjv.js",s+"/_app/immutable/chunks/CompatibilityModal.C5BeLg_x.js",s+"/_app/immutable/chunks/EditCompatibilityForm.Bmus9Ayf.js",s+"/_app/immutable/assets/FicsitCard.Bep6FE4g.css",s+"/_app/immutable/chunks/FicsitCard.DDmdRMUd.js",s+"/_app/immutable/chunks/GuideCard.BnCf2hz1.js",s+"/_app/immutable/assets/GuideForm.DcQdjkdL.css",s+"/_app/immutable/chunks/GuideForm.CCEk3Txn.js",s+"/_app/immutable/chunks/MetaDescriptors.Dk86j0JW.js",s+"/_app/immutable/chunks/ModCard.CiUEZYSY.js",s+"/_app/immutable/chunks/ModCompatibilityEdit.BFUcb-TR.js",s+"/_app/immutable/chunks/ModForm._TOZHpV-.js",s+"/_app/immutable/chunks/Page404.DB2alQ4O.js",s+"/_app/immutable/assets/TagList.C9F31gTP.css",s+"/_app/immutable/chunks/TagList.d0JySYbg.js",s+"/_app/immutable/chunks/VersionDependenciesGrid.B1ZDPbBr.js",s+"/_app/immutable/assets/VersionForm.fNMkQdp2.css",s+"/_app/immutable/chunks/VersionForm.oBYpIfti.js",s+"/_app/immutable/chunks/api.Dn0ikjHb.js",s+"/_app/immutable/chunks/extras.DPJxjG2m.js",s+"/_app/immutable/chunks/formatting.DRqZGGFY.js",s+"/_app/immutable/chunks/forms.CukxqNdi.js",s+"/_app/immutable/chunks/forms.i7v-RSgj.js",s+"/_app/immutable/chunks/gql.DGDorg1Q.js",s+"/_app/immutable/chunks/graphql.CNu7qPRc.js",s+"/_app/immutable/chunks/jszip.CM-BH_2i.js",s+"/_app/immutable/chunks/launcher.CgKW4U-4.js",s+"/_app/immutable/chunks/markdown.2xrSPmrn.js",s+"/_app/immutable/chunks/preload-helper.9YLJ1q38.js",s+"/_app/immutable/chunks/uplugin.DwQz0c8w.js",s+"/_app/immutable/chunks/user.DK3YRETp.js",s+"/_app/immutable/assets/vendor.Cirlo5Z8.css",s+"/_app/immutable/chunks/vendor.DVZSdRiD.js",s+"/_app/immutable/entry/start.p2b6qnma.js",s+"/_app/immutable/chunks/custom_protocol.u56lozG6.js"],_=[s+"/assets/android-chrome-192x192.png",s+"/assets/android-chrome-512x512.png",s+"/assets/apple-touch-icon.png",s+"/assets/browserconfig.xml",s+"/assets/favicon-16x16.png",s+"/assets/favicon-32x32.png",s+"/assets/favicon.ico",s+"/assets/fonts/flow-rounded.woff",s+"/assets/mstile-150x150.png",s+"/assets/safari-pinned-tab.svg",s+"/images/Satisfactory_KeyArt_1_1024x1024_NoLogo.webp",s+"/images/bg_nologo.webp",s+"/images/dog_aw_yis_pats.gif",s+"/images/dog_boing.gif",s+"/images/dog_stand.gif",s+"/images/mods_mobile.webp",s+"/images/no_image.webp",s+"/images/satisfactory_logo_full_color_small.webp",s+"/images/sf_modding_logo.webp",s+"/images/smm_background.webp",s+"/images/smm_hand.webp",s+"/images/smm_icon_white.webp",s+"/manifest.json",s+"/robots.txt"],n="1726613584337",m=self,o=`cache${n}`,c=l.concat(_),b=new Set(c);m.addEventListener("install",a=>{a.waitUntil(caches.open(o).then(e=>e.addAll(c)).then(()=>{m.skipWaiting()}))});m.addEventListener("activate",a=>{a.waitUntil(caches.keys().then(async e=>{for(const t of e)t!==o&&await caches.delete(t);m.clients.claim()}))});async function r(a){const e=await caches.open(`offline${n}`);try{const t=await fetch(a);return e.put(a,t.clone()),t}catch(t){const p=await e.match(a);if(p)return p;throw t}}m.addEventListener("fetch",a=>{if(a.request.method!=="GET"||a.request.headers.has("range"))return;const e=new URL(a.request.url),t=e.protocol.startsWith("http"),p=e.hostname===self.location.hostname&&e.port!==self.location.port,i=e.host===self.location.host&&b.has(e.pathname),u=a.request.cache==="only-if-cached"&&!i;t&&!p&&!u&&i&&!a.request.url.includes("start")&&a.respondWith((async()=>i&&await caches.match(a.request)||r(a.request))())});
