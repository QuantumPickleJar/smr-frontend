const s=location.pathname.split("/").slice(0,-1).join("/"),l=[s+"/_app/immutable/entry/app.P6ptH9fU.js",s+"/_app/immutable/nodes/0.Ch3GYp8Q.js",s+"/_app/immutable/assets/0.Z0Ow6ygb.css",s+"/_app/immutable/nodes/1.Z34b7CUD.js",s+"/_app/immutable/nodes/10.CjE8p3TK.js",s+"/_app/immutable/nodes/11.DKusQHDb.js",s+"/_app/immutable/nodes/12.CP0j5LEb.js",s+"/_app/immutable/nodes/13.mIbZmNLS.js",s+"/_app/immutable/nodes/14.DaAQPInX.js",s+"/_app/immutable/assets/14.DGIivzJm.css",s+"/_app/immutable/nodes/15.D3xQeOKn.js",s+"/_app/immutable/nodes/16.D4oJyjzF.js",s+"/_app/immutable/nodes/17.D6lHaWT8.js",s+"/_app/immutable/nodes/18._lfnwjVz.js",s+"/_app/immutable/nodes/19.mHHEpj85.js",s+"/_app/immutable/nodes/2.CLfSs-2J.js",s+"/_app/immutable/assets/2.XYLHkkhT.css",s+"/_app/immutable/nodes/20.BbvE3pTi.js",s+"/_app/immutable/assets/20.B8PWU8N1.css",s+"/_app/immutable/nodes/21.C7m0YvLh.js",s+"/_app/immutable/nodes/22.ClUohgg5.js",s+"/_app/immutable/nodes/23.i1yukCFj.js",s+"/_app/immutable/assets/8.DfdhIHyO.css",s+"/_app/immutable/nodes/24.mLzOaQgf.js",s+"/_app/immutable/nodes/25.BWs6zAT1.js",s+"/_app/immutable/nodes/26.-QnEhieZ.js",s+"/_app/immutable/nodes/27.DJGvcNcp.js",s+"/_app/immutable/nodes/3.DjhCu0U5.js",s+"/_app/immutable/assets/3.tHiLzZcV.css",s+"/_app/immutable/nodes/4.YZwHcbJK.js",s+"/_app/immutable/nodes/5.DaIVp8WB.js",s+"/_app/immutable/nodes/6.C1C0RsqC.js",s+"/_app/immutable/nodes/7.CapXwxuD.js",s+"/_app/immutable/nodes/8.CymbB0Mh.js",s+"/_app/immutable/nodes/9.BwJ9C9gq.js",s+"/_app/immutable/assets/AnnouncementRow.CbfVDtZE.css",s+"/_app/immutable/chunks/AnnouncementRow.CyWSI_d-.js",s+"/_app/immutable/chunks/CompatibilityModal.SFpA2pBW.js",s+"/_app/immutable/chunks/EditCompatibilityForm.Dxo5DVUp.js",s+"/_app/immutable/assets/FicsitCard.Bep6FE4g.css",s+"/_app/immutable/chunks/FicsitCard.3X8NPGRe.js",s+"/_app/immutable/chunks/GuideCard.CBcGFUki.js",s+"/_app/immutable/assets/GuideForm.DcQdjkdL.css",s+"/_app/immutable/chunks/GuideForm.C_COz_PZ.js",s+"/_app/immutable/chunks/MetaDescriptors.C56Q6Igh.js",s+"/_app/immutable/chunks/ModCard.gTteF2KV.js",s+"/_app/immutable/chunks/ModCompatibilityEdit.CYRoOEIw.js",s+"/_app/immutable/chunks/ModForm.rd2Us5xO.js",s+"/_app/immutable/chunks/Page404.B61_TWmg.js",s+"/_app/immutable/assets/TagList.C9F31gTP.css",s+"/_app/immutable/chunks/TagList.B7U2lrS-.js",s+"/_app/immutable/chunks/VersionDependenciesGrid.DZJ51V2j.js",s+"/_app/immutable/assets/VersionForm.fNMkQdp2.css",s+"/_app/immutable/chunks/VersionForm.BgaPNKLx.js",s+"/_app/immutable/chunks/api.Dn0ikjHb.js",s+"/_app/immutable/chunks/extras.C2PIu-Dp.js",s+"/_app/immutable/chunks/formatting.CJGi6h9M.js",s+"/_app/immutable/chunks/forms.RKakS7hn.js",s+"/_app/immutable/chunks/forms.fVl8uRTi.js",s+"/_app/immutable/chunks/gql.DGDorg1Q.js",s+"/_app/immutable/chunks/graphql.DSJZyne3.js",s+"/_app/immutable/chunks/jszip.D968Ki4R.js",s+"/_app/immutable/chunks/launcher.8QK0dtSU.js",s+"/_app/immutable/chunks/markdown.CnK11Q6D.js",s+"/_app/immutable/chunks/preload-helper.9YLJ1q38.js",s+"/_app/immutable/chunks/uplugin.COk5SVKc.js",s+"/_app/immutable/chunks/user.BA6B47sv.js",s+"/_app/immutable/assets/vendor.Cirlo5Z8.css",s+"/_app/immutable/chunks/vendor.7c8pgPZR.js",s+"/_app/immutable/entry/start.BLxzeT6Z.js",s+"/_app/immutable/chunks/custom_protocol.u56lozG6.js"],b=[s+"/assets/android-chrome-192x192.png",s+"/assets/android-chrome-512x512.png",s+"/assets/apple-touch-icon.png",s+"/assets/browserconfig.xml",s+"/assets/favicon-16x16.png",s+"/assets/favicon-32x32.png",s+"/assets/favicon.ico",s+"/assets/fonts/flow-rounded.woff",s+"/assets/mstile-150x150.png",s+"/assets/safari-pinned-tab.svg",s+"/images/Satisfactory_KeyArt_1_1024x1024_NoLogo.webp",s+"/images/bg_nologo.webp",s+"/images/dog_aw_yis_pats.gif",s+"/images/dog_boing.gif",s+"/images/dog_stand.gif",s+"/images/mods_mobile.webp",s+"/images/no_image.webp",s+"/images/satisfactory_logo_full_color_small.webp",s+"/images/sf_modding_logo.webp",s+"/images/smm_background.webp",s+"/images/smm_hand.webp",s+"/images/smm_icon_white.webp",s+"/manifest.json",s+"/robots.txt"],n="1724796855912",p=self,o=`cache${n}`,c=l.concat(b),_=new Set(c);p.addEventListener("install",a=>{a.waitUntil(caches.open(o).then(e=>e.addAll(c)).then(()=>{p.skipWaiting()}))});p.addEventListener("activate",a=>{a.waitUntil(caches.keys().then(async e=>{for(const t of e)t!==o&&await caches.delete(t);p.clients.claim()}))});async function d(a){const e=await caches.open(`offline${n}`);try{const t=await fetch(a);return e.put(a,t.clone()),t}catch(t){const m=await e.match(a);if(m)return m;throw t}}p.addEventListener("fetch",a=>{if(a.request.method!=="GET"||a.request.headers.has("range"))return;const e=new URL(a.request.url),t=e.protocol.startsWith("http"),m=e.hostname===self.location.hostname&&e.port!==self.location.port,i=e.host===self.location.host&&_.has(e.pathname),u=a.request.cache==="only-if-cached"&&!i;t&&!m&&!u&&i&&!a.request.url.includes("start")&&a.respondWith((async()=>i&&await caches.match(a.request)||d(a.request))())});
