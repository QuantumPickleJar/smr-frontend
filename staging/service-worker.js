const s=location.pathname.split("/").slice(0,-1).join("/"),l=[s+"/_app/immutable/entry/app.DKa30Y-r.js",s+"/_app/immutable/nodes/0.C71XQ-jT.js",s+"/_app/immutable/assets/0.OpBn-yau.css",s+"/_app/immutable/nodes/1.Dm5M5ZDB.js",s+"/_app/immutable/nodes/10.DdWyg093.js",s+"/_app/immutable/nodes/11.DSgGOpse.js",s+"/_app/immutable/nodes/12.lBJjgsYi.js",s+"/_app/immutable/nodes/13.CAPUVvpS.js",s+"/_app/immutable/nodes/14.CS-HMz_Q.js",s+"/_app/immutable/assets/14.DGIivzJm.css",s+"/_app/immutable/nodes/15.B99Sslj4.js",s+"/_app/immutable/nodes/16.DThRZaOb.js",s+"/_app/immutable/nodes/17.BkLQp5A5.js",s+"/_app/immutable/nodes/18.D1OBWTqk.js",s+"/_app/immutable/nodes/19.CXKtfvBS.js",s+"/_app/immutable/nodes/2.DEoIfK-s.js",s+"/_app/immutable/assets/2.XYLHkkhT.css",s+"/_app/immutable/nodes/20.DIuTfb51.js",s+"/_app/immutable/assets/20.B8PWU8N1.css",s+"/_app/immutable/nodes/21.BJxmVScZ.js",s+"/_app/immutable/nodes/22.CkN-fLGx.js",s+"/_app/immutable/nodes/23.ttZhz_QG.js",s+"/_app/immutable/assets/8.DfdhIHyO.css",s+"/_app/immutable/nodes/24.CNgakEPc.js",s+"/_app/immutable/nodes/25.DuHr4xVn.js",s+"/_app/immutable/nodes/26.sRw9GqXb.js",s+"/_app/immutable/nodes/27.aM-EYynp.js",s+"/_app/immutable/nodes/3.yptb_dkD.js",s+"/_app/immutable/assets/3.tHiLzZcV.css",s+"/_app/immutable/nodes/4.9n17CLHq.js",s+"/_app/immutable/nodes/5.BO2bPc3F.js",s+"/_app/immutable/nodes/6.BmjUWser.js",s+"/_app/immutable/nodes/7.DruL2fCn.js",s+"/_app/immutable/nodes/8.CY6xYOGM.js",s+"/_app/immutable/nodes/9.PwkMqGsr.js",s+"/_app/immutable/assets/AnnouncementRow.CbfVDtZE.css",s+"/_app/immutable/chunks/AnnouncementRow.CQ_iNGG4.js",s+"/_app/immutable/chunks/CompatibilityModal.DOcGso-k.js",s+"/_app/immutable/chunks/EditCompatibilityForm.BZetNlNL.js",s+"/_app/immutable/assets/FicsitCard.Bep6FE4g.css",s+"/_app/immutable/chunks/FicsitCard.BrMD5jHM.js",s+"/_app/immutable/chunks/GuideCard.DjMc25Wq.js",s+"/_app/immutable/assets/GuideForm.DcQdjkdL.css",s+"/_app/immutable/chunks/GuideForm.D2tSMQuS.js",s+"/_app/immutable/chunks/MetaDescriptors.D0NYvWLN.js",s+"/_app/immutable/chunks/ModCard.bwCayxzL.js",s+"/_app/immutable/chunks/ModCompatibilityEdit.D7xewijE.js",s+"/_app/immutable/chunks/ModForm.DoWb7KKh.js",s+"/_app/immutable/chunks/Page404.BqwB3fIo.js",s+"/_app/immutable/assets/TagList.C9F31gTP.css",s+"/_app/immutable/chunks/TagList.NmNwdr7X.js",s+"/_app/immutable/chunks/VersionDependenciesGrid.BdN4yKRW.js",s+"/_app/immutable/assets/VersionForm.fNMkQdp2.css",s+"/_app/immutable/chunks/VersionForm.Uhbz4V9a.js",s+"/_app/immutable/chunks/api.Dn0ikjHb.js",s+"/_app/immutable/chunks/extras.BhxFtfQr.js",s+"/_app/immutable/chunks/formatting.CJGi6h9M.js",s+"/_app/immutable/chunks/forms.Cnw4u7vs.js",s+"/_app/immutable/chunks/forms.DvhDaKMN.js",s+"/_app/immutable/chunks/gql.DGDorg1Q.js",s+"/_app/immutable/chunks/graphql.DSJZyne3.js",s+"/_app/immutable/chunks/jszip.Dx1fgyEh.js",s+"/_app/immutable/chunks/launcher.r5LE3i6q.js",s+"/_app/immutable/chunks/markdown.Bcop294W.js",s+"/_app/immutable/chunks/preload-helper.9YLJ1q38.js",s+"/_app/immutable/chunks/uplugin.B2Y1xvd4.js",s+"/_app/immutable/chunks/user.CtalyaIJ.js",s+"/_app/immutable/assets/vendor.Cirlo5Z8.css",s+"/_app/immutable/chunks/vendor.BIiJoc3k.js",s+"/_app/immutable/entry/start.C_Fd4NI9.js",s+"/_app/immutable/chunks/custom_protocol.u56lozG6.js"],b=[s+"/assets/android-chrome-192x192.png",s+"/assets/android-chrome-512x512.png",s+"/assets/apple-touch-icon.png",s+"/assets/browserconfig.xml",s+"/assets/favicon-16x16.png",s+"/assets/favicon-32x32.png",s+"/assets/favicon.ico",s+"/assets/fonts/flow-rounded.woff",s+"/assets/mstile-150x150.png",s+"/assets/safari-pinned-tab.svg",s+"/images/Satisfactory_KeyArt_1_1024x1024_NoLogo.webp",s+"/images/bg_nologo.webp",s+"/images/dog_aw_yis_pats.gif",s+"/images/dog_boing.gif",s+"/images/dog_stand.gif",s+"/images/mods_mobile.webp",s+"/images/no_image.webp",s+"/images/satisfactory_logo_full_color_small.webp",s+"/images/sf_modding_logo.webp",s+"/images/smm_background.webp",s+"/images/smm_hand.webp",s+"/images/smm_icon_white.webp",s+"/manifest.json",s+"/robots.txt"],n="1726494324876",p=self,o=`cache${n}`,c=l.concat(b),_=new Set(c);p.addEventListener("install",a=>{a.waitUntil(caches.open(o).then(e=>e.addAll(c)).then(()=>{p.skipWaiting()}))});p.addEventListener("activate",a=>{a.waitUntil(caches.keys().then(async e=>{for(const t of e)t!==o&&await caches.delete(t);p.clients.claim()}))});async function r(a){const e=await caches.open(`offline${n}`);try{const t=await fetch(a);return e.put(a,t.clone()),t}catch(t){const m=await e.match(a);if(m)return m;throw t}}p.addEventListener("fetch",a=>{if(a.request.method!=="GET"||a.request.headers.has("range"))return;const e=new URL(a.request.url),t=e.protocol.startsWith("http"),m=e.hostname===self.location.hostname&&e.port!==self.location.port,i=e.host===self.location.host&&_.has(e.pathname),u=a.request.cache==="only-if-cached"&&!i;t&&!m&&!u&&i&&!a.request.url.includes("start")&&a.respondWith((async()=>i&&await caches.match(a.request)||r(a.request))())});
