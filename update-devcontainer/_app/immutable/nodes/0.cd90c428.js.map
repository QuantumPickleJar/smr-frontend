{"version":3,"mappings":"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","names":["initializeGraphQLClient","fetch","createClient","url","API_GRAPHQL","exchanges","cacheExchange","schema","keys","GetMods","LatestVersions","UserMod","GetGuides","OAuthOptions","UserRoles","Compatibility","CompatibilityInfo","VersionTarget","VersionDependency","updates","Mutation","_result","args","cache","invalidate","__typename","id","guideId","modId","versionId","smlVersionId","authExchange","async","utils","operation","appendHeaders","Authorization","get","userToken","error","message","indexOf","persistedExchange","preferGetForPersistedQueries","fetchExchange","prerender","load","e","client","chainer","Tolgee","use","FormatSimple","LanguageDetector","DevTools","tolgee","init","defaultNs","defaultLanguage","fallbackLanguage","apiUrl","PUBLIC_TOLGEE_API_URL","apiKey","PUBLIC_TOLGEE_API_KEY","staticData","deCommon","enCommon","frCommon","itCommon","lvCommon","mtCommon","nlCommon","ruCommon","zhHansCommon","zhHantCommon","t0_value","ctx","t2_value","t4_value","insert_hydration_dev","target","button0","anchor","button1","button2","dirty","set_data_dev","t0","t2","t4","p","t1","t1_value","div","current","fetching","div2","append_hydration_dev","h2","div1","div0","signingIn","$$props","t","getTranslate","getContextClient","goTo","service","localStorage","setItem","goto","conicStops","color","start","end","oauthOptions","queryStore","query","GetOAuthOptionsDocument","variables","callback_url","encodeURIComponent","window","location","origin","pathname","requestPolicy","$oauthOptions","data","getOAuthOptions","github","google","facebook","toastStore","getToastStore","getMe","GetMeDocument","pause","first","subscribe","token","oneMonth","Date","getTime","cookie","set","domain","hostname","expires","mutation","LogoutDocument","undefined","toPromise","catch","then","remove","resume","unsub","response","console","user","signInMethods","OAuthGithubDocument","OAuthGoogleDocument","OAuthFacebookDocument","writable","loginModal","derived","val","type","component","ref","LoginModal","props","modalStore","getModalStore","signInMethod","getItem","removeItem","queryParams","Object","fromEntries","$page","searchParams","entries","length","URLSearchParams","search","code","state","trigger","result","background","autohide","session","close","username","t6_value","create_if_block_3","attr_dev","div0_style_value","avatar","span0","span1","t6","button","icon","label","a","a_href_value","external","create_if_block_1","li","create_if_block","t9_value","create_if_block_2","i","nav0","ul0","hr","nav1","ul1","nav2","ul2","li0","li1","span2","t9","accessibility","click_handler","base","click_handler_2","$user","preloadData","item","value","currentPath","$$invalidate","isAdmin","roles","approveMods","approveVersions","editSMLVersions","top","$t","bottom","div2_class_value","span","b","monospacePrefix","iconNames","AnnouncementImportance","Info","Alert","Warning","Fix","backgroundColors","importance","isMonospace","startsWith","finalMessage","replaceAll","getAnnouncements","each_blocks","announcementrow_changes","announcements","GetAnnouncementsDocument","name","flag","toggle_class","nav","ul","getTolgee","languages","en","de","fr","it","lv","mt","nl","ru","lang","$tolgee","getLanguage","l","changeLanguage","languageMenuBox","event","placement","closeQuery","k","pingLauncher","t8_value","div1_style_value","div4","div3","li2","button3","t8","drawerStore","getDrawerStore","userMenuBox","openSidebar","open","width","script0","script0_src_value","script1","main","aside","document_1","head","link0","link1","link2","link3","link4","link5","link6","meta0","meta1","meta2","link7","initializeStores","storePopup","computePosition","autoUpdate","offset","shift","flip","arrow","gTag","PUBLIC_GOOGLE_SITE_TAG","root","onMount","document","body","n","b8","on","cookieconsent","initialise","palette","popup","content","link","dismiss","theme","position","customProtocolCheck","import","toLocaleLowerCase","hasLauncher","toString","setContextClient","classList","add"],"sources":["../../../../../../src/lib/core/graphql.ts","../../../../../../src/routes/+layout.ts","../../../../../../src/lib/modals/LoginModal.svelte","../../../../../../src/lib/components/auth/LoginDialog.svelte","../../../../../../src/lib/components/general/Sidebar.svelte","../../../../../../src/lib/components/announcements/AnnouncementRow.svelte","../../../../../../src/lib/components/announcements/AnnouncementHeader.svelte","../../../../../../src/lib/components/general/TranslationDropdown.svelte","../../../../../../src/lib/components/general/TopBar.svelte","../../../../../../src/routes/+layout.svelte"],"sourcesContent":["import schema from '$lib/generated/graphql.schema.urql.json';\nimport { createClient, fetchExchange, type Client } from '@urql/svelte';\nimport { cacheExchange } from '@urql/exchange-graphcache';\nimport { persistedExchange } from '@urql/exchange-persisted';\nimport { API_GRAPHQL } from './api';\nimport { userToken } from '$lib/stores/user';\nimport { authExchange } from '@urql/exchange-auth';\nimport type { LoadEvent } from '@sveltejs/kit';\nimport { get } from 'svelte/store';\n\nexport const initializeGraphQLClient = (fetch?: LoadEvent['fetch']): Client =>\n  createClient({\n    url: API_GRAPHQL,\n    fetch,\n    exchanges: [\n      cacheExchange({\n        schema,\n        keys: {\n          GetMods: () => null,\n          LatestVersions: () => null,\n          UserMod: () => null,\n          GetGuides: () => null,\n          OAuthOptions: () => null,\n          UserRoles: () => null,\n          Compatibility: () => null,\n          CompatibilityInfo: () => null,\n          VersionTarget: () => null,\n          VersionDependency: () => null\n        },\n        updates: {\n          Mutation: {\n            deleteGuide(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Guide',\n                id: args.guideId as string\n              });\n            },\n            deleteMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            approveMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            denyMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            approveVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            denyVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            deleteSMLVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'SMLVersion',\n                id: args.smlVersionId as string\n              });\n            },\n            deleteVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            updateVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            }\n          }\n        }\n      }),\n      authExchange(async (utils) => ({\n        addAuthToOperation(operation) {\n          return utils.appendHeaders(operation, {\n            Authorization: get(userToken)\n          });\n        },\n        didAuthError(error) {\n          return error.message.indexOf('user not logged in') >= 0;\n        },\n        async refreshAuth() {\n          // Token cannot be refreshed currently\n        }\n      })),\n      persistedExchange({\n        preferGetForPersistedQueries: true\n      }),\n      fetchExchange\n    ]\n  });\n","import type { LayoutLoad } from './$types';\nimport { initializeGraphQLClient } from '$lib/core';\nimport { DevTools, FormatSimple, LanguageDetector, Tolgee } from '@tolgee/svelte';\nimport { browser } from '$app/environment';\nimport { PUBLIC_TOLGEE_API_KEY, PUBLIC_TOLGEE_API_URL } from '$env/static/public';\n\nimport deCommon from '../i18n/common/de.json';\nimport enCommon from '../i18n/common/en.json';\nimport frCommon from '../i18n/common/fr.json';\nimport itCommon from '../i18n/common/it.json';\nimport lvCommon from '../i18n/common/lv.json';\nimport mtCommon from '../i18n/common/mt.json';\nimport nlCommon from '../i18n/common/nl.json';\nimport ruCommon from '../i18n/common/ru.json';\nimport zhHansCommon from '../i18n/common/zh-Hans.json';\nimport zhHantCommon from '../i18n/common/zh-Hant.json';\n\nexport const prerender = 'auto';\n\nexport const load: LayoutLoad = async ({ fetch }) => {\n  const client = initializeGraphQLClient(fetch);\n\n  let chainer = Tolgee().use(FormatSimple());\n\n  if (browser) {\n    chainer = chainer.use(LanguageDetector()).use(DevTools());\n  }\n\n  const tolgee = chainer.init({\n    defaultNs: 'common',\n\n    defaultLanguage: 'en',\n    fallbackLanguage: 'en',\n\n    apiUrl: browser ? PUBLIC_TOLGEE_API_URL : undefined,\n    apiKey: browser ? PUBLIC_TOLGEE_API_KEY : undefined,\n\n    staticData: {\n      'de:common': deCommon,\n      'en:common': enCommon,\n      'fr:common': frCommon,\n      'it:common': itCommon,\n      'lv:common': lvCommon,\n      'mt:common': mtCommon,\n      'nl:common': nlCommon,\n      'ru:common': ruCommon,\n      'zh-Hans:common': zhHansCommon,\n      'zh-Hant:common': zhHantCommon\n    }\n  });\n\n  if (!browser) {\n    await tolgee.run();\n  }\n\n  return {\n    client,\n    tolgee\n  };\n};\n","<script lang=\"ts\">\n  import { getTranslate } from '@tolgee/svelte';\n  import { goto } from '$app/navigation';\n  import { ConicGradient, type ConicStop } from '@skeletonlabs/skeleton';\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { GetOAuthOptionsDocument } from '$lib/generated';\n  import { browser } from '$app/environment';\n\n  export let signingIn = false;\n\n  export const { t } = getTranslate();\n\n  const client = getContextClient();\n\n  const goTo = (service: string, url: string) => {\n    localStorage.setItem('sign.in.method', service);\n    goto(url);\n  };\n\n  const conicStops: ConicStop[] = [\n    { color: 'transparent', start: 0, end: 25 },\n    { color: 'rgb(var(--color-primary-500))', start: 75, end: 100 }\n  ];\n\n  const oauthOptions = queryStore({\n    query: GetOAuthOptionsDocument,\n    client,\n    variables: { callback_url: browser ? encodeURIComponent(window.location.origin + window.location.pathname) : '' },\n    requestPolicy: 'network-only'\n  });\n</script>\n\n<div class=\"card p-4 flex flex-col gap-2\">\n  <h2 class=\"text-2xl\">{$t('user.sign-in')} / {$t('user.sign-up')}</h2>\n  <div>\n    <div class=\"grid grid-flow-row gap-4\">\n      {#if signingIn}\n        <p>{$t('user.logging-in')}...</p>\n        <div class=\"flex justify-center\">\n          <ConicGradient stops={conicStops} spin>Loading</ConicGradient>\n        </div>\n      {:else if $oauthOptions.fetching}\n        <!-- TODO Placeholders -->\n        <p>{$t('loading')}...</p>\n      {:else if $oauthOptions.error}\n        <p>Oh no... {$oauthOptions.error.message}</p>\n      {:else}\n        <button\n          class=\"btn variant-ghost-primary\"\n          on:click={() => goTo('github', $oauthOptions.data.getOAuthOptions.github)}>\n          {$t('login-dialog.sign-in-with-github')}\n        </button>\n        <button\n          class=\"btn variant-ghost-primary\"\n          on:click={() => goTo('google', $oauthOptions.data.getOAuthOptions.google)}>\n          {$t('login-dialog.sign-in-with-google')}\n        </button>\n        <button\n          class=\"btn variant-ghost-primary\"\n          on:click={() => goTo('facebook', $oauthOptions.data.getOAuthOptions.facebook)}>\n          {$t('login-dialog.sign-in-with-facebook')}\n        </button>\n      {/if}\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import {\n    GetMeDocument,\n    OAuthFacebookDocument,\n    OAuthGithubDocument,\n    OAuthGoogleDocument,\n    LogoutDocument\n  } from '$lib/generated';\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { browser } from '$app/environment';\n  import { page } from '$app/stores';\n  import { user, userToken } from '$lib/stores/user';\n  import cookie from 'js-cookie';\n  import { getTranslate } from '@tolgee/svelte';\n  import { getModalStore, getToastStore, type ModalSettings } from \"@skeletonlabs/skeleton\";\n  import LoginModal from '$lib/modals/LoginModal.svelte';\n  import { derived, get, writable } from \"svelte/store\";\n\n  const client = getContextClient();\n\n  const toastStore = getToastStore();\n\n  export const { t } = getTranslate();\n\n  if (browser) {\n    const getMe = queryStore({\n      query: GetMeDocument,\n      client,\n      variables: {},\n      requestPolicy: 'network-only',\n      pause: true\n    });\n\n    let first = true;\n    userToken.subscribe((token) => {\n      if (token) {\n        const oneMonth = new Date(new Date().getTime() + 30 * 24 * 60 * 60 * 1000);\n        cookie.set('token', token, {\n          domain: window.location.hostname,\n          expires: oneMonth\n        });\n      } else if (!first) {\n        client\n          .mutation(LogoutDocument, undefined, {\n            requestPolicy: 'network-only'\n          })\n          .toPromise()\n          .catch()\n          .then(() => {\n            cookie.remove('token');\n          });\n      }\n\n      first = false;\n\n      if (token) {\n        getMe.pause();\n        getMe.resume();\n\n        const unsub = getMe.subscribe((response) => {\n          if (!response.fetching) {\n            if (response.error) {\n              console.error(response.error.message);\n              unsub();\n            } else if (response.data) {\n              user.set(response.data.getMe);\n              unsub();\n            }\n          }\n        });\n      } else {\n        user.set(null);\n      }\n    });\n  }\n\n  const signInMethods = {\n    github: OAuthGithubDocument,\n    google: OAuthGoogleDocument,\n    facebook: OAuthFacebookDocument\n  };\n\n  const signingIn = writable(false);\n  const loginModal = derived(signingIn, (val) => ({\n      type: 'component',\n      component: {\n        ref: LoginModal,\n        props: {\n          signingIn: val\n        }\n      }\n    } satisfies ModalSettings))\n\n  const modalStore = getModalStore();\n\n  if (browser) {\n    const signInMethod = localStorage.getItem('sign.in.method');\n    localStorage.removeItem('sign.in.method');\n\n    let queryParams = Object.fromEntries($page.url.searchParams.entries());\n    if (Object.keys(queryParams).length === 0) {\n      queryParams = Object.fromEntries(new URLSearchParams(window.location.search));\n    }\n\n    const code = queryParams.code;\n    const state = queryParams.state;\n\n    if (signInMethod && code && state) {\n      signingIn.set(true);\n      modalStore.trigger(get(loginModal));\n\n      client\n        .mutation(signInMethods[signInMethod as 'github' | 'google' | 'facebook'], {\n          code,\n          state\n        })\n        .toPromise()\n        .then((result) => {\n          if (result.error) {\n            console.error(result.error.message);\n            toastStore.trigger({\n              message: 'Error logging in: ' + result.error.message,\n              background: 'variant-filled-error',\n              autohide: false\n            });\n          } else {\n            userToken.set(result.data.session.token);\n            modalStore.close();\n          }\n        })\n        .catch()\n        .then(() => signingIn.set(false));\n    }\n  }\n</script>\n","<script lang=\"ts\">\n  import { getModalStore, SlideToggle } from '@skeletonlabs/skeleton';\n  import { goto, preloadData } from '$app/navigation';\n  import { base } from '$app/paths';\n  import { page } from '$app/stores';\n  import { user, userToken } from '$lib/stores/user';\n  import { getTranslate } from '@tolgee/svelte';\n  import LoginModal from '$lib/modals/LoginModal.svelte';\n\n  export let accessibility: boolean;\n\n  export const { t } = getTranslate();\n\n  $: currentPath = $page.url.pathname;\n  $: isAdmin = !$user ? false : $user.roles.approveMods || $user.roles.approveVersions || $user.roles.editSMLVersions;\n\n  $: top = [\n    {\n      url: base + '/',\n      icon: 'home',\n      label: $t('sidebar.home')\n    },\n    {\n      url: base + '/mods',\n      icon: 'extension',\n      label: $t('sidebar.mods')\n    },\n    {\n      url: base + '/guides',\n      icon: 'description',\n      label: $t('sidebar.guides')\n    },\n    {\n      url: base + '/sml-versions',\n      icon: 'lightbulb',\n      label: $t('sidebar.sml-versions')\n    },\n    {\n      url: base + '/tools',\n      icon: 'apps',\n      label: $t('sidebar.tools')\n    },\n    {\n      url: 'https://discord.gg/xkVJ73E',\n      icon: 'people',\n      label: $t('discord'),\n      external: true\n    },\n    {\n      url: 'https://docs.ficsit.app/',\n      icon: 'find_in_page',\n      label: $t('sidebar.docs'),\n      external: true\n    },\n    {\n      url: 'https://forums.ficsit.app/',\n      icon: 'forum',\n      label: $t('sidebar.forums'),\n      external: true\n    }\n  ];\n\n  $: bottom = [\n    {\n      url: base + '/help',\n      icon: 'help',\n      label: $t('sidebar.help')\n    },\n    {\n      url: base + '/content-policy',\n      icon: 'verified_user',\n      label: $t('content-policy')\n    },\n    {\n      url: base + '/privacy-policy',\n      icon: 'policy',\n      label: $t('sidebar.privacy-policy')\n    },\n    {\n      url: base + '/tos',\n      icon: 'gavel',\n      label: $t('sidebar.tos')\n    },\n    {\n      url: base + '/api-docs',\n      icon: 'api',\n      label: $t('sidebar.api')\n    },\n    {\n      url: 'https://github.com/satisfactorymodding',\n      icon: 'source',\n      label: $t('sidebar.github'),\n      external: true\n    }\n  ];\n\n  const modalStore = getModalStore();\n</script>\n\n<div class=\"p-4 overflow-y-auto flex flex-col justify-between h-full max-w-xl\">\n  <div class=\"flex flex-col h-full max-w-xl gap-4\">\n    <nav class=\"list-nav xl:hidden\">\n      <ul>\n        {#if $user === null}\n          <button\n            on:click={() =>\n              modalStore.trigger({\n                type: 'component',\n                component: {\n                  ref: LoginModal\n                }\n              })}\n            class=\"w-full\">\n            <span class=\"material-icons\">login</span>\n            <span>{$t('user.sign-in')}</span>\n          </button>\n        {:else}\n          {#if isAdmin}\n            <button on:click={() => goto(base + '/admin')} class=\"w-full\">\n              <span class=\"material-icons\">admin_panel_settings</span>\n              <span>Admin</span>\n            </button>\n          {/if}\n          <button class=\"grid grid-flow-col w-full\" on:click={() => goto(base + '/user/' + $user.id)}>\n            <div class=\"rounded-full bg-cover w-7 h-7\" style={`background-image: url(\"${$user.avatar}\")`} />\n            <div>{$user.username}</div>\n          </button>\n\n          <button on:click={() => userToken.set(null)} class=\"w-full\">\n            <span class=\"material-icons\">logout</span>\n            <span>{$t('user.logout')}</span>\n          </button>\n        {/if}\n      </ul>\n    </nav>\n\n    <div class=\"xl:hidden\">\n      <hr />\n    </div>\n\n    <nav class=\"list-nav\">\n      <ul>\n        {#each top as item}\n          <li>\n            {#if !item.external}\n              <a\n                href={item.url}\n                class:bg-primary-active-token={currentPath === item.url}\n                on:mouseover={() => preloadData(item.url)}\n                on:focus={() => preloadData(item.url)}>\n                <span class=\"material-icons\">{item.icon}</span>\n                <span class=\"flex-auto\">{item.label}</span>\n              </a>\n            {:else}\n              <a href={item.url} target=\"_blank\" rel=\"noopener\">\n                <span class=\"material-icons\">{item.icon}</span>\n                <span class=\"flex-auto\">{item.label}</span>\n              </a>\n            {/if}\n          </li>\n        {/each}\n      </ul>\n    </nav>\n  </div>\n\n  <nav class=\"list-nav\">\n    <ul>\n      {#each bottom as item}\n        <li>\n          {#if !item.external}\n            <a\n              href={item.url}\n              class:bg-primary-active-token={currentPath === item.url}\n              on:mouseover={() => preloadData(item.url)}\n              on:focus={() => preloadData(item.url)}>\n              <span class=\"material-icons\">{item.icon}</span>\n              <span class=\"flex-auto\">{item.label}</span>\n            </a>\n          {:else}\n            <a href={item.url} target=\"_blank\" rel=\"noopener\">\n              <span class=\"material-icons\">{item.icon}</span>\n              <span class=\"flex-auto\">{item.label}</span>\n            </a>\n          {/if}\n        </li>\n      {/each}\n\n      <li class=\"xl:hidden\">\n        <a target=\"_blank\" href=\"https://smm.ficsit.app\" rel=\"noopener\">\n          <span class=\"material-icons\">file_download</span>\n          <span class=\"flex-auto\">{$t('sidebar.mod-manager')}</span>\n        </a>\n      </li>\n\n      <li class=\"flex flex-row items-center justify-center gap-4 px-3 pt-2\">\n        <SlideToggle\n          bind:checked={accessibility}\n          aria-label=\"Accessibility Font\"\n          name=\"accessibility_font\"\n          size=\"sm\"\n          active=\"bg-primary-500\" />\n        <span>{$t('sidebar.accessibility-font')}</span>\n      </li>\n    </ul>\n  </nav>\n</div>\n","<script lang=\"ts\">\n  import { AnnouncementImportance } from '$lib/generated';\n\n  const iconNames: { [key in AnnouncementImportance]: string } = {\n    [AnnouncementImportance.Info]: 'info',\n    [AnnouncementImportance.Alert]: 'error',\n    [AnnouncementImportance.Warning]: 'warning',\n    [AnnouncementImportance.Fix]: 'build_circle'\n  };\n  const backgroundColors: { [key in AnnouncementImportance]: string } = {\n    [AnnouncementImportance.Info]: 'bg-sky-500',\n    [AnnouncementImportance.Alert]: 'bg-red-600',\n    [AnnouncementImportance.Warning]: 'bg-yellow-400',\n    [AnnouncementImportance.Fix]: 'bg-green-600'\n  };\n  const monospacePrefix = 'monotext:';\n\n  export let message: string;\n  export let importance: AnnouncementImportance;\n\n  // Enables making monospace announcements\n  $: isMonospace = message.startsWith(monospacePrefix);\n  $: finalMessage = isMonospace ? message.replaceAll(monospacePrefix, '') : message;\n</script>\n\n<div class=\"{backgroundColors[importance]} max-h-64 overflow-hidden rounded-sm\">\n  <div class=\"p-1 striped text-black\">\n    <span class=\"material-icons text-2xl align-middle\">{iconNames[importance]}</span>\n    <div\n      class=\"align-middle text-l inline-block break-words max-w-full\"\n      class:font-mono={isMonospace}\n      class:whitespace-pre={isMonospace}>\n      <b>{importance}: </b>{finalMessage}\n    </div>\n  </div>\n</div>\n\n<style>\n  .striped {\n    background: repeating-linear-gradient(\n      45deg,\n      transparent,\n      transparent 14px,\n      rgba(60, 60, 60, 0.1) 14px,\n      rgba(60, 60, 60, 0.1) 28px\n    );\n  }\n</style>\n","<script lang=\"ts\">\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { AnnouncementImportance, GetAnnouncementsDocument } from '$lib/generated';\n  import AnnouncementRow from './AnnouncementRow.svelte';\n\n  const client = getContextClient();\n\n  const announcements = queryStore({\n    query: GetAnnouncementsDocument,\n    client,\n    variables: {}\n  });\n</script>\n\n{#if $announcements.fetching}\n  <!-- Display nothing, don't disrupt the page for no reason -->\n{:else if $announcements.error}\n  <AnnouncementRow\n    message=\"Failed to load announcements: {$announcements.error.message}\"\n    importance={AnnouncementImportance.Warning} />\n{:else if $announcements && $announcements.data && $announcements.data.getAnnouncements}\n  <div class=\"max-h-96 overflow-y-auto flex flex-col gap-2 mr-3 mt-3 ml-3 xl:ml-0 mb-3 xl:mb-0\">\n    {#each $announcements?.data?.getAnnouncements as announcement}\n      <AnnouncementRow message={announcement.message} importance={announcement.importance} />\n    {/each}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import { getTolgee, getTranslate } from '@tolgee/svelte';\n  import { writable } from 'svelte/store';\n  import { type PopupSettings, popup } from '@skeletonlabs/skeleton';\n  import { browser } from \"$app/environment\";\n\n  const tolgee = getTolgee(['language']);\n\n  export const { t } = getTranslate();\n\n  const languages = {\n    en: {\n      name: 'English',\n      flag: '🇺🇳'\n    },\n    de: {\n      name: 'Deutsch',\n      flag: '🇩🇪'\n    },\n    fr: {\n      name: 'Français',\n      flag: '🇫🇷'\n    },\n    it: {\n      name: 'Italiano',\n      flag: '🇮🇹'\n    },\n    lv: {\n      name: 'Latviešu',\n      flag: '🇱🇻'\n    },\n    mt: {\n      name: 'Malti',\n      flag: '🇲🇹'\n    },\n    nl: {\n      name: 'Nederlands',\n      flag: '🇳🇱'\n    },\n    ru: {\n      name: 'Pусский',\n      flag: '🇷🇺'\n    },\n    'zh-Hans': {\n      name: '简体中文',\n      flag: '🇨🇳'\n    },\n    'zh-Hant': {\n      name: '繁體中文',\n      flag: '🇹🇼'\n    }\n  } as const;\n\n  const lang = writable<string>(browser && localStorage.getItem('language') || $tolgee.getLanguage());\n  lang.subscribe((l) => {\n    $tolgee.changeLanguage(l);\n    if (browser) {\n      localStorage.setItem('language', l);\n    }\n  });\n\n  const languageMenuBox: PopupSettings = {\n    event: 'focus-click',\n    target: 'languageMenuBox',\n    placement: 'bottom',\n    closeQuery: 'li'\n  };\n</script>\n\n<button class=\"grid grid-flow-col btn btn-sm variant-ghost-primary\" use:popup={languageMenuBox}>\n  <span>{languages[$lang].name}</span>\n  <span class=\"text-xl\">{languages[$lang].flag}</span>\n</button>\n\n<div class=\"card w-48 shadow-xl py-2\" data-popup=\"languageMenuBox\">\n  <nav class=\"list-nav\">\n    <ul>\n      {#each Object.entries(languages) as [k, v]}\n        <li class:bg-primary-active-token={$lang === k}>\n          <button class=\"w-full\" on:click={() => lang.set(k)}>\n            <span>{v.name}</span>\n            <span class=\"text-xl text-white\">{v.flag}</span>\n          </button>\n        </li>\n      {/each}\n    </ul>\n  </nav>\n  <div class=\"arrow bg-surface-100-800-token\" />\n</div>\n","<script lang=\"ts\">\n  import { hasLauncher, pingLauncher } from '$lib/stores/launcher';\n  import { user, userToken } from '$lib/stores/user';\n  import { goto } from '$app/navigation';\n  import { base } from '$app/paths';\n  import TranslationDropdown from '$lib/components/general/TranslationDropdown.svelte';\n  import { getTranslate } from '@tolgee/svelte';\n  import { AppBar, type PopupSettings, popup, getDrawerStore, getModalStore } from '@skeletonlabs/skeleton';\n  import LoginModal from '$lib/modals/LoginModal.svelte';\n\n  $: isAdmin = !$user ? false : $user.roles.approveMods || $user.roles.approveVersions || $user.roles.editSMLVersions;\n\n  export const { t } = getTranslate();\n\n  const drawerStore = getDrawerStore();\n\n  const userMenuBox: PopupSettings = {\n    event: 'focus-click',\n    target: 'userMenuBox',\n    placement: 'bottom',\n    closeQuery: 'li'\n  };\n\n  const modalStore = getModalStore();\n\n  const openSidebar = () => {\n    drawerStore.open({\n      width: 'w-[280px]',\n    });\n  }\n</script>\n\n<AppBar variant=\"static\">\n  <svelte:fragment slot=\"lead\">\n    <button class=\"material-icons xl:hidden btn-sm\" on:click={openSidebar}>menu</button>\n    <span class=\"text-lg\">{$t('top-bar.title')}</span>\n  </svelte:fragment>\n\n  <svelte:fragment slot=\"trail\">\n    <div class=\"hidden xl:flex xl:gap-3\">\n      <TranslationDropdown />\n\n      {#if $hasLauncher}\n        <button class=\"btn btn-sm variant-ghost-primary\" on:click={pingLauncher}>\n          <span>Launcher Detected</span>\n          <span class=\"material-icons\">file_download</span>\n        </button>\n      {:else}\n        <a class=\"btn btn-sm variant-ghost-primary\" target=\"_blank\" rel=\"noopener\" href=\"https://smm.ficsit.app\">\n          <span>Mod Manager</span>\n          <span class=\"material-icons\">file_download</span>\n        </a>\n      {/if}\n\n      {#if $user === null}\n        <button\n          class=\"btn btn-sm variant-ghost-primary\"\n          on:click={() =>\n            modalStore.trigger({\n              type: 'component',\n              component: {\n                ref: LoginModal\n              }\n            })}>\n          <span>{$t('user.sign-in')}</span>\n          <span class=\"material-icons\">login</span>\n        </button>\n      {:else}\n        {#if isAdmin}\n          <button class=\"btn btn-sm variant-ghost-primary\" on:click={() => goto(base + '/admin')}>\n            <span>Admin</span>\n            <span class=\"material-icons\">admin_panel_settings</span>\n          </button>\n        {/if}\n\n        <div>\n          <button class=\"grid grid-flow-col btn btn-sm variant-ghost-primary\" use:popup={userMenuBox}>\n            <div>{$user.username}</div>\n            <div class=\"rounded-full bg-cover w-7 h-7\" style={`background-image: url(\"${$user.avatar}\")`} />\n          </button>\n\n          <div class=\"card w-48 shadow-xl py-2\" data-popup=\"userMenuBox\">\n            <nav class=\"list-nav\">\n              <ul>\n                <li>\n                  <button class=\"w-full\" on:click={() => goto(base + '/user/' + $user.id)}>\n                    <span>{$t('top-bar.user.profile')}</span>\n                  </button>\n                </li>\n                <li>\n                  <button class=\"w-full\" on:click={() => goto(base + '/settings')}>\n                    <span>{$t('top-bar.user.settings')}</span>\n                  </button>\n                </li>\n                <li>\n                  <button class=\"w-full\" on:click={() => userToken.set(null)}>\n                    <span>{$t('user.logout')}</span>\n                  </button>\n                </li>\n              </ul>\n            </nav>\n            <div class=\"arrow bg-surface-100-800-token\" />\n          </div>\n        </div>\n      {/if}\n    </div>\n  </svelte:fragment>\n</AppBar>\n","<script lang=\"ts\">\n  import LoginDialog from '$lib/components/auth/LoginDialog.svelte';\n  import { setContextClient } from '@urql/svelte';\n  import { onMount } from 'svelte';\n  import { customProtocolCheck, hasLauncher } from '$lib/stores/launcher';\n  import Sidebar from '$lib/components/general/Sidebar.svelte';\n  import AnnouncementHeader from '$lib/components/announcements/AnnouncementHeader.svelte';\n  import { base } from '$app/paths';\n  import { browser } from '$app/environment';\n  import { PUBLIC_GOOGLE_SITE_TAG } from '$env/static/public';\n  import type { LayoutData } from './$types';\n  import { TolgeeProvider } from '@tolgee/svelte';\n  import { initializeStores, AppShell, Modal, storePopup, Drawer, Toast } from '@skeletonlabs/skeleton';\n  import TopBar from '$lib/components/general/TopBar.svelte';\n  import './_global.postcss';\n  import { computePosition, autoUpdate, offset, shift, flip, arrow } from '@floating-ui/dom';\n\n  export let data: LayoutData;\n\n  const { client, tolgee } = data;\n\n  initializeStores();\n  storePopup.set({ computePosition, autoUpdate, offset, shift, flip, arrow });\n\n  let gTag: unknown;\n  if (browser) {\n    gTag = PUBLIC_GOOGLE_SITE_TAG as string;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    window.gTag = gTag;\n  }\n\n  let root: HTMLElement;\n  onMount(async () => {\n    if (browser) {\n      root = document.body;\n\n      await import('cookieconsent/src/cookieconsent');\n\n      tolgee.on('initialLoad', () => {\n        if ('cookieconsent' in window) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          // cspell:ignore initialise\n          window.cookieconsent.initialise({\n            palette: {\n              popup: {\n                background: '#000'\n              },\n              button: {\n                background: '#f1d600'\n              }\n            },\n            content: {\n              message: tolgee.t('cookieconsent.message'),\n              link: tolgee.t('cookieconsent.link'),\n              dismiss: tolgee.t('cookieconsent.dismiss')\n            },\n            theme: 'edgeless',\n            position: 'bottom-right'\n          });\n        }\n      });\n\n      customProtocolCheck.set(await import('$lib/thirdparty/custom_protocol'));\n\n      if (localStorage.getItem('hasLauncher') && localStorage.getItem('hasLauncher').toLocaleLowerCase() === 'true') {\n        hasLauncher.set(true);\n      }\n\n      hasLauncher.subscribe((value) => {\n        if (value === true || value === false) {\n          localStorage.setItem('hasLauncher', value.toString().toLocaleLowerCase());\n        }\n      });\n    }\n  });\n\n  let accessibility = false;\n  $: root && (accessibility ? root.classList.add('accessibility') : root.classList.remove('accessibility'));\n\n  setContextClient(client);\n</script>\n\n<svelte:head>\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"{base}/assets/favicon.ico\" />\n  <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"{base}/assets/apple-touch-icon.png?v=69P26YMB35\" />\n  <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"{base}/assets/favicon-32x32.png?v=69P26YMB35\" />\n  <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"{base}/assets/favicon-16x16.png?v=69P26YMB35\" />\n  <link rel=\"manifest\" href=\"{base}/manifest.json?v=69P26YMB35\" />\n  <link rel=\"mask-icon\" href=\"{base}/assets/safari-pinned-tab.svg?v=69P26YMB35\" color=\"#da8517\" />\n  <link rel=\"shortcut icon\" href=\"{base}/assets/favicon.ico?v=69P26YMB35\" />\n  <meta name=\"msapplication-TileColor\" content=\"#da8517\" />\n  <meta name=\"msapplication-config\" content=\"{base}/static/assets/browserconfig.xml?v=69P26YMB35\" />\n  <meta name=\"theme-color\" content=\"#ff6f00\" />\n\n  <link rel=\"preload\" href=\"{base}/assets/fonts/flow-rounded.woff\" as=\"font\" type=\"font/woff\" />\n\n  {#if gTag}\n    <!-- Global site tag (gtag.js) - Google Analytics -->\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id={gTag}\"></script>\n    <script>\n      window.dataLayer = window.dataLayer || [];\n\n      function gtag() {\n        dataLayer.push(arguments);\n      }\n\n      gtag('js', new Date());\n\n      gtag('config', window['gTag']);\n    </script>\n  {/if}\n</svelte:head>\n\n<TolgeeProvider {tolgee}>\n  <Toast />\n  <Modal />\n\n  <Drawer>\n    <Sidebar bind:accessibility />\n  </Drawer>\n\n  <AppShell>\n    <svelte:fragment slot=\"header\">\n      <TopBar />\n    </svelte:fragment>\n\n    <svelte:fragment slot=\"sidebarLeft\">\n      <aside class=\"hidden xl:block h-full\">\n        <Sidebar bind:accessibility />\n      </aside>\n    </svelte:fragment>\n\n    <svelte:fragment slot=\"pageHeader\">\n      <AnnouncementHeader />\n    </svelte:fragment>\n\n    <div class=\"app-content w-full overflow-auto\">\n      <main class=\"main-content min-h-100% xl:py-6 xl:pr-3\">\n        <slot />\n      </main>\n    </div>\n  </AppShell>\n\n  <LoginDialog />\n</TolgeeProvider>\n"],"file":"_app/immutable/nodes/0.cd90c428.js"}