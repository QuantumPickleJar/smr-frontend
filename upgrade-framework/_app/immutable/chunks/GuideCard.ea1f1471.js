import{S as q,i as z,s as A,d as $,aY as p,v as D,be as h,a$ as G,a2 as k,a3 as E,a4 as _,p as P,t as S,a6 as j,x as w,aa as B,y as b,z as v,ab as R,q as f,B as x,a8 as V,l as I,a7 as y,ac as Y}from"./vendor.81901611.js";import{F as N}from"./FicsitCard.5849d600.js";import{a as g}from"./formatting.6f84ef8f.js";const C="src/lib/components/guides/GuideCard.svelte";function F(o){let e;const n={c:function(){e=B("visibility")},l:function(i){e=R(i,"visibility")},m:function(i,t){I(i,e,t)},d:function(i){i&&f(e)}};return $("SvelteRegisterBlock",{block:n,id:F.name,type:"slot",source:'(11:10) <Icon class=\\"material-icons align-middle text-sm\\">',ctx:o}),n}function O(o){let e,n,c,i=g(o[0].views)+"",t,r;c=new G({props:{class:"material-icons align-middle text-sm",$$slots:{default:[F]},$$scope:{ctx:o}},$$inline:!0});const l={c:function(){e=w("div"),n=w("span"),k(c.$$.fragment),t=B(i),this.h()},l:function(a){e=b(a,"DIV",{slot:!0});var u=v(e);n=b(u,"SPAN",{});var d=v(n);E(c.$$.fragment,d),t=R(d,i),d.forEach(f),u.forEach(f),this.h()},h:function(){x(n,C,10,4,442),V(e,"slot","stats"),x(e,C,9,2,419)},m:function(a,u){I(a,e,u),y(e,n),_(c,n,null),y(n,t),r=!0},p:function(a,u){const d={};u&4&&(d.$$scope={dirty:u,ctx:a}),c.$set(d),(!r||u&1)&&i!==(i=g(a[0].views)+"")&&Y(t,i)},i:function(a){r||(P(c.$$.fragment,a),r=!0)},o:function(a){S(c.$$.fragment,a),r=!1},d:function(a){a&&f(e),j(c)}};return $("SvelteRegisterBlock",{block:l,id:O.name,type:"slot",source:"(10:2) ",ctx:o}),l}function m(o){let e,n;e=new N({props:{name:o[0].name,logo:o[1],description:o[0].short_description,link:p+`/guide/${o[0].id}`,$$slots:{stats:[O]},$$scope:{ctx:o}},$$inline:!0});const c={c:function(){k(e.$$.fragment)},l:function(t){E(e.$$.fragment,t)},m:function(t,r){_(e,t,r),n=!0},p:function(t,[r]){const l={};r&1&&(l.name=t[0].name),r&2&&(l.logo=t[1]),r&1&&(l.description=t[0].short_description),r&1&&(l.link=p+`/guide/${t[0].id}`),r&5&&(l.$$scope={dirty:r,ctx:t}),e.$set(l)},i:function(t){n||(P(e.$$.fragment,t),n=!0)},o:function(t){S(e.$$.fragment,t),n=!1},d:function(t){j(e,t)}};return $("SvelteRegisterBlock",{block:c,id:m.name,type:"component",source:"",ctx:o}),c}function H(o,e,n){let{$$slots:c={},$$scope:i}=e;D("GuideCard",c,[]);let{guide:t}=e,{logo:r=h+"/images/no_image.webp"}=e;o.$$.on_mount.push(function(){t===void 0&&!("guide"in e||o.$$.bound[o.$$.props.guide])&&console.warn("<GuideCard> was created without expected prop 'guide'")});const l=["guide","logo"];return Object.keys(e).forEach(s=>{!~l.indexOf(s)&&s.slice(0,2)!=="$$"&&s!=="slot"&&console.warn(`<GuideCard> was created with unknown prop '${s}'`)}),o.$$set=s=>{"guide"in s&&n(0,t=s.guide),"logo"in s&&n(1,r=s.logo)},o.$capture_state=()=>({assets:h,base:p,Icon:G,FicsitCard:N,prettyNumber:g,guide:t,logo:r}),o.$inject_state=s=>{"guide"in s&&n(0,t=s.guide),"logo"in s&&n(1,r=s.logo)},e&&"$$inject"in e&&o.$inject_state(e.$$inject),[t,r]}class M extends q{constructor(e){super(e),z(this,e,H,m,A,{guide:0,logo:1}),$("SvelteRegisterComponent",{component:this,tagName:"GuideCard",options:e,id:m.name})}get guide(){throw new Error("<GuideCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set guide(e){throw new Error("<GuideCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get logo(){throw new Error("<GuideCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set logo(e){throw new Error("<GuideCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{M as G};
//# sourceMappingURL=GuideCard.ea1f1471.js.map
