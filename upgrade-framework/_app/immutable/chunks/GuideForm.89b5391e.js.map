{"version":3,"file":"GuideForm.89b5391e.js","sources":["../../../../../../src/lib/models/guides.ts","../../../../../../src/lib/components/guides/GuideForm.svelte"],"sourcesContent":["import * as zod from 'zod';\n\nexport type GuideData = {\n  name: string;\n  short_description: string;\n  guide: string;\n};\n\nexport const guideSchema = zod.object({\n  name: zod.string().min(3).max(32),\n  short_description: zod.string().min(16).max(128),\n  guide: zod.string()\n});\n","<script lang=\"ts\">\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { reporter, ValidationMessage } from '@felte/reporter-svelte';\n  import type { GuideData } from '$lib/models/guides';\n  import { guideSchema } from '$lib/models/guides';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { markdown } from '$lib/utils/markdown';\n  import Textfield from '@smui/textfield';\n  import Button from '@smui/button';\n\n  export let onSubmit: (data: GuideData) => void;\n  export let initialValues: GuideData | undefined = {\n    name: '',\n    guide: '',\n    short_description: ''\n  };\n  export let submitText = 'Create';\n\n  const { form, data } = createForm<GuideData>({\n    initialValues: initialValues,\n    extend: [validator({ schema: guideSchema }), reporter],\n    onSubmit: (submitted: GuideData) => onSubmit(trimNonSchema(submitted, guideSchema))\n  });\n\n  $: preview = ($data.guide as string) || '';\n</script>\n\n<form use:form>\n  <div class=\"grid grid-flow-row gap-6\">\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.name} label=\"Name\" required />\n      <ValidationMessage for=\"name\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.short_description} label=\"Short Description\" required />\n      <ValidationMessage for=\"short_description\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid gap-6 split\">\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <Textfield textarea class=\"vertical-textarea\" bind:value={$data.guide} label=\"Guide\" required input$rows={10} />\n        <ValidationMessage for=\"guide\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <span>Preview:</span>\n        {#await markdown(preview) then previewRendered}\n          <div class=\"markdown-content right\">{@html previewRendered}</div>\n        {/await}\n      </div>\n    </div>\n\n    <div>\n      <Button variant=\"outlined\" type=\"submit\">{submitText}</Button>\n    </div>\n  </div>\n</form>\n\n<style lang=\"postcss\">\n  .split {\n    grid-template-columns: 50% 50%;\n\n    & .right {\n      max-height: 75vh;\n      overflow: auto;\n    }\n  }\n</style>\n"],"names":["guideSchema","zod.object","name","zod.string","min","max","short_description","guide","t_value","ctx","insert_hydration_dev","target","span","anchor","dirty","set_data_dev","t","div","innerHTML","raw_value","textfield0_props","value","message","textfield1_props","textfield2_props","handle_promise","promise","markdown","info","form_1","append_hydration_dev","div6","div0","div1","div4","div2","div3","div5","textfield0_changes","textfield1_changes","textfield2_changes","onSubmit","$$props","initialValues","submitText","form","data","createForm","extend","validator","schema","reporter","submitted","trimNonSchema","$$self","$$","not_equal","$data","preview"],"mappings":"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"}